{"version":3,"sources":["containers/About/index.js","components/FormTextField.js","components/FormMultiSelectField.js","globals/validators.js","containers/ContactForm/form-validations.js","state/snackbar/index.js","services/index.js","services/groups.js","services/contacts.js","router/routes.js","router/router-config.js","state/helpers/loading.js","state/helpers/changelog.js","state/helpers/useStateProvider.js","state/helpers/index.js","state/helpers/modified.js","state/global/index.js","state/history/index.js","state/contacts/index.js","containers/ContactForm/index.js","components/ContactCard.js","containers/ContactList/index.js","containers/ContactDetail/index.js","containers/GroupForm/form-validations.js","state/groups/index.js","containers/GroupForm/index.js","containers/Menu/DrawerMenu.js","router/ComponentSelector.js","components/IconElementList.js","containers/Navbar/index.js","containers/Loader/index.js","containers/Snackbar/index.js","containers/Menu/LeftMenu.js","App.js","registerServiceWorker.js","index.js"],"names":["injectSheet","cardRoot","margin","cardText1stLine","fontSize","cardText2ndLine","paddingTop","paddingBottom","_ref","classes","react_default","a","createElement","card","interactive","elevation","Elevation","TWO","className","FormTextField","input","label","placeholder","_ref$meta","meta","touched","error","custom","Object","objectWithoutProperties","formGroup","helperText","intent","undefined","inputGroup","assign","defaultProps","contactGroupMultiSelect","&.bp3-popover-target","width","contactGroupTagInputProps","& .bp3-input-ghost","options","_ref$input","value","onChange","indexesOptions","length","forEach","o","multiSelect","shouldDismissPopover","noResults","menuItem","disabled","text","popoverProps","minimal","targetClassName","items","selectedItems","onItemSelect","opt","indexOf","concat","toConsumableArray","splice","tagInputProps","fill","onRemove","index","itemRenderer","_ref2","handleClick","active","key","onClick","tagRenderer","requiredValidation","isEmail","test","isUrl","RegExp","maxLength","validate","values","errors","email","name","imgUrl","snackbar","stateCreate","exported","state","actions","setMessage","message","update","displayError","close","firebase","apiKey","authDomain","databaseURL","BASE_URL","getGroupsService","firebaseConnection","database","ref","Promise","resolve","reject","once","groupsDB","groupsDBValue","val","groups","keys","map","id","push","objectSpread","err","getGroupService","groupDB","groupDBValue","postGroupService","group","post","set","updateGroupService","others","getContactsService","contactsDB","contactsDBValue","contacts","getContactService","contactDB","contactDBValue","postContactService","contact","updateContactService","deleteContactService","ROUTES","HOME","ADD_CONTACT","LIST_CONTACTS","CONTACT_DETAILS","ADD_GROUP","EDIT_CONTACT","routes","path","router","createRouter","defaultRoute","autoCleanup","usePlugin","loggerPlugin","browserPlugin","useHash","forceDeactivate","configureRouter","start","navigate","loading","stateModule","actionName","isSync","originalAction","_plusLoading","asyncToGenerator","regenerator_default","mark","_callee","_len","args","_key","result","_args","arguments","wrap","_context","prev","next","console","groupCollapsed","Array","log","groupEnd","GlobalActions","setLoading","get","apply","sent","abrupt","stop","this","changelogs","useMultipleStates","finalState","stateModules","module","_reactUseState","reactUseState","_reactUseState2","slicedToArray","setState","handler","useCallback","newState","reactUseEffect","on","off","Error","loadingModule","modified","initState","setModified","modifiedFlag","changelog","Symbol","defineProperty","changes","previousSnap","previousValue","original","snapshot","updatedAt","Date","now","jsonDiff","diffString","useStateProvider","useState","_len2","modules","_key2","LIST_MODE","CARD_MODE","global","total","mode","menu","left","right","changeMode","SnackbarActions","toggleLeftMenu","setRightMenuVisibility","visible","textToRouter","List","About","Add Contact","Add Group","transitionToEditContact","transitionToContactDetail","transitionToMenuOption","history","goBack","window","back","list","current","loadData","groupsResponse","newGroups","contactsResponse","newContacts","t0","groupNames","groupId","join","_callee2","response","_context2","_callee3","_context3","saveContact","deleteContact","selectors","contactList","CreateOrEditContactPage","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","alertIsOpen","handleCancel","bind","assertThisInitialized","handleContinue","_this2","_this$props","route","params","canDeactivate","routerProvided","toState","fromState","continue","cancel","nextProps","_this3","alert_alert","cancelButtonText","confirmButtonText","icon","isOpen","onCancel","onConfirm","bey","to","react_final_form_es","onSubmit","initialValues","render","handleSubmit","pristine","invalid","submitting","reset","formCard","formContainer","dirty","component","FormMultiSelectField","buttonsContainer","buttons","type","Component","padding","display","justifyContent","ContactCard","onEditClick","onDeleteClick","big","loadingClass","Classes","SKELETON","cardContentContainer","cardHeader","alt","src","cardImage","cardTextContainer","cardTextGroup","buttonContainer","button","& .bp3-card.bp3-interactive","position","textAlign","height","bottom","color","background","maxHeight","maxWidth","marginRight","Pop","posed","div","hoverable","init","scale","hover","Item","enter","opacity","transition","delay","i","exit","ContactListCards","components_ContactCard","HistoryActions","ContactsActions","ContactListItems","react_pose_es","role","onKeyPress","e","contactListItem","style","contactListItemImage","contactListItemAvatar","substring","toUpperCase","contactListItemTextContainer","contactListItemText1stLine","contactListItemText2ndLine","stopPropagation","&.bp3-tag.bp3-interactive","paddingLeft","backgroundColor","boxShadow","&.bp3-tag.bp3-interactive:hover","&.bp3-tag.bp3-interactive.selected","minWidth","flexDirection","alignSelf","marginLeft","fontWeight","lineHeight","borderRadius","contactListRoot","flex","contactListItemsContainer","contactListCardsContainer","flexWrap","useEffect","_useMultipleStates","Contacts","Global","_useMultipleStates2","ContactPage","ContactsState","contactDetailRoot","PureComponent","saveGroup","CreateOrEditGroupPage","GroupActions","GroupState","form","styles","sidebar","root","content","overlay","mql","matchMedia","_useState","isSmallScreen","matches","_useState2","mediaQueryChanged","isOpenChanged","GlobalState","addListener","removeListener","react_sidebar_esm","open","pullRight","touch","onSetOpen","children","contactDetailsLayout","editContactLayout","containers_About","GroupForm","containers_ContactList","Menu_DrawerMenu","ContactDetail","ContactForm","IconElementList","changeListMode","popover","Position","RIGHT_TOP","MyNavbar","Fragment","navbar","Group","align","Alignment","LEFT","Divider","Heading","RIGHT","components_IconElementList","Loader","toaster","TOP","toast","progressBar","SB","SnackbarState","BOTTOM","timeout","onDismiss","leftMenuRoot","&.selected","selectMenuOption","target","textContent","StyledInnerMenu","smallScreen","LeftMenu","setSmallScreen","App","rest","minHeight","index_es","Navbar","containers_Loader","_ref3","Menu_LeftMenu","router_ComponentSelector","Snackbar","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"oPAqCeA,kBAhCA,CACbC,SAAU,CACRC,OAAQ,OAEVC,gBAAiB,CACfC,SAAU,QAEZC,gBAAiB,CACfC,WAAY,OACZF,SAAU,OACVG,cAAe,QAsBJP,CAlBf,SAAAQ,GAEG,IADDC,EACCD,EADDC,QAEA,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,aAAW,EAACC,UAAWC,IAAUC,IAAKC,UAAWT,EAAQR,UAC7DS,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,OAAKM,UAAWT,EAAQN,iBAAxB,wBACAO,EAAAC,EAAAC,cAAA,OAAKM,UAAWT,EAAQJ,iBAAxB,qKCtBN,SAASc,EAATX,GAEG,IADDY,EACCZ,EADDY,MAAOC,EACNb,EADMa,MAAOC,EACbd,EADac,YACbC,EAAAf,EAD0BgB,KAAQC,EAClCF,EADkCE,QAASC,EAC3CH,EAD2CG,MAAYC,EACvDC,OAAAC,EAAA,EAAAD,CAAApB,EAAA,wCACD,OACEE,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CACEC,WAAYL,EACZL,MAAOA,EACPW,OAAQP,GAAWC,EAAQ,cAAWO,GAEtCvB,EAAAC,EAAAC,cAACsB,EAAA,EAADN,OAAAO,OAAA,CACEb,YAAaA,EACbU,OAAQP,GAAWC,EAAQ,cAAWO,GAClCb,EACAO,KAcZR,EAAciB,aAAe,CAC3BT,OAAQ,IAGKR,kCCuDAnB,kBApFA,CACbqC,wBAAyB,CACvBC,uBAAwB,CACtBC,MAAO,SAGXC,0BAA2B,CACzBC,qBAAsB,CACpBrC,SAAU,UA4EDJ,CAvEf,SAAAQ,GASG,IARDkC,EAQClC,EARDkC,QAQCC,EAAAnC,EAPDY,MACEwB,EAMDD,EANCC,MAAOC,EAMRF,EANQE,SAETxB,EAICb,EAJDa,MAICE,EAAAf,EAHDgB,KAAQC,EAGPF,EAHOE,QAASC,EAGhBH,EAHgBG,MACjBjB,EAECD,EAFDC,QACGkB,EACFC,OAAAC,EAAA,EAAAD,CAAApB,EAAA,8CACKsC,EAAiB,GAOvB,OANIJ,GAAWA,EAAQK,OAAS,GAC9BL,EAAQM,QAAQ,SAACC,GACfH,EAAeG,EAAEL,OAASK,IAK5BvC,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CACEC,WAAYL,EACZL,MAAOA,EACPW,OAAQP,GAAWC,EAAQ,cAAWO,GAEtCvB,EAAAC,EAAAC,cAACsC,EAAA,EAADtB,OAAAO,OAAA,CACEgB,sBAAsB,EACtBC,UAAW1C,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAUC,UAAQ,EAACC,KAAK,gBACnCC,aAAc,CAAEC,SAAS,EAAMC,gBAAiBjD,EAAQ4B,yBACxDsB,MAAOjB,EACPkB,cAAyB,KAAVhB,EAAe,GAAKA,EACnCiB,aAAc,SAACC,IACqB,IAA9BlB,EAAMmB,QAAQD,EAAIlB,OACpBC,EAAQ,GAAAmB,OAAApC,OAAAqC,EAAA,EAAArC,CAAKgB,GAAL,CAAYkB,EAAIlB,UAExBA,EAAMsB,OAAOtB,EAAMmB,QAAQD,EAAIlB,OAAQ,GACvCC,EAASD,KAGbuB,cAAe,CACb7C,YAAa,2BACb8C,MAAM,EACNlD,UAAWT,EAAQ+B,0BACnB6B,SAAU,SAACP,EAAKQ,GACV1B,GAASA,EAAMG,OAAS,IAC1BH,EAAMsB,OAAOI,EAAO,GACpBzB,EAASD,MAIf2B,aAAc,SAACT,EAADU,GAAA,IAAQC,EAARD,EAAQC,YAAR,OACZ/D,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CACEqB,QAAsC,IAA9B9B,EAAMmB,QAAQD,EAAIlB,OAC1B+B,IAAG,UAAAX,OAAYF,EAAIlB,OACnBW,KAAMO,EAAIP,KACVqB,QAASH,KAGbI,YAAa,SAACf,GAAD,OAAShB,EAAegB,GAAKP,OACtC5B,OC5ECmD,EAAqB,SAAClC,GAAD,YAAqBX,IAAVW,GAAiC,OAAVA,GAA4B,KAAVA,GAEzEmC,EAAU,SAACnC,GACtB,GAAIA,EAAO,CAET,MADe,04BACDoC,KAAKpC,GAErB,OAAO,GAGIqC,EAAQ,SAACrC,GACpB,OAAIA,GACa,IAAIsC,OAAO,sbACZF,KAAKpC,IAKVuC,EAAY,SAACvC,EAAOG,GAAR,OAAmBH,GAASA,EAAMG,OAASA,GChBrD,SAASqC,EAASC,GAC/B,IAAMC,EAAS,GAYf,OAXKR,EAAmBO,EAAOE,OAEnBR,EAAQM,EAAOE,SACzBD,EAAOC,MAAQ,6BAFfD,EAAOC,MAAQ,oBAIZT,EAAmBO,EAAOG,QAC7BF,EAAOE,KAAO,oBAEXP,EAAMI,EAAOI,UAChBH,EAAOG,OAAS,eAEXH,+BCbHI,EAAWC,gBAAY,MAsB7B,IAAMC,EAAW,CACfJ,KAAM,WACNK,MAAOH,EACPI,QAAS,CAAEC,WAvBb,SAAoBC,GAClBC,iBAAOP,EAAU,kBAAMM,KAsBAE,aAnBzB,SAAsBxE,GACpB,IAAIsE,EAAU,gBAEVtE,GAASA,EAAMsE,QAEjBA,EAAUtE,EAAMsE,QACU,kBAAVtE,IAChBsE,EAAUtE,GAEZuE,iBAAOP,EAAU,kBAAMM,KAUcG,MAPvC,WACEF,iBAAOP,EAAU,kBAAM,UAQVG,EAAmBD,EAAnBC,MAAOC,EAAYF,EAAZE,wBCrBtBM,gBANe,CACbC,OAAQ,0CACRC,WAAY,qCACZC,YAAa,+CAKAH,QCRTI,EAAW,UAEV,SAASC,IACd,IAAMC,EAAqBN,EAASO,WAAWC,IAApB,GAAA5C,OAA2BwC,IACtD,OAAO,IAAIK,QAAQ,SAACC,EAASC,GAC3BL,EAAmBM,KACjB,QACA,SAACC,GACC,IAAMC,EAAgBD,EAASE,MACzBC,EAAS,GAKf,OAJAxF,OAAOyF,KAAKH,GAAeI,IAAI,SAACC,GAAD,OAAQH,EAAOI,KAAP5F,OAAA6F,EAAA,EAAA7F,CAAA,CACrC2F,MACGL,EAAcK,OAEZT,EAAQM,IAEjB,SAACM,GAAD,OAASX,EAAOW,OAKf,SAASC,EAAgBJ,GAC9B,IAAMb,EAAqBN,EAASO,WAAWC,IAApB,GAAA5C,OAA2BwC,EAA3B,KAAAxC,OAAuCuD,IAClE,OAAO,IAAIV,QAAQ,SAACC,EAASC,GAC3BL,EAAmBM,KACjB,QACA,SAACY,GACC,IAAMC,EAAeD,EAAQT,MAE7B,OADAU,EAAaN,GAAKA,EACXT,EAAQe,IAEjB,SAACH,GAAD,OAASX,EAAOW,OAKf,SAASI,EAAiBC,GAC/B,IAAMrB,EAAqBN,EAASO,WAAWC,IAApB,GAAA5C,OAA2BwC,IACtD,OAAO,IAAIK,QAAQ,SAACC,EAASC,GAC3B,IAAMiB,EAAOtB,EAAmBc,OAChCQ,EAAKC,IAAIF,EAAO,SAACL,GACf,OAAIA,EACKX,EAAOW,GAETZ,EAAQlF,OAAA6F,EAAA,EAAA7F,CAAA,CACb2F,GAAIS,EAAKrD,KACNoD,QAMJ,SAASG,EAAT1H,GAA+C,IAAjB+G,EAAiB/G,EAAjB+G,GAAOY,EAAUvG,OAAAC,EAAA,EAAAD,CAAApB,EAAA,QAC9CkG,EAAqBN,EAASO,WAAWC,IAApB,GAAA5C,OAA2BwC,EAA3B,KAAAxC,OAAuCuD,IAClE,OAAO,IAAIV,QAAQ,SAACC,EAASC,GAC3BL,EAAmBuB,IAAnBrG,OAAA6F,EAAA,EAAA7F,CAAA,GAA4BuG,GAAU,SAACT,GACrC,OAAIA,EACKX,EAAOW,GAETZ,EAAQlF,OAAA6F,EAAA,EAAA7F,CAAA,CACb2F,MACGY,QC7DX,IAAM3B,EAAW,QAEV,SAAS4B,IACd,IAAM1B,EAAqBN,EAASO,WAAWC,IAApB,GAAA5C,OAA2BwC,IACtD,OAAO,IAAIK,QAAQ,SAACC,EAASC,GAC3BL,EAAmBM,KACjB,QACA,SAACqB,GACC,IAAMC,EAAkBD,EAAWlB,MAC7BoB,EAAW,GAKjB,OAJA3G,OAAOyF,KAAKiB,GAAiBhB,IAAI,SAACC,GAAD,OAAQgB,EAASf,KAAT5F,OAAA6F,EAAA,EAAA7F,CAAA,CACvC2F,MACGe,EAAgBf,OAEdT,EAAQyB,IAEjB,SAACb,GAAD,OAASX,EAAOW,OAKf,SAASc,EAAkBjB,GAChC,IAAMb,EAAqBN,EAASO,WAAWC,IAApB,GAAA5C,OAA2BwC,EAA3B,KAAAxC,OAAuCuD,IAClE,OAAO,IAAIV,QAAQ,SAACC,EAASC,GAC3BL,EAAmBM,KACjB,QACA,SAACyB,GACC,IAAMC,EAAiBD,EAAUtB,MAIjC,OAHIuB,IACFA,EAAenB,GAAKA,GAEfT,EAAQ4B,IAEjB,SAAChB,GAAD,OAASX,EAAOW,OAKf,SAASiB,GAAmBC,GACjC,IAAMlC,EAAqBN,EAASO,WAAWC,IAApB,GAAA5C,OAA2BwC,IACtD,OAAO,IAAIK,QAAQ,SAACC,EAASC,GAC3B,IAAMiB,EAAOtB,EAAmBc,OAChCQ,EAAKC,IAAIW,EAAS,SAAClB,GACjB,OAAIA,EACKX,EAAOW,GAETZ,EAAQlF,OAAA6F,EAAA,EAAA7F,CAAA,CACb2F,GAAIS,EAAKrD,KACNiE,QAMJ,SAASC,GAATrI,GAAiD,IAAjB+G,EAAiB/G,EAAjB+G,GAAOY,EAAUvG,OAAAC,EAAA,EAAAD,CAAApB,EAAA,QAChDkG,EAAqBN,EAASO,WAAWC,IAApB,GAAA5C,OAA2BwC,EAA3B,KAAAxC,OAAuCuD,IAClE,OAAO,IAAIV,QAAQ,SAACC,EAASC,GAC3BL,EAAmBuB,IAAnBrG,OAAA6F,EAAA,EAAA7F,CAAA,GAA4BuG,GAAU,SAACT,GACrC,OAAIA,EACKX,EAAOW,GAETZ,EAAQlF,OAAA6F,EAAA,EAAA7F,CAAA,CACb2F,MACGY,QAMJ,SAASW,GAAqBvB,GACnC,IAAMb,EAAqBN,EAASO,WAAWC,IAApB,GAAA5C,OAA2BwC,EAA3B,KAAAxC,OAAuCuD,IAClE,OAAO,IAAIV,QAAQ,SAACC,EAASC,GAC3BL,EAAmBuB,IAAI,KAAM,SAACP,GAC5B,OAAIA,EACKX,EAAOW,GAETZ,EAAQ,CAAES,0CC9EVwB,GAAS,CACpBC,KAAM,OACNC,YAAa,aACbC,cAAe,eACfC,gBAAiB,iBACjBC,UAAW,WACXC,aAAc,eAGHC,GAAS,CACpB,CAAE9D,KAAMuD,GAAOC,KAAMO,KAAM,KAC3B,CAAE/D,KAAMuD,GAAOE,YAAaM,KAAM,QAClC,CAAE/D,KAAMuD,GAAOG,cAAeK,KAAM,SACpC,CAAE/D,KAAMuD,GAAOM,aAAcE,KAAM,aACnC,CAAE/D,KAAMuD,GAAOI,gBAAiBI,KAAM,eACtC,CAAE/D,KAAMuD,GAAOK,UAAWG,KAAM,eCQlC,IAAMC,GAlBN,WACE,IAAMA,EAASC,aAAaH,GAAQ,CAClCI,aAAc,OACdC,aAAa,IAYf,OARAH,EAAOI,UACLC,KACAC,aAAc,CACZC,SAAS,EACTC,iBAAiB,KAIdR,EAGMS,GACfT,GAAOU,YAEQC,GAAaX,GAAbW,SACAX,MCnBA,SAASY,GAAQC,GAoC9B,OAnCIA,EAAYvE,SAAWlE,OAAOyD,OAAOgF,EAAYvE,SAAS/C,OAAS,GACrEnB,OAAOyF,KAAKgD,EAAYvE,SAAS9C,QAAQ,SAACsH,GACxC,GACED,EAAYvE,QAAQwE,IAC0B,oBAApCD,EAAYvE,QAAQwE,KATf,IAUJD,EAAYvE,QAAQwE,GAV3BC,OAWJ,CACA,IAAMC,EAAiBH,EAAYvE,QAAQwE,GAE3CD,EAAYvE,QAAQwE,GAApB,eAAAG,EAAA7I,OAAA8I,EAAA,EAAA9I,CAAA+I,EAAAhK,EAAAiK,KAAkC,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,UAAA,OAAAR,EAAAhK,EAAAyK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WAEhCC,QAAQC,eAAR,IAAAzH,OAA2BqG,EAAY7E,KAAvC,wBAAAxB,OAAkEsG,EAAlE,OAFgCQ,EAAAI,EAAAnI,OAA8BgI,EAA9B,IAAAW,MAAAZ,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAA8BD,EAA9BC,GAAAE,EAAAF,GAAA,OAGhCQ,QAAQG,IAAR,oBAAA3H,OAAgC+G,IAChCS,QAAQI,WACRC,GAAcC,YAAW,EAAMzB,EAAY7E,OAErB,IADA6E,EAAYxE,MAAMkG,MAAM3B,SAE5CnE,iBAAOoE,EAAYxE,MAAO,SAACA,GACzBA,EAAMuE,SAAU,IATYiB,EAAAE,KAAA,EAYXf,EAAcwB,WAAd,EAAkBjB,GAZP,cAY1BE,EAZ0BI,EAAAY,MAcX,IADA5B,EAAYxE,MAAMkG,MAAM3B,SAE3CnE,iBAAOoE,EAAYxE,MAAO,SAACA,GACzBA,EAAMuE,SAAU,IAGpByB,GAAcC,YAAW,EAAOzB,EAAY7E,MAnBZ6F,EAAAa,OAAA,SAoBzBjB,GApByB,yBAAAI,EAAAc,SAAAtB,EAAAuB,SAAlC,yBAAA3B,EAAAuB,MAAAI,KAAAjB,YAAA,MA0BCd,4CCxCHgC,GAAa1G,gBAAY,iBCDxB,SAAS2G,KAAmC,IACjD,IAAMC,EAAa,GAD8BzB,EAAAK,UAAApI,OAAdyJ,EAAc,IAAAd,MAAAZ,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAdwB,EAAcxB,GAAAG,UAAAH,GAGjD,GAAIwB,GAAgBA,EAAazJ,OAAS,EAqBxC,OApBAyJ,EAAaxJ,QAAQ,SAACyJ,GAAW,IAAAC,EACLC,mBAAcF,EAAO5G,MAAMkG,OADtBa,EAAAhL,OAAAiL,GAAA,EAAAjL,CAAA8K,EAAA,GACxB7G,EADwB+G,EAAA,GACjBE,EADiBF,EAAA,GAG/BL,EAAW/E,KAAK3B,GAEhB,IAAMkH,EAAUC,sBAAY,WAC1B,IAAMC,EAAWR,EAAO5G,MAAMkG,MAC1BkB,IAAapH,GACfiH,EAASG,KAIbC,oBAAe,WAEb,OADAT,EAAO5G,MAAMsH,GAAGJ,GACT,WACLN,EAAO5G,MAAMuH,IAAIL,QAKhBR,EAET,MAAM,IAAIc,MAAM,4CCvBX,IAAMjD,GAAUkD,GACVC,GCLE,SAAkBlD,GAC/B,GAAIA,EAAYvE,SAA0C,kBAAxBuE,EAAYvE,QAAsB,CAClE,IAAM0H,EAAYnD,EAAYxE,MAAMkG,MACpC1B,EAAYxE,MAAMoC,IAAlBrG,OAAA6F,EAAA,EAAA7F,CAAA,GAA2B4L,EAA3B,CAAsCD,UAAU,KAChDlD,EAAYvE,QAAQ2H,YAAc,SAAqBC,GAChCrD,EAAYxE,MAAMkG,MACtBwB,WAAaG,GAC5BzH,iBAAOoE,EAAYxE,MAAO,SAACA,GACzBA,EAAM0H,SAAWG,KAMzB,OAAOrD,GDRIsD,GFFE,SAAmBtD,GAChC,GAAIA,EAAYvE,SAA0C,kBAAxBuE,EAAYvE,QAAsB,CAClE,IAAMnB,EAAM0F,EAAY7E,MAAQoI,OAAO,oCAEvCvB,GAAWpE,IAAXrG,OAAA6F,EAAA,EAAA7F,CAAA,GACKyK,GAAWN,MADhBnK,OAAAiM,GAAA,EAAAjM,CAAA,GAEG+C,EAAM,CAAEmJ,QAAS,OAGpBzD,EAAYxE,MAAMsH,GAAG,WACnB,IAAMF,EAAW5C,EAAYxE,MAAMkG,MACnC9F,iBAAOoG,GAAY,SAACxG,GAClB,IAAMkI,EAAelI,EAAMlB,GAAKmJ,QAAQjI,EAAMlB,GAAKmJ,QAAQ/K,OAAS,GAC9DiL,EAAgBD,EAAeE,oBAASF,GAAcG,cAAWjM,EACvE4D,EAAMlB,GAAKmJ,QAAQtG,KAAK,CAAE0G,SAAUjB,EAAUkB,UAAWC,KAAKC,QAE9D7C,QAAQC,eAAR,IAAAzH,OAA2BW,EAA3B,oBACA6G,QAAQG,IAAI,QAASqC,GACrBxC,QAAQG,IAAI,MAAOsB,GACnBzB,QAAQG,IAAI,SACZH,QAAQG,IAAI2C,KAASC,WAAWP,EAAef,IAC/CzB,QAAQI,eAKd,OAAOvB,GEtBImE,GDsBE,SAA0BnE,GAUvC,OATIA,GAAsC,kBAAhBA,GAA4BA,EAAYxE,OAAsC,kBAAtBwE,EAAYxE,QAC5FwE,EAAYxE,MAAM4I,SAAW,WAAkC,QAAAC,EAAAvD,UAAApI,OAAT4L,EAAS,IAAAjD,MAAAgD,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAATD,EAASC,GAAAzD,UAAAyD,GAC7D,OAAID,EACKrC,GAAiBN,WAAjB,EAAqB2C,GAEvBrC,GAAkBjC,KAItBA,GGtCHwE,GAAY,OACZC,GAAY,OAEZC,GAASpJ,gBAAY,CACzByE,QAAS,CAAEvE,OAAO,EAAOmJ,MAAO,EAAGhJ,QAAS,MAC5CiJ,KAAMJ,GACNK,KAAM,CACJC,MAAM,EACNC,OAAO,KAsCX,IAAMxJ,GAAW,CACfJ,KAAM,SACNK,MAAOkJ,GACPjJ,QAAS,CACPgG,WAtCJ,SAAoB1B,EAASpE,GAC3BC,iBAAO8I,GAAQ,SAAClJ,GACVuE,EACFvE,EAAMuE,QAAQ4E,OAAS,EAEvBnJ,EAAMuE,QAAQ4E,OAAS,EAGzBnJ,EAAMuE,QAAQvE,MAAQA,EAAMuE,QAAQ4E,MAAQ,EAC5CnJ,EAAMuE,QAAQpE,QAAUA,KA6BZqJ,WAzBhB,SAAoBJ,GACdA,IAASJ,IAAaI,IAASH,KACjC7I,iBAAO8I,GAAQ,SAAClJ,GACdA,EAAMoJ,KAAOA,IAEfK,EAAgBvJ,WAAhB,oBAAA/B,OAA+CiL,MAoBvBM,eAhB5B,WACEtJ,iBAAO8I,GAAQ,SAAClJ,GACdA,EAAMqJ,KAAKC,MAAQtJ,EAAMqJ,KAAKC,QAcUK,uBAV5C,SAAgCC,GAC9BxJ,iBAAO8I,GAAQ,SAAClJ,GACdA,EAAMqJ,KAAKE,MAAQK,OAWR5J,GAAmBD,GAAnBC,MAAOC,GAAYF,GAAZE,QACP6H,MAAU/H,ICtDnB8J,GAAe,CACnBC,KAAM5G,GAAOG,cACb0G,MAAO7G,GAAOC,KACd6G,cAAe9G,GAAOE,YACtB6G,YAAa/G,GAAOK,WAGTtD,GAAU,CACrBiK,wBAAyB,SAACxI,GACxBsE,GAAc2D,wBAAuB,GACrCrF,GAASpB,GAAOM,aAAc,CAAE9B,QAElCyI,0BAA2B,SAACzI,GAC1BsE,GAAc2D,wBAAuB,GACrCrF,GAASpB,GAAOI,gBAAiB,CAAE5B,QAErC0I,uBAAwB,SAAC1M,GAAD,OAAU4G,GAASuF,GAAanM,MAGpDqC,GAAW,CACfJ,KAAM,UACN0K,QAAS,CACPC,OAAQ,kBAAMC,OAAOF,QAAQG,SAE/BvK,YAEaoK,GAAYtK,GAAZsK,QCfT3H,GAAW5C,gBAAY,CAC3B2K,KAAM,GACNlJ,OAAQ,GACRmJ,QAAS,cAGIC,mFAAf,SAAA3F,EAAwBtD,GAAxB,IAAAkJ,EAAAC,EAAAC,EAAAC,EAAA,OAAAjG,EAAAhK,EAAAyK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAC+B9E,IAD/B,UACQgK,EADRpF,EAAAY,KAEQyE,EAAY,GAElBD,EAAezN,QAAQ,SAAC+E,GACtB2I,EAAU3I,EAAMR,IAAMQ,KAIpBR,EATN,CAAA8D,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAU8B/C,EAAkBjB,GAVhD,OAAA8D,EAAAwF,GAAAxF,EAAAY,KAUI0E,EAVJ,CAAAtF,EAAAwF,IAAAxF,EAAAE,KAAA,wBAAAF,EAAAE,KAAA,GAY6BnD,IAZ7B,QAYIuI,EAZJtF,EAAAY,KAAA,QAeQ2E,EAAc,GAEpBD,EAAiB3N,QAAQ,SAAC4F,GACpBA,IACEA,EAAQxB,QAAUwB,EAAQxB,OAAOrE,OAAS,IAC5C6F,EAAQkI,WAAalI,EAAQxB,OAC1BE,IAAI,SAACyJ,GACJ,OAAIL,EAAUK,GACLL,EAAUK,GAASvL,KAErB,KAERwL,KAAK,OAGVJ,EAAYhI,EAAQrB,IAAMqB,KAI9B3C,iBAAOsC,GAAU,SAAC1C,GACZ0B,EACF1B,EAAM0K,QAAUK,EAAYrJ,IAAO,GAGnC1B,EAAMyK,KAAOM,EAGf/K,EAAMuB,OAASsJ,IA1CnB,yBAAArF,EAAAc,SAAAtB,EAAAuB,6EA8CA,SAAA6E,EAA2BrI,GAA3B,IAAAsI,EAAA,OAAAvG,EAAAhK,EAAAyK,KAAA,SAAA+F,GAAA,cAAAA,EAAA7F,KAAA6F,EAAA5F,MAAA,UAAA4F,EAAA7F,KAAA,GAIQ1C,EAAQrB,GAJhB,CAAA4J,EAAA5F,KAAA,eAAA4F,EAAA5F,KAAA,EAKuB1C,GAAqBD,GAL5C,OAKMsI,EALNC,EAAAlF,KAAAkF,EAAA5F,KAAA,uBAAA4F,EAAA5F,KAAA,EAOuB5C,GAAmBC,GAP1C,OAOMsI,EAPNC,EAAAlF,KAAA,QAWIT,QAAQG,IAAI,2BAA4BuF,GAExCjL,iBAAOsC,GAAU,SAAC1C,GAChBA,EAAM0K,QAAU3H,EAChB/C,EAAM0H,UAAW,IAGnB+B,EAAgBvJ,WAAhB,WAAA/B,OAAsC4E,EAAQrB,GAAK,UAAY,UAA/D,kBAlBJ4J,EAAA5F,KAAA,iBAAA4F,EAAA7F,KAAA,GAAA6F,EAAAN,GAAAM,EAAA,SAoBI7B,EAAgBpJ,aAAhBiL,EAAAN,IApBJ,QAsBEX,GAAQC,SAtBV,yBAAAgB,EAAAhF,SAAA8E,EAAA7E,KAAA,iFAyBA,SAAAgF,EAA6B7J,GAA7B,OAAAoD,EAAAhK,EAAAyK,KAAA,SAAAiG,GAAA,cAAAA,EAAA/F,KAAA+F,EAAA9F,MAAA,UAAA8F,EAAA/F,KAAA,GAEQ/D,EAFR,CAAA8J,EAAA9F,KAAA,eAAA8F,EAAA9F,KAAA,EAGYzC,GAAqBvB,GAHjC,OAIMtB,iBAAOsC,GAAU,SAAC1C,GAChBA,EAAM0K,QAAU,KAGlBjB,EAAgBvJ,WAAW,gCAC3ByK,KATN,OAAAa,EAAA9F,KAAA,gBAAA8F,EAAA/F,KAAA,EAAA+F,EAAAR,GAAAQ,EAAA,SAYI/B,EAAgBpJ,aAAhBmL,EAAAR,IAZJ,QAcEX,GAAQC,SAdV,yBAAAkB,EAAAlF,SAAAiF,EAAAhF,KAAA,mCAqBA,IAAMxG,GAAW,CACfJ,KAAM,WACNK,MAAO0C,GACPzC,QAAS,CAAE0K,YAAUc,yDAAaC,4DAClCC,UAAW,CAAEC,YARf,SAAqB5L,GACnB,MAAO,CAAE0K,QAAS1K,EAAM0K,QAASnJ,OAAQvB,EAAMuB,WAUlCtB,GAA8BF,GAA9BE,QAASD,GAAqBD,GAArBC,MAAO2L,GAAc5L,GAAd4L,UAChBhD,MAAiBb,GAAUJ,GAASnD,GAAQxE,OC5FrD8L,eACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAhQ,OAAAiQ,EAAA,EAAAjQ,CAAAwK,KAAAsF,IACjBE,EAAAhQ,OAAAkQ,EAAA,EAAAlQ,CAAAwK,KAAAxK,OAAAmQ,EAAA,EAAAnQ,CAAA8P,GAAAM,KAAA5F,KAAMuF,KACD9L,MAAQ,CAAEoM,aAAa,GAC5BL,EAAKM,aAAeN,EAAKM,aAAaC,KAAlBvQ,OAAAwQ,EAAA,EAAAxQ,QAAAwQ,EAAA,EAAAxQ,CAAAgQ,KACpBA,EAAKS,eAAiBT,EAAKS,eAAeF,KAApBvQ,OAAAwQ,EAAA,EAAAxQ,QAAAwQ,EAAA,EAAAxQ,CAAAgQ,KAJLA,mFAOC,IAAAU,EAAAlG,KAAAmG,EAC4BnG,KAAKuF,MAAxBpK,EADTgL,EACVC,MAASC,OAAUlL,GAAQiC,EADjB+I,EACiB/I,OAInC,GAHIjC,GACFzB,GAAQ0K,SAASjJ,GAEfiC,EAAQ,CAEV,IAAMkJ,EAAgB,SAACC,GAAD,OAAoB,SAACC,EAASC,GAElD,OAD0BhN,GAAMkG,MAAMwB,UAE7B,IAAI1G,QAAQ,SAACC,EAASC,GAC3BuL,EAAKxF,SAAS,CAAEmF,aAAa,EAAMa,SAAU/L,EAAQgM,OAAQjM,QAKnE0C,EAAOkJ,cAAc3J,GAAOE,YAAayJ,GACzClJ,EAAOkJ,cAAc3J,GAAOM,aAAcqJ,sDAIpBM,GACc5G,KAAKuF,MAAnCa,MAASC,OAAUlL,KAChByL,EAAUR,MAAMC,OAAOlL,IAChCzB,GAAQ0K,SAASwC,EAAUR,MAAMC,OAAOlL,2CAK1C6E,KAAKvG,MAAMiN,WACX1G,KAAKU,SAAS,CAAEmF,aAAa,6CAI7B7F,KAAKvG,MAAMkN,SACX3G,KAAKU,SAAS,CAAEmF,aAAa,qCAGtB,IAAAgB,EAAA7G,KACC6F,EAAgB7F,KAAKvG,MAArBoM,YACAxR,EAAY2L,KAAKuF,MAAjBlR,QACR,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACsS,EAAA,EAAD,CACEC,iBAAiB,SACjBC,kBAAkB,WAClBC,KAAK,QACLrR,OAAO,SACPsR,OAAQrB,EACRsB,SAAUnH,KAAK8F,aACfsB,UAAWpH,KAAKiG,gBAEhB3R,EAAAC,EAAAC,cAAA,qEAEFF,EAAAC,EAAAC,cAAC6S,EAAA,UAAD,CAAWC,GAAI7N,GAAOsH,GAAIqE,GAAUC,aACjC,SAAClJ,GAAD,OACC7H,EAAAC,EAAAC,cAAC+S,EAAA,EAAD,CACEC,SAAU9N,GAAQwL,YAClBlM,SAAUA,EACVyO,cAAeZ,EAAKtB,MAAMa,MAAMC,OAAOlL,GAAKgB,EAASgI,QAAU,GAC/DuD,OAAQ,SAAAtT,GAAA,IACNuT,EADMvT,EACNuT,aAAcC,EADRxT,EACQwT,SAAUC,EADlBzT,EACkByT,QAASC,EAD3B1T,EAC2B0T,WAAYC,EADvC3T,EACuC2T,MADvC,OAGNzT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,aAAW,EACXC,UAAWC,IAAUC,IACrBC,UAAWT,EAAQ2T,UAEnB1T,EAAAC,EAAAC,cAAA,QAAMM,UAAWT,EAAQ4T,cAAeT,SAAUG,GAChDrT,EAAAC,EAAAC,cAAC+S,EAAA,EAAD,CACE9Q,SAAU,SAAA2B,GAAe,IAAZ8P,EAAY9P,EAAZ8P,MACXxO,GAAQ2H,YAAY6G,IAAUJ,MAGlCxT,EAAAC,EAAAC,cAAC+S,EAAA,EAAD,CACEnO,KAAK,OACLnE,MAAM,OACNC,YAAY,OACZiT,UAAWpT,IAEbT,EAAAC,EAAAC,cAAC+S,EAAA,EAAD,CACEnO,KAAK,QACLnE,MAAM,QACNC,YAAY,QACZiT,UAAWpT,IAEbT,EAAAC,EAAAC,cAAC+S,EAAA,EAAD,CACEnO,KAAK,cACLnE,MAAM,eACNC,YAAY,eACZiT,UAAWpT,IAEbT,EAAAC,EAAAC,cAAC+S,EAAA,EAAD,CACEnO,KAAK,SACLnE,MAAM,oBACNC,YAAY,oBACZiT,UAAWpT,IAEbT,EAAAC,EAAAC,cAAC+S,EAAA,EAAD,CACEnO,KAAK,SACL+O,UAAWC,EACXnT,MAAM,SACNqB,QAASd,OAAOyD,OAAOkD,EAASnB,QAAQE,IAAI,SAACS,GAAD,MAAY,CACtDnF,MAAOmF,EAAMR,GACbhE,KAAMwE,EAAMvC,UAGhB9E,EAAAC,EAAAC,cAAA,OAAKM,UAAWT,EAAQgU,kBACtB/T,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CACEnR,KAAK,eACL8P,KAAK,cACLrR,OAAO,UACP2S,KAAK,SACLrR,SAAU0Q,GAAYE,GAAcD,IAEtCvT,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CACEnR,KAAK,eACLD,SAAU0Q,GAAYE,EACtBb,KAAK,UACLrR,OAAO,SACP4C,QAASuP,oBAhIKS,aAoJvB5U,eAnKA,CACboU,SAAU,CACR7R,MAAO,QACPrC,OAAQ,YACR2U,QAAS,OAEXR,cAAe,CACb/T,WAAY,QAEdmU,iBAAkB,CAChBK,QAAS,OACTC,eAAgB,kBAwJL/U,CAAoB0R,sBCzH7BsD,GAAc,SAAAxU,GAGd,IADJoI,EACIpI,EADJoI,QAASqM,EACLzU,EADKyU,YAAaC,EAClB1U,EADkB0U,cAAoB9K,GACtC5J,EADiC2U,IACjC3U,EADsC4J,SAAS3J,EAC/CD,EAD+CC,QAGjD+E,EACEoD,EADFpD,KAAMC,EACJmD,EADInD,OAAQF,EACZqD,EADYrD,MAAOuL,EACnBlI,EADmBkI,WAEjBsE,EAAehL,EAAUiL,KAAQC,SAAW,GAClD,OACE5U,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,aAAW,EACXC,UAAWC,IAAUC,IACrBC,UAAWT,EAAQR,UAEnBS,EAAAC,EAAAC,cAAA,OAAKM,UAAWT,EAAQ8U,sBACtB7U,EAAAC,EAAAC,cAAA,MAAIM,UAAWT,EAAQ+U,YACrB9U,EAAAC,EAAAC,cAAA,QAAMM,UAAWkU,GAAe5P,GAAQ,QAE1C9E,EAAAC,EAAAC,cAAA,OACE6U,IAAI,UACJC,IAAKjQ,GAAU,iCACfvE,UAAWT,EAAQkV,aAGvBjV,EAAAC,EAAAC,cAAA,OAAKM,UAAWT,EAAQmV,mBACtBlV,EAAAC,EAAAC,cAAA,QAAMM,UAAWkU,GAAe7P,GAAS,OACzC7E,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,QAAMM,UAAS,GAAA8C,OAAKvD,EAAQoV,cAAb,KAAA7R,OAA8BoR,IAC1CtE,GAAc,kBAGnBpQ,EAAAC,EAAAC,cAAA,OAAKM,UAAWT,EAAQqV,iBACtBpV,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAQ9P,QAASqQ,EAAa1R,KAAK,OAAOrC,UAAWT,EAAQsV,SAC7DrV,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAQ9P,QAASsQ,EAAe3R,KAAK,SAASrC,UAAWT,EAAQsV,YAezEf,GAAY5S,aAAe,CACzB+S,KAAK,EACL/K,SAAS,GAGIpK,mBAtGA,CAEbC,SAAU,SAAC0R,GACT,MAAQ,CACNpP,MAAOoP,EAAMwD,IAAM,OAAS,QAC5BN,QAASlD,EAAMwD,IAAM,UAAY,MACjCa,8BAA+B,CAC7B9V,OAAQ,MACR2U,QAAS,KAIfU,qBAAsB,CACpBU,SAAU,WACVC,UAAW,SACXC,OAAQ,IACR5T,MAAO,KAETiT,WAAY,CACVS,SAAU,WACVG,OAAQ,MACRhH,MAAO,MACPD,KAAM,MACN0F,QAAS,MACT3U,OAAQ,IACRmW,MAAO,QACPC,WAAY,uBAEdX,UAAW,CACTY,UAAW,IACXC,SAAU,KAEZZ,kBAAmB,CACjBxV,SAAU,OACVyU,QAAS,OAEXgB,cAAe,CACbzV,SAAU,OACViW,MAAO,QAETP,gBAAiB,CACfjB,QAAS,MACToB,SAAU,YAEZF,OAAQ,CACNU,YAAa,QAyDFzW,CAAoBgV,ICpC7B0B,GAAMC,KAAMC,IAAI,CACpBC,WAAW,EACXC,KAAM,CAAEC,MAAO,GACfC,MAAO,CAAED,MAAO,OAGZE,GAAON,KAAMC,IAAI,CACrBM,MAAO,CACLC,QAAS,EACTC,WAAY,SAAA5W,GAAA,MAAY,CAAE6W,MAAW,GAAzB7W,EAAG8W,KAEjBC,KAAM,CAAEJ,QAAS,GACjBxF,MAAO,CAAE2F,EAAG,KAGd,SAASE,GAAiB7F,GACxB,OAAOA,EAAMrB,KAAKhJ,IAAI,SAACsB,GAAD,OACpBlI,EAAAC,EAAAC,cAAC6W,GAAD,CACE9S,IAAG,WAAAX,OAAa4E,EAAQrB,IACxBqB,QAASA,EACTqM,YAAa,kBAAMyC,GAAe3H,wBAAwBnH,EAAQrB,KAClE2N,cAAe,kBAAMyC,GAAgBpG,cAAc3I,EAAQrB,SAKjE,SAASqQ,GAATpT,GAEG,IADD/D,EACC+D,EADD/D,QAAS+R,EACRhO,EADQgO,MAAOlC,EACf9L,EADe8L,KAEhB,OACE5P,EAAAC,EAAAC,cAACiX,GAAA,EAAD,KACGvH,EAAKhJ,IAAI,SAACsB,EAAS0O,GAAV,OACR5W,EAAAC,EAAAC,cAACqW,GAAD,CAAMtS,IAAG,WAAAX,OAAa4E,EAAQrB,IAAMA,GAAIqB,EAAQrB,GAAI+P,EAAGA,GACrD5W,EAAAC,EAAAC,cAAA,OACEkX,KAAK,eACLC,WAAY,SAACC,GAAD,MAAkB,UAAVA,EAAErT,KAAmB+S,GAAe1H,0BAA0BpH,EAAQrB,KAC1F3C,QAAS,kBAAM8S,GAAe1H,0BAA0BpH,EAAQrB,KAChErG,UAAS,2BAAA8C,OAA6BvD,EAAQwX,gBAArC,KAAAjU,OACPwO,EAAMC,OAAOlL,KAAOqB,EAAQrB,GAAK,WAAa,KAGhD7G,EAAAC,EAAAC,cAAA,OAAKsX,MAAO,CAAEpD,QAAS,SACpBlM,EAAQnD,OACP/E,EAAAC,EAAAC,cAAC8V,GAAD,KACEhW,EAAAC,EAAAC,cAAA,OACE8U,IAAK9M,EAAQnD,OACbgQ,IAAK7M,EAAQpD,KACbtE,UAAWT,EAAQ0X,wBAIvBzX,EAAAC,EAAAC,cAAC8V,GAAD,CAAKxV,UAAWT,EAAQ2X,uBACpBxP,EAAQpD,KAAK6S,UAAU,EAAG,GAAGC,eAGnC5X,EAAAC,EAAAC,cAAA,OAAKM,UAAWT,EAAQ8X,8BACtB7X,EAAAC,EAAAC,cAAA,OAAKM,UAAWT,EAAQ+X,4BAA6B5P,EAAQpD,MAC7D9E,EAAAC,EAAAC,cAAA,OAAKM,UAAWT,EAAQgY,4BAA6B7P,EAAQkI,YAAc,mBAG/EpQ,EAAAC,EAAAC,cAAC8V,GAAD,KACEhW,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CACErB,KAAK,SACLzO,QAAS,SAACoT,GACRL,GAAgBpG,cAAc3I,EAAQrB,IACtCyQ,EAAEU,2BAmDL1Y,mBAlLA,CACbiY,gBAAiB,CACfU,4BAA6B,CAC3B7D,QAAS,OACTC,eAAgB,gBAChBoB,OAAQ,OACRyC,YAAa,MACb1Y,OAAQ,MACR2Y,gBAAiB,UACjBxC,MAAO,QACPyC,UAAW,+FAEbC,kCAAmC,CACjCzC,WAAY,WAEd0C,qCAAsC,CACpC1C,WAAY,YAGhB6B,qBAAsB,CACpB3B,SAAU,GACVyC,SAAU,GACV1C,UAAW,IAEbgC,6BAA8B,CAC5BzD,QAAS,OACToE,cAAe,SACfC,UAAW,SACXC,WAAY,QAEdZ,2BAA4B,CAC1Ba,WAAY,UAEdZ,2BAA4B,CAC1BrY,SAAU,QAEZgY,sBAAuB,CACrB7V,MAAO,OACP4T,OAAQ,OACR/V,SAAU,OACVyY,gBAAiB,UACjBxC,MAAO,QACPH,UAAW,SACXoD,WAAY,OACZC,aAAc,QAEhBC,gBAAiB,CACftZ,OAAQ,cACR4U,QAAS,OACT2E,KAAM,WACNP,cAAe,OAEjBQ,0BAA2B,CACzB5E,QAAS,OACT2E,KAAM,WACNP,cAAe,UAEjBS,0BAA2B,CACzBC,SAAU,SAwHC5Z,CAxCf,SAAqB2R,GACnBkI,oBAAU,WAERlC,GAAgBnH,YACf,IAJuB,IAAAsJ,EAOCxN,GAAkByN,GAAUC,IAP7BC,EAAArY,OAAAiL,GAAA,EAAAjL,CAAAkY,EAAA,GAOnBvR,EAPmB0R,EAAA,GAOTlL,EAPSkL,EAAA,GAQpBxI,EAAclJ,EAAS+H,KAE7B,OACE5P,EAAAC,EAAAC,cAAA,OAAKM,UAAWyQ,EAAMlR,QAAQ+Y,iBACX,SAAhBzK,EAAOE,KACNvO,EAAAC,EAAAC,cAAA,OAAKM,UAAWyQ,EAAMlR,QAAQiZ,2BAC5BhZ,EAAAC,EAAAC,cAACgX,GAADhW,OAAAO,OAAA,GAAsBwP,EAAtB,CAA6BrB,KAAM1O,OAAOyD,OAAOoM,OAGnD/Q,EAAAC,EAAAC,cAAA,OAAKM,UAAWyQ,EAAMlR,QAAQkZ,2BAC5BjZ,EAAAC,EAAAC,cAAC4W,GAAD5V,OAAAO,OAAA,GAAsBwP,EAAtB,CAA6BrB,KAAM1O,OAAOyD,OAAOoM,UCxJrDyI,eACJ,SAAAA,EAAYvI,GAAO,IAAAC,EAAA,OAAAhQ,OAAAiQ,EAAA,EAAAjQ,CAAAwK,KAAA8N,IACjBtI,EAAAhQ,OAAAkQ,EAAA,EAAAlQ,CAAAwK,KAAAxK,OAAAmQ,EAAA,EAAAnQ,CAAAsY,GAAAlI,KAAA5F,KAAMuF,KACDsD,YAAcrD,EAAKqD,YAAY9C,KAAjBvQ,OAAAwQ,EAAA,EAAAxQ,QAAAwQ,EAAA,EAAAxQ,CAAAgQ,KACnBA,EAAKsD,cAAgBtD,EAAKsD,cAAc/C,KAAnBvQ,OAAAwQ,EAAA,EAAAxQ,QAAAwQ,EAAA,EAAAxQ,CAAAgQ,KACrBA,EAAK7B,wBAA0B2H,GAAe3H,wBAJ7B6B,mFAQjB+F,GAAgBnH,SAASpE,KAAKuF,MAAMa,MAAMC,OAAOlL,iDAIjDoQ,GAAgBnH,SAASpE,KAAKuF,MAAMa,MAAMC,OAAOlL,0CAIjD6E,KAAK2D,wBAAwB3D,KAAKuF,MAAMa,MAAMC,OAAOlL,4CAIrDoQ,GAAgBpG,cAAcnF,KAAKuF,MAAMa,MAAMC,OAAOlL,qCAG/C,IAAA+K,EAAAlG,KACP,OACE1L,EAAAC,EAAAC,cAAC6S,EAAA,UAAD,CAAWC,GAAIyG,IACZ,SAAC5R,GAAD,OACC7H,EAAAC,EAAAC,cAAA,OAAKM,UAAWoR,EAAKX,MAAMlR,QAAQ2Z,mBACjC1Z,EAAAC,EAAAC,cAAC6W,GAAD,CACEtC,KAAG,EACHvM,QAASL,EAASgI,QAClBnG,QAAS7B,EAAS6B,QAClB6K,YAAa3C,EAAK2C,YAClBC,cAAe5C,EAAK4C,0BAlCRmF,iBAiDXra,eAxDA,CACboa,kBAAmB,CACjBla,OAAQ,YACRqC,MAAO,UAqDIvC,CAAoBka,IC9DpB,SAAS9U,GAASC,GAC/B,IAAMC,EAAS,GAMf,OALKR,EAAmBO,EAAOG,MAEnBL,EAAUE,EAAOG,KAAM,KACjCF,EAAOE,KAAO,mCAFdF,EAAOE,KAAO,mBAITF,ECET,IAAM8B,GAASzB,gBAAY,CACzB2K,KAAM,GACNC,QAAS,kDAGX,SAAA1F,EAAwBtD,GAAxB,IAAAkJ,EAAA,OAAA9F,EAAAhK,EAAAyK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WAEMhE,EAFN,CAAA8D,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAG2B5D,EAAgBJ,GAH3C,OAGIkJ,EAHJpF,EAAAY,KAIIhG,iBAAOmB,GAAQ,SAACvB,GACdA,EAAM0K,QAAUE,IALtBpF,EAAAE,KAAA,uBAAAF,EAAAE,KAAA,EAQ2B9E,IAR3B,OAQIgK,EARJpF,EAAAY,KASIhG,iBAAOmB,GAAQ,SAACvB,GACdA,EAAMyK,KAAOG,IAVnB,yBAAApF,EAAAc,SAAAtB,EAAAuB,6EAeA,SAAA6E,EAAyBlJ,GAAzB,OAAA4C,EAAAhK,EAAAyK,KAAA,SAAA+F,GAAA,cAAAA,EAAA7F,KAAA6F,EAAA5F,MAAA,UAAA4F,EAAA7F,KAAA,GAEQvD,EAAMR,GAFd,CAAA4J,EAAA5F,KAAA,eAAA4F,EAAA5F,KAAA,EAGYrD,EAAmBH,GAH/B,OAIMuH,EAAgBvJ,WAAW,8BAJjCoL,EAAA5F,KAAA,uBAAA4F,EAAA5F,KAAA,EAMYzD,EAAiBC,GAN7B,OAOMuH,EAAgBvJ,WAAW,8BAPjC,QAUIE,iBAAOmB,GAAQ,SAACvB,GACdA,EAAM0K,QAAUxI,IAXtBoJ,EAAA5F,KAAA,iBAAA4F,EAAA7F,KAAA,GAAA6F,EAAAN,GAAAM,EAAA,SAcI7B,EAAgBpJ,aAAhBiL,EAAAN,IAdJ,QAiBEX,GAAQC,SAjBV,yBAAAgB,EAAAhF,SAAA8E,EAAA7E,KAAA,oCAoBA,IAAMxG,GAAW,CACfJ,KAAM,SACNK,MAAOuB,GACPtB,QAAS,CAAE0K,sDAAU8J,yDAERzU,GAAmBD,GAAnBC,MAAOC,GAAYF,GAAZE,QC/BhByU,IDgCSnQ,GAAQxE,gMC/BD,IACV2B,EAAO6E,KAAKuF,MAAMa,MAAMC,OAAxBlL,GACJA,GACFiT,GAAahK,SAASjJ,qDAIAyL,GACpB5G,KAAKuF,MAAMa,MAAMC,OAAOlL,KAAOyL,EAAUR,MAAMC,OAAOlL,IACxDiT,GAAahK,SAASwC,EAAUR,MAAMC,OAAOlL,qCAIxC,IACC9G,EAAY2L,KAAKuF,MAAjBlR,QACR,OACEC,EAAAC,EAAAC,cAAC6S,EAAA,UAAD,CAAWC,GAAI+G,IACZ,SAAClS,GAAD,OACC7H,EAAAC,EAAAC,cAAC+S,EAAA,EAAD,CACEC,SAAU4G,GAAaF,UACvBlV,SAAUA,GACVyO,cAAetL,EAASgI,QACxBuD,OAAQ,SAAAtT,GAAA,IACNuT,EADMvT,EACNuT,aAAcC,EADRxT,EACQwT,SAAUC,EADlBzT,EACkByT,QAASC,EAD3B1T,EAC2B0T,WAAoBC,EAD/C3T,EACuCka,KAAQvG,MAD/C,OAGNzT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,aAAW,EACXC,UAAWC,IAAUC,IACrBC,UAAWT,EAAQ2T,UAEnB1T,EAAAC,EAAAC,cAAA,QAAMM,UAAWT,EAAQ4T,cAAeT,SAAUG,GAChDrT,EAAAC,EAAAC,cAAC+S,EAAA,EAAD,CAAOnO,KAAK,OAAOnE,MAAM,OAAOC,YAAY,OAAOiT,UAAWpT,IAC9DT,EAAAC,EAAAC,cAAA,OAAKM,UAAWT,EAAQgU,kBACtB/T,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CACErB,KAAK,cACLrR,OAAO,UACP2S,KAAK,SACLrR,SAAU0Q,GAAYE,GAAcD,EACpC1Q,KAAK,eAEP7C,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CACErB,KAAK,UACLrR,OAAO,SACP4C,QAASuP,EACT7Q,SAAU0Q,GAAYE,EACtB3Q,KAAK,gCA9CSqR,cAgErB5U,eA/EA,CACboU,SAAU,CACR7R,MAAO,QACPrC,OAAQ,YACR2U,QAAS,OAEXR,cAAe,CACb/T,WAAY,QAEdmU,iBAAkB,CAChBK,QAAS,OACTC,eAAgB,kBAoEL/U,CAAoBua,aClF7BI,GAAS,CACbC,QAAS,CACPC,KAAM,CAAE5E,SAAU,WAClB6E,QAAS,CAAEhG,QAAS,QACpBiG,QAAS,CAAEjG,QAAS,QACpB8F,QAAS,CAAEtE,WAAY,UAAWhW,WAAY,YAI5C0a,GAAM5K,OAAO6K,WAAW,sBAkEfjb,mBAAY2a,GAAZ3a,CAhEf,SAAoB2R,GAAO,IAAAuJ,EACCzM,mBAAS,CAAE0M,eAAgBH,GAAII,QAAS9H,QAAQ,IADjD+H,EAAAzZ,OAAAiL,GAAA,EAAAjL,CAAAsZ,EAAA,GAClBrV,EADkBwV,EAAA,GACXvO,EADWuO,EAAA,GAGzB,SAASC,IACPxO,EAASlL,OAAA6F,EAAA,EAAA7F,CAAA,GAAKiE,EAAN,CAAasV,eAAgBH,GAAII,WAG3C,SAASG,IACP,IAAMjI,EAASkI,GAAYzP,MAAMmD,KAAKE,MAClCkE,IAAWzN,EAAMyN,QACnBxG,EAASlL,OAAA6F,EAAA,EAAA7F,CAAA,GAAKiE,EAAN,CAAayN,YAIzBuG,oBAAU,WAGR,OAFAmB,GAAIS,YAAYH,GAChBE,GAAYrO,GAAGoO,GACR,WACLP,GAAIU,eAAeJ,GACnBE,GAAYpO,IAAImO,MAnBK,IAuBjBjI,EAAWzN,EAAXyN,OAER,OAAKzN,EAAMsV,cAITza,EAAAC,EAAAC,cAAC+a,GAAA,EAAD,CACEC,KAAMtI,EACNuI,WAAS,EACTC,OAAK,EACLnB,OAAQA,GAAOC,QACfmB,UAAW,SAACH,GACV/P,GAAc2D,uBAAuBoM,IAEvChB,QACEla,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CACExT,UAAU,cACVmS,KAAK,QACLzO,QAAS,kBAAMiH,GAAc2D,wBAAuB,MAErDmC,EAAMqK,WAKTtb,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CACExT,UAAU,cACVmS,KAAK,OACLzO,QAAS,kBAAMiH,GAAc2D,wBAAwB8D,OA1BpD3B,EAAMqK,WCoBFhc,mBArDA,CACbic,qBAAsB,CACpBnH,QAAS,OACT2E,KAAM,YAERyC,kBAAmB,CACjBpH,QAAS,OACT2E,KAAM,aA8CKzZ,CA1Cf,SAAAQ,GAAuD,IAA1BgS,EAA0BhS,EAA1BgS,MAAOhJ,EAAmBhJ,EAAnBgJ,OAAQ/I,EAAWD,EAAXC,QAC1C,IAAK+R,EACH,OAAO9R,EAAAC,EAAAC,cAACub,EAAD,CAAO3J,MAAOA,IAGvB,OAAQA,EAAMhN,MACZ,KAAKuD,GAAOK,UACV,OAAO1I,EAAAC,EAAAC,cAACwb,GAAD,CAAW5J,MAAOA,IAC3B,KAAKzJ,GAAOI,gBACV,OACEzI,EAAAC,EAAAC,cAAA,OAAKM,UAAWT,EAAQwb,sBACtBvb,EAAAC,EAAAC,cAACyb,GAAD,CAAa7J,MAAOA,IACpB9R,EAAAC,EAAAC,cAAC0b,GAAD,KACE5b,EAAAC,EAAAC,cAAC2b,GAAD,CAAe/J,MAAOA,MAI9B,KAAKzJ,GAAOG,cACV,OAAOxI,EAAAC,EAAAC,cAACyb,GAAD,CAAa7J,MAAOA,IAC7B,KAAKzJ,GAAOE,YACV,OAAOvI,EAAAC,EAAAC,cAAC4b,GAAD,CAAahK,MAAOA,EAAOhJ,OAAQA,IAC5C,KAAKT,GAAOM,aACV,OACE3I,EAAAC,EAAAC,cAAA,OAAKM,UAAWT,EAAQyb,mBACtBxb,EAAAC,EAAAC,cAACyb,GAAD,CAAa7J,MAAOA,IACpB9R,EAAAC,EAAAC,cAAC0b,GAAD,KACE5b,EAAAC,EAAAC,cAAC4b,GAAD,CAAahK,MAAOA,EAAOhJ,OAAQA,MAI3C,KAAKT,GAAOC,KACZ,QACE,OAAOtI,EAAAC,EAAAC,cAACub,EAAD,CAAO3J,MAAOA,uDC9BZiK,GAlBS,SAAAjc,GAAA,IAAGkc,EAAHlc,EAAGkc,eAAH,OACtBhc,EAAAC,EAAAC,cAAC+b,GAAA,EAAD,CACE7B,QACEpa,EAAAC,EAAAC,cAACsO,GAAA,EAAD,KACExO,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAUE,KAAK,OAAOqB,QAAS,kBAAM8X,EAAe,WACpDhc,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAUE,KAAK,OAAOqB,QAAS,kBAAM8X,EAAe,YAGxDzG,SAAU2G,KAASC,WAEnBnc,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAQrB,KAAK,WCyBFyJ,OAjCf,SAAAtc,GAEG,IADDgS,EACChS,EADDgS,MAEA,OACE9R,EAAAC,EAAAC,cAAC6S,EAAA,UAAD,CAAWC,GAAI8H,IACZ,kBACC9a,EAAAC,EAAAC,cAACF,EAAAC,EAAMoc,SAAP,KACErc,EAAAC,EAAAC,cAACoc,GAAA,EAAD,KACEtc,EAAAC,EAAAC,cAACoc,GAAA,EAAOC,MAAR,CAAcC,MAAOC,KAAUC,MAC7B1c,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CACExT,UAAU,cACVmS,KAAK,OACLzO,QAASiH,GAAc0D,iBAEzB7O,EAAAC,EAAAC,cAACoc,GAAA,EAAOK,QAAR,MACA3c,EAAAC,EAAAC,cAACoc,GAAA,EAAOM,QAAR,sBAEF5c,EAAAC,EAAAC,cAACoc,GAAA,EAAOC,MAAR,CAAcC,MAAOC,KAAUI,OAC5B/K,EAAMhN,OAASuD,GAAOG,cACrBxI,EAAAC,EAAAC,cAAC4c,GAAD,CAAiBd,eAAgB7Q,GAAcwD,aAC7C,yCCAHoO,OArBf,WACE,OACE/c,EAAAC,EAAAC,cAAC6S,EAAA,UAAD,CAAWC,GAAI8H,IACZ,SAAC3V,GAAD,OACCnF,EAAAC,EAAAC,cAAC8c,GAAA,EAAD,CAASzH,SAAU2G,KAASe,KACzB9X,EAAMuE,QAAQvE,MACbnF,EAAAC,EAAAC,cAACgd,GAAA,EAAD,CACE5X,QACEtF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,uBAAAoD,OAAkB6B,EAAMuE,QAAQpE,QAAhC,QACAtF,EAAAC,EAAAC,cAACid,GAAA,EAAD,SAIJ,SCECC,OAlBf,WACE,OACEpd,EAAAC,EAAAC,cAAC6S,EAAA,UAAD,CAAWC,GAAIqK,GACZ,SAAC/X,GAAD,OACCtF,EAAAC,EAAAC,cAAC8c,GAAA,EAAD,CAASzH,SAAU2G,KAASoB,QACzBhY,EACCtF,EAAAC,EAAAC,cAACgd,GAAA,EAAD,CACE5X,QAASA,GAAW,GACpBiY,QAAS,IACTC,UAAW5O,EAAgBnJ,QAE3B,SCNRwU,GAAS,CACbC,QAAS,CACPA,QAAS,CACPtE,WAAY,YAGhB6H,aAAc,CACZ7d,WAAY,OACZ8d,aAAc,CACZ9H,WAAY,aAKlB,SAAS+H,GAAiBrG,GACxBlS,GAAQmK,uBAAuB+H,EAAEsG,OAAOC,aAsD1C,IAAMvD,GAAM5K,OAAO6K,WAAW,sBAExBuD,GAAkBxe,YAAY2a,GAAZ3a,CArDxB,SAAAQ,GAEG,IADDgS,EACChS,EADDgS,MAAOiM,EACNje,EADMie,YAAahe,EACnBD,EADmBC,QAEpB,OACEC,EAAAC,EAAAC,cAACsO,GAAA,EAAD,CAAMhO,UAAWT,EAAQ0d,cACvBzd,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CACEqB,OAAQ8N,EAAMhN,OAASuD,GAAOC,KAC9BpE,QAAS,SAACoT,GACRqG,GAAiBrG,GACbyG,GACF5S,GAAc0D,kBAGlBhM,KAAK,UAEP7C,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CACEqB,QAC+F,IAA7F,CAACqE,GAAOG,cAAeH,GAAOI,gBAAiBJ,GAAOM,cAActF,QAAQyO,EAAMhN,MAEpFZ,QAAS,SAACoT,GACRqG,GAAiBrG,GACbyG,GACF5S,GAAc0D,kBAGlBhM,KAAK,SAEP7C,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CACEqB,OAAQ8N,EAAMhN,OAASuD,GAAOE,YAC9BrE,QAAS,SAACoT,GACRqG,GAAiBrG,GACbyG,GACF5S,GAAc0D,kBAGlBhM,KAAK,gBAEP7C,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CACEqB,OAAQ8N,EAAMhN,OAASuD,GAAOK,UAC9BxE,QAAS,SAACoT,GACRqG,GAAiBrG,GACbyG,GACF5S,GAAc0D,kBAGlBhM,KAAK,iBAsDEmb,OA5Cf,SAAkB/M,GAAO,IAAAuJ,EACezM,oBAAUuM,GAAII,SAD7BC,EAAAzZ,OAAAiL,GAAA,EAAAjL,CAAAsZ,EAAA,GAChBuD,EADgBpD,EAAA,GACHsD,EADGtD,EAAA,GAGvB,SAASC,IACPqD,GAAgB3D,GAAII,SAUtB,OAPAvB,oBAAU,WAER,OADAmB,GAAIS,YAAYH,GACT,WACLN,GAAIU,eAAeJ,MAKrB5a,EAAAC,EAAAC,cAAC6S,EAAA,UAAD,CAAWC,GAAI8H,GAAarO,GAAI,SAACtH,GAAD,OAAWA,EAAMqJ,KAAKC,OACnD,SAACM,GACA,OAAIA,EACGgP,EAIH/d,EAAAC,EAAAC,cAAC+a,GAAA,EAAD,CACEC,KAAMnM,EACNkL,OAAQA,GAAOC,QACfmB,UAAWlQ,GAAc0D,eACzBqL,QAASla,EAAAC,EAAAC,cAAC4d,GAAD5c,OAAAO,OAAA,CAAiBsc,YAAaA,GAAiB9M,MAEvD,GATIjR,EAAAC,EAAAC,cAAC4d,GAAD5c,OAAAO,OAAA,CAAiBsc,YAAaA,GAAiB9M,IAanD,QChFAiN,OA1Bf,SAAApe,GAGG,IAFDgJ,EAEChJ,EAFDgJ,OACGqV,EACFjd,OAAAC,EAAA,EAAAD,CAAApB,EAAA,YACD,OACEE,EAAAC,EAAAC,cAAA,OAAKM,UAAU,WAAWgX,MAAO,CAAEW,gBAAiB,UAAWiG,UAAW,UACxEpe,EAAAC,EAAAC,cAACme,EAAA,EAAD,CAAOvV,OAAQA,GAAS,SAAAhF,GAAA,IAAGgO,EAAHhO,EAAGgO,MAAH,OAAe9R,EAAAC,EAAAC,cAACoe,GAAD,CAAQxM,MAAOA,MACtD9R,EAAAC,EAAAC,cAACqe,GAAD,MACAve,EAAAC,EAAAC,cAACme,EAAA,EAAD,CAAOvV,OAAQA,GACZ,SAAA0V,GAAA,IAAG1M,EAAH0M,EAAG1M,MAAH,OACC9R,EAAAC,EAAAC,cAAA,OAAKsX,MAAO,CAAEpD,QAAS,SACrBpU,EAAAC,EAAAC,cAACue,GAAD,CAAU3M,MAAOA,IACjB9R,EAAAC,EAAAC,cAACwe,GAADxd,OAAAO,OAAA,CAAmBqQ,MAAOA,EAAOhJ,OAAQA,GAAYqV,OAI3Dne,EAAAC,EAAAC,cAACye,GAAD,QCfAC,GAAcC,QAAqC,cAA7BnP,OAAOoP,SAASC,UAER,UAA7BrP,OAAOoP,SAASC,UAEhBrP,OAAOoP,SAASC,SAASC,MAAM,2DAmCtC,SAASC,GAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,KAAK,SAACC,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBta,QACfga,UAAUC,cAAcQ,WAM1B9U,QAAQG,IAAI,6CAMZH,QAAQG,IAAI,2CAMrB4U,MAAM,SAAC7e,GAEN8J,QAAQ9J,MAAM,4CAA6CA,KC9DjE8e,IAAS1M,OAAOpT,EAAAC,EAAAC,cANH,kBACXF,EAAAC,EAAAC,cAACme,EAAA,EAAD,CAAgBvV,OAAQA,IACtB9I,EAAAC,EAAAC,cAAC6f,GAAD,CAAKjX,OAAQA,OAID,MAAUkX,SAASC,eAAe,SDCnC,WACb,GAA6C,kBAAmBd,UAAW,CAGzE,GADkB,IAAIe,IAAIC,sBAAwBzQ,OAAOoP,UAC3CsB,SAAW1Q,OAAOoP,SAASsB,OAIvC,OAGF1Q,OAAO2Q,iBAAiB,OAAQ,WAC9B,IAAMnB,EAAK,GAAA5b,OAAM6c,sBAAN,sBAEPvB,IAmDV,SAAiCM,GAE/BoB,MAAMpB,GACHI,KAAK,SAAC9O,GAGiB,MAApBA,EAAS+P,SAC0D,IAAhE/P,EAASgQ,QAAQnV,IAAI,gBAAgBhI,QAAQ,cAGhD8b,UAAUC,cAAcqB,MAAMnB,KAAK,SAACC,GAClCA,EAAamB,aAAapB,KAAK,WAC7B5P,OAAOoP,SAAS6B,aAKpB1B,GAAgBC,KAGnBW,MAAM,WAEL/U,QAAQG,IAAI,mEAvEV2V,CAAwB1B,GAIxBC,UAAUC,cAAcqB,MAAMnB,KAAK,WAEjCxU,QAAQG,IAAI,+GAKdgU,GAAgBC,MC3BxB2B","file":"static/js/main.e5f96305.chunk.js","sourcesContent":["import React from 'react';\nimport { Card, Elevation } from '@blueprintjs/core';\nimport PropTypes from 'prop-types';\nimport injectSheet from 'react-jss';\n\nconst styles = {\n  cardRoot: {\n    margin: '1em',\n  },\n  cardText1stLine: {\n    fontSize: '14px',\n  },\n  cardText2ndLine: {\n    paddingTop: '16px',\n    fontSize: '14px',\n    paddingBottom: '2em',\n  },\n};\n\nfunction About({\n  classes,\n}) {\n  return (\n    <Card interactive elevation={Elevation.TWO} className={classes.cardRoot}>\n      <h1>Contacts App</h1>\n      <div className={classes.cardText1stLine}>Learning Immer (Bey)</div>\n      <div className={classes.cardText2ndLine}>\n        This is a example app using immer and react context + hooks.\n      </div>\n    </Card>\n  );\n}\n\nAbout.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default injectSheet(styles)(About);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputGroup, FormGroup } from '@blueprintjs/core';\n\nfunction FormTextField({\n  input, label, placeholder, meta: { touched, error }, ...custom\n}) {\n  return (\n    <FormGroup\n      helperText={error}\n      label={label}\n      intent={touched && error ? 'danger' : undefined}\n    >\n      <InputGroup\n        placeholder={placeholder}\n        intent={touched && error ? 'danger' : undefined}\n        {...input}\n        {...custom}\n      />\n    </FormGroup>\n  );\n}\n\nFormTextField.propTypes = {\n  input: PropTypes.object.isRequired,\n  label: PropTypes.string.isRequired,\n  meta: PropTypes.object.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  custom: PropTypes.object,\n};\n\nFormTextField.defaultProps = {\n  custom: {},\n};\n\nexport default FormTextField;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, FormGroup } from '@blueprintjs/core';\nimport { MultiSelect } from '@blueprintjs/select';\nimport injectSheet from 'react-jss';\n\nconst styles = {\n  contactGroupMultiSelect: {\n    '&.bp3-popover-target': {\n      width: '100%',\n    },\n  },\n  contactGroupTagInputProps: {\n    '& .bp3-input-ghost': {\n      fontSize: '14px',\n    },\n  },\n};\n\nfunction FormMultiSelectField({\n  options,\n  input: {\n    value, onChange,\n  },\n  label,\n  meta: { touched, error },\n  classes,\n  ...custom\n}) {\n  const indexesOptions = {};\n  if (options && options.length > 0) {\n    options.forEach((o) => {\n      indexesOptions[o.value] = o;\n    });\n  }\n\n  return (\n    <FormGroup\n      helperText={error}\n      label={label}\n      intent={touched && error ? 'danger' : undefined}\n    >\n      <MultiSelect\n        shouldDismissPopover={false}\n        noResults={<MenuItem disabled text=\"No results.\" />}\n        popoverProps={{ minimal: true, targetClassName: classes.contactGroupMultiSelect }}\n        items={options}\n        selectedItems={value === '' ? [] : value}\n        onItemSelect={(opt) => {\n          if (value.indexOf(opt.value) === -1) {\n            onChange([...value, opt.value]);\n          } else {\n            value.splice(value.indexOf(opt.value), 1);\n            onChange(value);\n          }\n        }}\n        tagInputProps={{\n          placeholder: 'Select contact groups...',\n          fill: true,\n          className: classes.contactGroupTagInputProps,\n          onRemove: (opt, index) => {\n            if (value && value.length > 0) {\n              value.splice(index, 1);\n              onChange(value);\n            }\n          },\n        }}\n        itemRenderer={(opt, { handleClick }) => (\n          <MenuItem\n            active={value.indexOf(opt.value) !== -1}\n            key={`option-${opt.value}`}\n            text={opt.text}\n            onClick={handleClick}\n          />\n        )}\n        tagRenderer={(opt) => indexesOptions[opt].text}\n        {...custom}\n      />\n    </FormGroup>\n  );\n}\n\nFormMultiSelectField.propTypes = {\n  input: PropTypes.object.isRequired,\n  label: PropTypes.string.isRequired,\n  meta: PropTypes.object.isRequired,\n  options: PropTypes.array.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default injectSheet(styles)(FormMultiSelectField);\n","export const requiredValidation = (value) => value !== undefined && value !== null && value !== '';\n\nexport const isEmail = (value) => {\n  if (value) {\n    const regExp = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i; // eslint-disable-line\n    return regExp.test(value);\n  }\n  return true;\n};\n\nexport const isUrl = (value) => {\n  if (value) {\n    const regExp = new RegExp('^(?:(?:https?|ftp)://)(?:S+(?::S*)?@)?(?:(?!10(?:.d{1,3}){3})(?!127(?:.d{1,3}){3})(?!169.254(?:.d{1,3}){2})(?!192.168(?:.d{1,3}){2})(?!172.(?:1[6-9]|2d|3[0-1])(?:.d{1,3}){2})(?:[1-9]d?|1dd|2[01]d|22[0-3])(?:.(?:1?d{1,2}|2[0-4]d|25[0-5])){2}(?:.(?:[1-9]d?|1dd|2[0-4]d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)(?:.(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)*(?:.(?:[a-z\\u00a1-\\uffff]{2,})))(?::d{2,5})?(?:/[^s]*)?');\n    return regExp.test(value);\n  }\n  return true;\n};\n\nexport const maxLength = (value, length) => value && value.length > length;\n","import { requiredValidation, isEmail, isUrl } from '../../globals/validators';\n\nexport default function validate(values) {\n  const errors = {};\n  if (!requiredValidation(values.email)) {\n    errors.email = 'Email is required';\n  } else if (!isEmail(values.email)) {\n    errors.email = 'Email format is incorrect';\n  }\n  if (!requiredValidation(values.name)) {\n    errors.name = 'Name is Required';\n  }\n  if (!isUrl(values.imgUrl)) {\n    errors.imgUrl = 'Invalid url';\n  }\n  return errors;\n}\n","import { state as stateCreate, update } from 'bey';\n\nconst snackbar = stateCreate(null);\n\nfunction setMessage(message) {\n  update(snackbar, () => message);\n}\n\nfunction displayError(error) {\n  let message = 'Unknown error';\n\n  if (error && error.message) {\n    // eslint-disable-next-line prefer-destructuring\n    message = error.message;\n  } else if (typeof error === 'string') {\n    message = error;\n  }\n  update(snackbar, () => message);\n}\n\nfunction close() {\n  update(snackbar, () => null);\n}\n\nconst exported = {\n  name: 'snackbar',\n  state: snackbar,\n  actions: { setMessage, displayError, close },\n};\nexport const { state, actions } = exported;\nexport default exported;\n","import * as firebase from 'firebase';\n\nconst config = {\n  apiKey: 'AIzaSyB1GATIyuA6FNnAUMBz0kXJ62EvlSWx99o',\n  authDomain: 'redux-contacts-app.firebaseapp.com',\n  databaseURL: 'https://redux-contacts-app.firebaseio.com/',\n};\n\nfirebase.initializeApp(config);\n\nexport default firebase;\n","import firebase from './index';\n\nconst BASE_URL = '/groups';\n\nexport function getGroupsService() {\n  const firebaseConnection = firebase.database().ref(`${BASE_URL}`);\n  return new Promise((resolve, reject) => {\n    firebaseConnection.once(\n      'value',\n      (groupsDB) => {\n        const groupsDBValue = groupsDB.val();\n        const groups = [];\n        Object.keys(groupsDBValue).map((id) => groups.push({\n          id,\n          ...groupsDBValue[id],\n        }));\n        return resolve(groups);\n      },\n      (err) => reject(err),\n    );\n  });\n}\n\nexport function getGroupService(id) {\n  const firebaseConnection = firebase.database().ref(`${BASE_URL}/${id}`);\n  return new Promise((resolve, reject) => {\n    firebaseConnection.once(\n      'value',\n      (groupDB) => {\n        const groupDBValue = groupDB.val();\n        groupDBValue.id = id;\n        return resolve(groupDBValue);\n      },\n      (err) => reject(err),\n    );\n  });\n}\n\nexport function postGroupService(group) {\n  const firebaseConnection = firebase.database().ref(`${BASE_URL}`);\n  return new Promise((resolve, reject) => {\n    const post = firebaseConnection.push();\n    post.set(group, (err) => {\n      if (err) {\n        return reject(err);\n      }\n      return resolve({\n        id: post.key,\n        ...group,\n      });\n    });\n  });\n}\n\nexport function updateGroupService({ id, ...others }) {\n  const firebaseConnection = firebase.database().ref(`${BASE_URL}/${id}`);\n  return new Promise((resolve, reject) => {\n    firebaseConnection.set({ ...others }, (err) => {\n      if (err) {\n        return reject(err);\n      }\n      return resolve({\n        id,\n        ...others,\n      });\n    });\n  });\n}\n\nexport function deleteGroupService(id) {\n  const firebaseConnection = firebase.database().ref(`${BASE_URL}/${id}`);\n  return new Promise((resolve, reject) => {\n    firebaseConnection.set(null, (err) => {\n      if (err) {\n        return reject(err);\n      }\n      return resolve({ id });\n    });\n  });\n}\n","import firebase from './index';\n\nconst BASE_URL = '/jony';\n\nexport function getContactsService() {\n  const firebaseConnection = firebase.database().ref(`${BASE_URL}`);\n  return new Promise((resolve, reject) => {\n    firebaseConnection.once(\n      'value',\n      (contactsDB) => {\n        const contactsDBValue = contactsDB.val();\n        const contacts = [];\n        Object.keys(contactsDBValue).map((id) => contacts.push({\n          id,\n          ...contactsDBValue[id],\n        }));\n        return resolve(contacts);\n      },\n      (err) => reject(err),\n    );\n  });\n}\n\nexport function getContactService(id) {\n  const firebaseConnection = firebase.database().ref(`${BASE_URL}/${id}`);\n  return new Promise((resolve, reject) => {\n    firebaseConnection.once(\n      'value',\n      (contactDB) => {\n        const contactDBValue = contactDB.val();\n        if (contactDBValue) {\n          contactDBValue.id = id;\n        }\n        return resolve(contactDBValue);\n      },\n      (err) => reject(err),\n    );\n  });\n}\n\nexport function postContactService(contact) {\n  const firebaseConnection = firebase.database().ref(`${BASE_URL}`);\n  return new Promise((resolve, reject) => {\n    const post = firebaseConnection.push();\n    post.set(contact, (err) => {\n      if (err) {\n        return reject(err);\n      }\n      return resolve({\n        id: post.key,\n        ...contact,\n      });\n    });\n  });\n}\n\nexport function updateContactService({ id, ...others }) {\n  const firebaseConnection = firebase.database().ref(`${BASE_URL}/${id}`);\n  return new Promise((resolve, reject) => {\n    firebaseConnection.set({ ...others }, (err) => {\n      if (err) {\n        return reject(err);\n      }\n      return resolve({\n        id,\n        ...others,\n      });\n    });\n  });\n}\n\nexport function deleteContactService(id) {\n  const firebaseConnection = firebase.database().ref(`${BASE_URL}/${id}`);\n  return new Promise((resolve, reject) => {\n    firebaseConnection.set(null, (err) => {\n      if (err) {\n        return reject(err);\n      }\n      return resolve({ id });\n    });\n  });\n}\n","export const ROUTES = {\n  HOME: 'home',\n  ADD_CONTACT: 'addContact',\n  LIST_CONTACTS: 'listContacts',\n  CONTACT_DETAILS: 'contactDetails',\n  ADD_GROUP: 'addGroup',\n  EDIT_CONTACT: 'editContact',\n};\n\nexport const routes = [\n  { name: ROUTES.HOME, path: '/' },\n  { name: ROUTES.ADD_CONTACT, path: '/add' },\n  { name: ROUTES.LIST_CONTACTS, path: '/list' },\n  { name: ROUTES.EDIT_CONTACT, path: '/edit/:id' },\n  { name: ROUTES.CONTACT_DETAILS, path: '/detail/:id' },\n  { name: ROUTES.ADD_GROUP, path: '/group/add' },\n];\n","import createRouter from 'router5';\nimport loggerPlugin from 'router5-plugin-logger';\nimport browserPlugin from 'router5-plugin-browser';\nimport { routes } from './routes';\n\nfunction configureRouter() {\n  const router = createRouter(routes, {\n    defaultRoute: 'home',\n    autoCleanup: false,\n  });\n\n  // Plugins\n  router.usePlugin(\n    loggerPlugin,\n    browserPlugin({\n      useHash: true,\n      forceDeactivate: false,\n    }),\n  );\n\n  return router;\n}\n\nconst router = configureRouter();\nrouter.start();\n\nexport const { navigate } = router;\nexport default router;\n","import { update } from 'bey';\nimport { actions as GlobalActions } from '../global';\n\nfunction isAsync(fn) {\n  return fn.isSync !== true;\n  // return fn.constructor.name === 'AsyncFunction';\n}\n\nexport default function loading(stateModule) {\n  if (stateModule.actions && Object.values(stateModule.actions).length > 0) {\n    Object.keys(stateModule.actions).forEach((actionName) => {\n      if (\n        stateModule.actions[actionName]\n        && typeof stateModule.actions[actionName] === 'function'\n        && isAsync(stateModule.actions[actionName])\n      ) {\n        const originalAction = stateModule.actions[actionName];\n\n        stateModule.actions[actionName] = async function plusLoading(...args) {\n          /* eslint-disable no-console */\n          console.groupCollapsed(`[${stateModule.name}] executing action: ${actionName}()`)\n          console.log(`Using arguments: ${args}`);\n          console.groupEnd();\n          GlobalActions.setLoading(true, stateModule.name);\n          const loadingBefore = stateModule.state.get().loading;\n          if (loadingBefore !== true) {\n            update(stateModule.state, (state) => {\n              state.loading = true;\n            });\n          }\n          const result = await originalAction(...args);\n          const loadingAfter = stateModule.state.get().loading;\n          if (loadingAfter !== false) {\n            update(stateModule.state, (state) => {\n              state.loading = false;\n            });\n          }\n          GlobalActions.setLoading(false, stateModule.name);\n          return result;\n        };\n      }\n    });\n  }\n\n  return stateModule;\n}\n","import { original } from 'immer';\nimport jsonDiff from 'json-diff';\nimport { state as stateCreate, update } from 'bey';\n\nconst changelogs = stateCreate({});\n\nexport default function changelog(stateModule) {\n  if (stateModule.actions && typeof stateModule.actions === 'object') {\n    const key = stateModule.name || Symbol('state module name is not defined');\n\n    changelogs.set({\n      ...changelogs.get(),\n      [key]: { changes: [] },\n    });\n\n    stateModule.state.on(() => {\n      const newState = stateModule.state.get();\n      update(changelogs, (state) => {\n        const previousSnap = state[key].changes[state[key].changes.length - 1];\n        const previousValue = previousSnap ? original(previousSnap).snapshot : undefined;\n        state[key].changes.push({ snapshot: newState, updatedAt: Date.now() });\n        /* eslint-disable no-console */\n        console.groupCollapsed(`[${key}] state changed`);\n        console.log('FROM:', previousValue);\n        console.log('TO:', newState);\n        console.log('DIFF:');\n        console.log(jsonDiff.diffString(previousValue, newState));\n        console.groupEnd();\n      });\n    });\n  }\n\n  return stateModule;\n}\n","\nimport { useState as reactUseState, useEffect as reactUseEffect, useCallback } from 'react';\n\nexport function useMultipleStates(...stateModules) {\n  const finalState = [];\n\n  if (stateModules && stateModules.length > 0) {\n    stateModules.forEach((module) => {\n      const [state, setState] = reactUseState(module.state.get());\n\n      finalState.push(state);\n\n      const handler = useCallback(() => {\n        const newState = module.state.get();\n        if (newState !== state) {\n          setState(newState);\n        }\n      });\n\n      reactUseEffect(() => {\n        module.state.on(handler);\n        return function cleanup() {\n          module.state.off(handler);\n        };\n      });\n    });\n\n    return finalState;\n  }\n  throw new Error('useState requires at least one argument.');\n}\n\nexport default function useStateProvider(stateModule) {\n  if (stateModule && typeof stateModule === 'object' && stateModule.state && typeof stateModule.state === 'object') {\n    stateModule.state.useState = function useStateHook(...modules) {\n      if (modules) {\n        return useMultipleStates(...modules);\n      }\n      return useMultipleStates(stateModule);\n    };\n  }\n\n  return stateModule;\n}\n","import loadingModule from './loading';\nimport modifiedModule from './modified';\nimport changelogModule from './changelog';\nimport contextModule from './context';\nimport useStateProviderModule from './useStateProvider';\n\nexport const loading = loadingModule;\nexport const modified = modifiedModule;\nexport const changelog = changelogModule;\nexport const addContext = contextModule;\nexport const useStateProvider = useStateProviderModule;\n","import { update } from 'bey';\n\nexport default function modified(stateModule) {\n  if (stateModule.actions && typeof stateModule.actions === 'object') {\n    const initState = stateModule.state.get();\n    stateModule.state.set({ ...initState, modified: false });\n    stateModule.actions.setModified = function setModified(modifiedFlag) {\n      const currentState = stateModule.state.get();\n      if (currentState.modified !== modifiedFlag) {\n        update(stateModule.state, (state) => {\n          state.modified = modifiedFlag;\n        });\n      }\n    };\n  }\n\n  return stateModule;\n}\n","import { state as stateCreate, update } from 'bey';\nimport { actions as SnackbarActions } from '../snackbar';\nimport { changelog } from '../helpers';\n\nconst LIST_MODE = 'list';\nconst CARD_MODE = 'card';\n\nconst global = stateCreate({\n  loading: { state: false, total: 0, message: null },\n  mode: LIST_MODE,\n  menu: {\n    left: true,\n    right: true,\n  },\n});\n\nfunction setLoading(loading, message) {\n  update(global, (state) => {\n    if (loading) {\n      state.loading.total += 1;\n    } else {\n      state.loading.total -= 1;\n    }\n\n    state.loading.state = state.loading.total > 0;\n    state.loading.message = message;\n  });\n}\n\nfunction changeMode(mode) {\n  if (mode === LIST_MODE || mode === CARD_MODE) {\n    update(global, (state) => {\n      state.mode = mode;\n    });\n    SnackbarActions.setMessage(`Mode changed to: ${mode}`);\n  }\n}\n\nfunction toggleLeftMenu() {\n  update(global, (state) => {\n    state.menu.left = !state.menu.left;\n  });\n}\n\nfunction setRightMenuVisibility(visible) {\n  update(global, (state) => {\n    state.menu.right = visible;\n  });\n}\n\nconst exported = {\n  name: 'global',\n  state: global,\n  actions: {\n    setLoading, changeMode, toggleLeftMenu, setRightMenuVisibility,\n  },\n};\nexport const { state, actions } = exported;\nexport default changelog(exported);\n","import { navigate } from '../../router/router-config';\nimport { ROUTES } from '../../router/routes';\nimport { actions as GlobalActions } from '../global';\n\nconst textToRouter = {\n  List: ROUTES.LIST_CONTACTS,\n  About: ROUTES.HOME,\n  'Add Contact': ROUTES.ADD_CONTACT,\n  'Add Group': ROUTES.ADD_GROUP,\n};\n\nexport const actions = {\n  transitionToEditContact: (id) => {\n    GlobalActions.setRightMenuVisibility(true);\n    navigate(ROUTES.EDIT_CONTACT, { id });\n  },\n  transitionToContactDetail: (id) => {\n    GlobalActions.setRightMenuVisibility(true);\n    navigate(ROUTES.CONTACT_DETAILS, { id });\n  },\n  transitionToMenuOption: (text) => navigate(textToRouter[text]),\n};\n\nconst exported = {\n  name: 'history',\n  history: {\n    goBack: () => window.history.back(),\n  },\n  actions,\n};\nexport const { history } = exported;\nexport default exported;\n","import { state as stateCreate, update } from 'bey';\nimport { actions as SnackbarActions } from '../snackbar';\nimport { getGroupsService } from '../../services/groups';\nimport {\n  getContactsService,\n  getContactService,\n  updateContactService,\n  postContactService,\n  deleteContactService,\n} from '../../services/contacts';\nimport { history } from '../history';\nimport {\n  loading, modified, changelog, useStateProvider,\n} from '../helpers';\n\nconst contacts = stateCreate({\n  list: {},\n  groups: {},\n  current: {},\n});\n\nasync function loadData(id) {\n  const groupsResponse = await getGroupsService();\n  const newGroups = {};\n\n  groupsResponse.forEach((group) => {\n    newGroups[group.id] = group;\n  });\n\n  let contactsResponse;\n  if (id) {\n    contactsResponse = [await getContactService(id)];\n  } else {\n    contactsResponse = await getContactsService();\n  }\n\n  const newContacts = {};\n\n  contactsResponse.forEach((contact) => {\n    if (contact) {\n      if (contact.groups && contact.groups.length > 0) {\n        contact.groupNames = contact.groups\n          .map((groupId) => {\n            if (newGroups[groupId]) {\n              return newGroups[groupId].name;\n            }\n            return '';\n          })\n          .join(', ');\n      }\n\n      newContacts[contact.id] = contact;\n    }\n  });\n\n  update(contacts, (state) => {\n    if (id) {\n      state.current = newContacts[id] || {};\n      // state.modified = false;\n    } else {\n      state.list = newContacts;\n    }\n\n    state.groups = newGroups;\n  });\n}\n\nasync function saveContact(contact) {\n  try {\n    let response;\n\n    if (contact.id) {\n      response = await updateContactService(contact);\n    } else {\n      response = await postContactService(contact);\n    }\n\n    // eslint-disable-next-line no-console\n    console.log('current contact updated:', response);\n\n    update(contacts, (state) => {\n      state.current = contact;\n      state.modified = false;\n    });\n\n    SnackbarActions.setMessage(`Contact ${contact.id ? 'updated' : 'created'} successfully`);\n  } catch (error) {\n    SnackbarActions.displayError(error);\n  }\n  history.goBack();\n}\n\nasync function deleteContact(id) {\n  try {\n    if (id) {\n      await deleteContactService(id);\n      update(contacts, (state) => {\n        state.current = {};\n      });\n\n      SnackbarActions.setMessage('Contact deleted successfully');\n      loadData();\n    }\n  } catch (error) {\n    SnackbarActions.displayError(error);\n  }\n  history.goBack();\n}\n\nfunction contactList(state) {\n  return { current: state.current, groups: state.groups };\n}\n\nconst exported = {\n  name: 'contacts',\n  state: contacts,\n  actions: { loadData, saveContact, deleteContact },\n  selectors: { contactList },\n};\n\nexport const { actions, state, selectors } = exported;\nexport default useStateProvider(changelog(modified(loading(exported))));\n","import React, { Component } from 'react';\nimport { Subscribe } from 'bey';\nimport injectSheet from 'react-jss';\nimport PropTypes from 'prop-types';\nimport { Form, Field, FormSpy } from 'react-final-form';\nimport {\n  Button, Alert, Card, Elevation,\n} from '@blueprintjs/core';\nimport FormTextField from '../../components/FormTextField';\nimport FormMultiSelectField from '../../components/FormMultiSelectField';\nimport validate from './form-validations';\nimport { actions, selectors, state } from '../../state/contacts';\nimport { ROUTES } from '../../router/routes';\n\nconst styles = {\n  formCard: {\n    width: '300px',\n    margin: '0.5em 1em',\n    padding: '1em',\n  },\n  formContainer: {\n    paddingTop: '16px',\n  },\n  buttonsContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n};\n\nclass CreateOrEditContactPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { alertIsOpen: false };\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleContinue = this.handleContinue.bind(this);\n  }\n\n  componentDidMount() {\n    const { route: { params: { id } }, router } = this.props;\n    if (id) {\n      actions.loadData(id);\n    }\n    if (router) {\n      // eslint-disable-next-line no-unused-vars\n      const canDeactivate = (routerProvided) => (toState, fromState) => {\n        const isContactModified = state.get().modified;\n        if (isContactModified) {\n          return new Promise((resolve, reject) => {\n            this.setState({ alertIsOpen: true, continue: reject, cancel: resolve });\n          });\n        }\n        return true;\n      };\n      router.canDeactivate(ROUTES.ADD_CONTACT, canDeactivate);\n      router.canDeactivate(ROUTES.EDIT_CONTACT, canDeactivate);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { route: { params: { id } } } = this.props;\n    if (id !== nextProps.route.params.id) {\n      actions.loadData(nextProps.route.params.id);\n    }\n  }\n\n  handleCancel() {\n    this.state.continue();\n    this.setState({ alertIsOpen: false });\n  }\n\n  handleContinue() {\n    this.state.cancel();\n    this.setState({ alertIsOpen: false });\n  }\n\n  render() {\n    const { alertIsOpen } = this.state;\n    const { classes } = this.props;\n    return (\n      <div>\n        <Alert\n          cancelButtonText=\"Cancel\"\n          confirmButtonText=\"Continue\"\n          icon=\"trash\"\n          intent=\"danger\"\n          isOpen={alertIsOpen}\n          onCancel={this.handleCancel}\n          onConfirm={this.handleContinue}\n        >\n          <p>Are you sure you want leave? Your changes will be lost.</p>\n        </Alert>\n        <Subscribe to={state} on={selectors.contactList}>\n          {(contacts) => (\n            <Form\n              onSubmit={actions.saveContact}\n              validate={validate}\n              initialValues={this.props.route.params.id ? contacts.current : {}}\n              render={({\n                handleSubmit, pristine, invalid, submitting, reset,\n              }) => (\n                <Card\n                  interactive\n                  elevation={Elevation.TWO}\n                  className={classes.formCard}\n                >\n                  <form className={classes.formContainer} onSubmit={handleSubmit}>\n                    <FormSpy\n                      onChange={({ dirty }) => {\n                        actions.setModified(dirty && !submitting);\n                      }}\n                    />\n                    <Field\n                      name=\"name\"\n                      label=\"Name\"\n                      placeholder=\"Name\"\n                      component={FormTextField}\n                    />\n                    <Field\n                      name=\"email\"\n                      label=\"Email\"\n                      placeholder=\"Email\"\n                      component={FormTextField}\n                    />\n                    <Field\n                      name=\"phoneNumber\"\n                      label=\"Phone number\"\n                      placeholder=\"Phone number\"\n                      component={FormTextField}\n                    />\n                    <Field\n                      name=\"imgUrl\"\n                      label=\"Profile image url\"\n                      placeholder=\"Profile image url\"\n                      component={FormTextField}\n                    />\n                    <Field\n                      name=\"groups\"\n                      component={FormMultiSelectField}\n                      label=\"Groups\"\n                      options={Object.values(contacts.groups).map((group) => ({\n                        value: group.id,\n                        text: group.name,\n                      }))}\n                    />\n                    <div className={classes.buttonsContainer}>\n                      <Button\n                        text=\"Save contact\"\n                        icon=\"floppy-disk\"\n                        intent=\"success\"\n                        type=\"submit\"\n                        disabled={pristine || submitting || invalid}\n                      />\n                      <Button\n                        text=\"Reset values\"\n                        disabled={pristine || submitting}\n                        icon=\"refresh\"\n                        intent=\"danger\"\n                        onClick={reset}\n                      />\n                    </div>\n                  </form>\n                </Card>\n              )}\n            />\n          )}\n        </Subscribe>\n      </div>\n    );\n  }\n}\n\nCreateOrEditContactPage.propTypes = {\n  route: PropTypes.object.isRequired,\n  router: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default injectSheet(styles)(CreateOrEditContactPage);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport injectSheet from 'react-jss';\nimport {\n  Button, Card, Elevation, Classes,\n} from '@blueprintjs/core';\n\nconst styles = {\n  // eslint-disable-next-line arrow-body-style\n  cardRoot: (props) => {\n    return ({\n      width: props.big ? 'auto' : '300px',\n      padding: props.big ? 'inherit' : '0px',\n      '& .bp3-card.bp3-interactive': {\n        margin: '1em',\n        padding: 0,\n      },\n    });\n  },\n  cardContentContainer: {\n    position: 'relative',\n    textAlign: 'center',\n    height: 300,\n    width: 300,\n  },\n  cardHeader: {\n    position: 'absolute',\n    bottom: '0px',\n    right: '0px',\n    left: '0px',\n    padding: '8px',\n    margin: '0',\n    color: 'white',\n    background: 'rgba(0, 0, 0, 0.54)',\n  },\n  cardImage: {\n    maxHeight: 300,\n    maxWidth: 300,\n  },\n  cardTextContainer: {\n    fontSize: '12pt',\n    padding: '8px',\n  },\n  cardTextGroup: {\n    fontSize: '10pt',\n    color: 'grey',\n  },\n  buttonContainer: {\n    padding: '8px',\n    position: 'relative',\n  },\n  button: {\n    marginRight: '8px',\n  },\n};\n\nconst ContactCard = ({\n  // eslint-disable-next-line no-unused-vars\n  contact, onEditClick, onDeleteClick, big, loading, classes,\n}) => {\n  const {\n    name, imgUrl, email, groupNames,\n  } = contact;\n  const loadingClass = loading ? Classes.SKELETON : '';\n  return (\n    <Card\n      interactive\n      elevation={Elevation.TWO}\n      className={classes.cardRoot}\n    >\n      <div className={classes.cardContentContainer}>\n        <h1 className={classes.cardHeader}>\n          <span className={loadingClass}>{name || '...'}</span>\n        </h1>\n        <img\n          alt=\"contact\"\n          src={imgUrl || 'http://i.imgur.com/mbZIBzc.png'}\n          className={classes.cardImage}\n        />\n      </div>\n      <div className={classes.cardTextContainer}>\n        <span className={loadingClass}>{email || '...'}</span>\n        <br />\n        <span className={`${classes.cardTextGroup} ${loadingClass}`}>\n          {groupNames || 'Without group'}\n        </span>\n      </div>\n      <div className={classes.buttonContainer}>\n        <Button onClick={onEditClick} text=\"Edit\" className={classes.button} />\n        <Button onClick={onDeleteClick} text=\"Delete\" className={classes.button} />\n      </div>\n    </Card>\n  );\n};\n\nContactCard.propTypes = {\n  contact: PropTypes.object.isRequired,\n  onEditClick: PropTypes.func.isRequired,\n  onDeleteClick: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  big: PropTypes.bool,\n  loading: PropTypes.bool,\n};\n\nContactCard.defaultProps = {\n  big: false,\n  loading: false,\n};\n\nexport default injectSheet(styles)(ContactCard);\n","import React, { useEffect } from 'react';\nimport posed, { PoseGroup } from 'react-pose';\nimport PropTypes from 'prop-types';\nimport injectSheet from 'react-jss';\nimport { Button } from '@blueprintjs/core';\nimport ContactCard from '../../components/ContactCard';\nimport { useMultipleStates } from '../../state/helpers/useStateProvider';\nimport Contacts, { actions as ContactsActions } from '../../state/contacts';\nimport Global from '../../state/global';\nimport { actions as HistoryActions } from '../../state/history';\n\nconst styles = {\n  contactListItem: {\n    '&.bp3-tag.bp3-interactive': {\n      display: 'flex',\n      justifyContent: 'space-between',\n      height: '60px',\n      paddingLeft: '8px',\n      margin: '3px',\n      backgroundColor: '#394b59',\n      color: 'white',\n      boxShadow: '0 0 0 1px rgba(16, 22, 26, 0.2), 0 0 0 rgba(16, 22, 26, 0), 0 1px 1px rgba(16, 22, 26, 0.4)',\n    },\n    '&.bp3-tag.bp3-interactive:hover': {\n      background: '#202B33',\n    },\n    '&.bp3-tag.bp3-interactive.selected': {\n      background: '#5C7080',\n    },\n  },\n  contactListItemImage: {\n    maxWidth: 50,\n    minWidth: 50,\n    maxHeight: 50,\n  },\n  contactListItemTextContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignSelf: 'center',\n    marginLeft: '2rem',\n  },\n  contactListItemText1stLine: {\n    fontWeight: 'bolder',\n  },\n  contactListItemText2ndLine: {\n    fontSize: '12px',\n  },\n  contactListItemAvatar: {\n    width: '50px',\n    height: '50px',\n    fontSize: '35px',\n    backgroundColor: '#182026',\n    color: 'white',\n    textAlign: 'center',\n    lineHeight: '50px',\n    borderRadius: '50px',\n  },\n  contactListRoot: {\n    margin: '0.2em 0 0 0',\n    display: 'flex',\n    flex: '1 0 auto',\n    flexDirection: 'row',\n  },\n  contactListItemsContainer: {\n    display: 'flex',\n    flex: '1 0 auto',\n    flexDirection: 'column',\n  },\n  contactListCardsContainer: {\n    flexWrap: 'wrap',\n  },\n};\n\nconst Pop = posed.div({\n  hoverable: true,\n  init: { scale: 1 },\n  hover: { scale: 1.2 },\n});\n\nconst Item = posed.div({\n  enter: {\n    opacity: 1,\n    transition: ({ i }) => ({ delay: i * 50 }),\n  },\n  exit: { opacity: 0 },\n  props: { i: 0 },\n});\n\nfunction ContactListCards(props) {\n  return props.list.map((contact) => (\n    <ContactCard\n      key={`contact-${contact.id}`}\n      contact={contact}\n      onEditClick={() => HistoryActions.transitionToEditContact(contact.id)}\n      onDeleteClick={() => ContactsActions.deleteContact(contact.id)}\n    />\n  ));\n}\n\nfunction ContactListItems({\n  classes, route, list,\n}) {\n  return (\n    <PoseGroup>\n      {list.map((contact, i) => (\n        <Item key={`contact-${contact.id}`} id={contact.id} i={i}>\n          <div\n            role=\"presentation\"\n            onKeyPress={(e) => (e.key === 'Enter') ? HistoryActions.transitionToContactDetail(contact.id) : false}\n            onClick={() => HistoryActions.transitionToContactDetail(contact.id)}\n            className={`bp3-tag bp3-interactive ${classes.contactListItem} ${\n              route.params.id === contact.id ? 'selected' : ''\n            }`}\n          >\n            <div style={{ display: 'flex' }}>\n              {contact.imgUrl ? (\n                <Pop>\n                  <img\n                    src={contact.imgUrl}\n                    alt={contact.name}\n                    className={classes.contactListItemImage}\n                  />\n                </Pop>\n              ) : (\n                <Pop className={classes.contactListItemAvatar}>\n                  { contact.name.substring(0, 1).toUpperCase() }\n                </Pop>\n              )}\n              <div className={classes.contactListItemTextContainer}>\n                <div className={classes.contactListItemText1stLine}>{contact.name}</div>\n                <div className={classes.contactListItemText2ndLine}>{contact.groupNames || 'Without group'}</div>\n              </div>\n            </div>\n            <Pop>\n              <Button\n                icon=\"delete\"\n                onClick={(e) => {\n                  ContactsActions.deleteContact(contact.id);\n                  e.stopPropagation();\n                }}\n              />\n            </Pop>\n          </div>\n        </Item>\n      ))}\n    </PoseGroup>\n  );\n}\n\nfunction ContactList(props) {\n  useEffect(() => {\n    // Load the contact list\n    ContactsActions.loadData();\n  }, []);\n\n  // const [contacts, global] = ContactsState.useState(Contacts, Global);\n  const [contacts, global] = useMultipleStates(Contacts, Global);\n  const contactList = contacts.list;\n\n  return (\n    <div className={props.classes.contactListRoot}>\n      {global.mode === 'list' ? (\n        <div className={props.classes.contactListItemsContainer}>\n          <ContactListItems {...props} list={Object.values(contactList)} />\n        </div>\n      ) : (\n        <div className={props.classes.contactListCardsContainer}>\n          <ContactListCards {...props} list={Object.values(contactList)} />\n        </div>\n      )}\n    </div>\n  );\n}\n\nContactListCards.propTypes = {\n  list: PropTypes.array.isRequired,\n  route: PropTypes.object.isRequired,\n};\n\nContactListItems.propTypes = {\n  list: PropTypes.array.isRequired,\n  route: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nContactList.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default injectSheet(styles)(ContactList);\n","import React, { PureComponent } from 'react';\nimport { Subscribe } from 'bey';\nimport PropTypes from 'prop-types';\nimport injectSheet from 'react-jss';\nimport ContactCard from '../../components/ContactCard';\nimport { state as ContactsState, actions as ContactsActions } from '../../state/contacts';\nimport { actions as HistoryActions } from '../../state/history';\n\nconst styles = {\n  contactDetailRoot: {\n    margin: '0.5em 1em',\n    width: '300px',\n  },\n};\n\nclass ContactPage extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.onEditClick = this.onEditClick.bind(this);\n    this.onDeleteClick = this.onDeleteClick.bind(this);\n    this.transitionToEditContact = HistoryActions.transitionToEditContact;\n  }\n\n  componentDidMount() {\n    ContactsActions.loadData(this.props.route.params.id);\n  }\n\n  componentDidUpdate() {\n    ContactsActions.loadData(this.props.route.params.id);\n  }\n\n  onEditClick() {\n    this.transitionToEditContact(this.props.route.params.id);\n  }\n\n  onDeleteClick() {\n    ContactsActions.deleteContact(this.props.route.params.id);\n  }\n\n  render() {\n    return (\n      <Subscribe to={ContactsState}>\n        {(contacts) => (\n          <div className={this.props.classes.contactDetailRoot}>\n            <ContactCard\n              big\n              contact={contacts.current}\n              loading={contacts.loading}\n              onEditClick={this.onEditClick}\n              onDeleteClick={this.onDeleteClick}\n            />\n          </div>\n        )\n        }\n      </Subscribe>\n    );\n  }\n}\n\nContactPage.propTypes = {\n  route: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default injectSheet(styles)(ContactPage);\n","import { requiredValidation, maxLength } from '../../globals/validators';\n\nexport default function validate(values) {\n  const errors = {};\n  if (!requiredValidation(values.name)) {\n    errors.name = 'Name is required';\n  } else if (!maxLength(values.name, 4)) {\n    errors.name = 'Name has to 4 o more characters';\n  }\n  return errors;\n}\n","import { state as stateCreate, update } from 'bey';\nimport { actions as SnackbarActions } from '../snackbar';\nimport {\n  getGroupsService,\n  getGroupService,\n  postGroupService,\n  updateGroupService,\n} from '../../services/groups';\nimport { history } from '../history';\nimport loading from '../helpers/loading';\n\nconst groups = stateCreate({\n  list: {},\n  current: {},\n});\n\nasync function loadData(id) {\n  let groupsResponse;\n  if (id) {\n    groupsResponse = await getGroupService(id);\n    update(groups, (state) => {\n      state.current = groupsResponse;\n    });\n  } else {\n    groupsResponse = await getGroupsService();\n    update(groups, (state) => {\n      state.list = groupsResponse;\n    });\n  }\n}\n\nasync function saveGroup(group) {\n  try {\n    if (group.id) {\n      await updateGroupService(group);\n      SnackbarActions.setMessage('Group updated successfully');\n    } else {\n      await postGroupService(group);\n      SnackbarActions.setMessage('Group created successfully');\n    }\n\n    update(groups, (state) => {\n      state.current = group;\n    });\n  } catch (error) {\n    SnackbarActions.displayError(error);\n  }\n\n  history.goBack();\n}\n\nconst exported = {\n  name: 'groups',\n  state: groups,\n  actions: { loadData, saveGroup },\n};\nexport const { state, actions } = exported;\nexport default loading(exported);\n","import React, { Component } from 'react';\nimport { Subscribe } from 'bey';\nimport PropTypes from 'prop-types';\nimport injectSheet from 'react-jss';\nimport { Form, Field } from 'react-final-form';\nimport { Button, Card, Elevation } from '@blueprintjs/core';\nimport FormTextField from '../../components/FormTextField';\nimport validate from './form-validations';\nimport { actions as GroupActions, state as GroupState } from '../../state/groups';\n\nconst styles = {\n  formCard: {\n    width: '300px',\n    margin: '0.5em 1em',\n    padding: '1em',\n  },\n  formContainer: {\n    paddingTop: '16px',\n  },\n  buttonsContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n};\n\nclass CreateOrEditGroupPage extends Component {\n  componentDidMount() {\n    const { id } = this.props.route.params;\n    if (id) {\n      GroupActions.loadData(id);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.route.params.id !== nextProps.route.params.id) {\n      GroupActions.loadData(nextProps.route.params.id);\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <Subscribe to={GroupState}>\n        {(contacts) => (\n          <Form\n            onSubmit={GroupActions.saveGroup}\n            validate={validate}\n            initialValues={contacts.current}\n            render={({\n              handleSubmit, pristine, invalid, submitting, form: { reset },\n            }) => (\n              <Card\n                interactive\n                elevation={Elevation.TWO}\n                className={classes.formCard}\n              >\n                <form className={classes.formContainer} onSubmit={handleSubmit}>\n                  <Field name=\"name\" label=\"Name\" placeholder=\"Name\" component={FormTextField} />\n                  <div className={classes.buttonsContainer}>\n                    <Button\n                      icon=\"floppy-disk\"\n                      intent=\"success\"\n                      type=\"submit\"\n                      disabled={pristine || submitting || invalid}\n                      text=\"Save group\"\n                    />\n                    <Button\n                      icon=\"refresh\"\n                      intent=\"danger\"\n                      onClick={reset}\n                      disabled={pristine || submitting}\n                      text=\"Reset values\"\n                    />\n                  </div>\n                </form>\n              </Card>\n            )}\n          />\n        )}\n      </Subscribe>\n    );\n  }\n}\n\nCreateOrEditGroupPage.propTypes = {\n  route: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default injectSheet(styles)(CreateOrEditGroupPage);\n","import React, { useEffect, useState } from 'react';\nimport Sidebar from 'react-sidebar';\nimport PropTypes from 'prop-types';\nimport injectSheet from 'react-jss';\nimport { Button } from '@blueprintjs/core';\nimport { state as GlobalState, actions as GlobalActions } from '../../state/global';\n\nconst styles = {\n  sidebar: {\n    root: { position: 'initial' },\n    content: { display: 'none' },\n    overlay: { display: 'none' },\n    sidebar: { background: '#30404d', paddingTop: '3.5rem' },\n  },\n};\n\nconst mql = window.matchMedia('(min-width: 800px)');\n\nfunction DrawerMenu(props) {\n  const [state, setState] = useState({ isSmallScreen: !mql.matches, isOpen: true });\n\n  function mediaQueryChanged() {\n    setState({ ...state, isSmallScreen: !mql.matches });\n  }\n\n  function isOpenChanged() {\n    const isOpen = GlobalState.get().menu.right;\n    if (isOpen !== state.isOpen) {\n      setState({ ...state, isOpen });\n    }\n  }\n\n  useEffect(() => {\n    mql.addListener(mediaQueryChanged);\n    GlobalState.on(isOpenChanged);\n    return function cleanup() {\n      mql.removeListener(mediaQueryChanged);\n      GlobalState.off(isOpenChanged);\n    };\n  });\n\n  const { isOpen } = state;\n\n  if (!state.isSmallScreen) {\n    return props.children;\n  }\n  return (\n    <Sidebar\n      open={isOpen}\n      pullRight\n      touch\n      styles={styles.sidebar}\n      onSetOpen={(open) => {\n        GlobalActions.setRightMenuVisibility(open);\n      }}\n      sidebar={(\n        <div>\n          <Button\n            className=\"bp3-minimal\"\n            icon=\"cross\"\n            onClick={() => GlobalActions.setRightMenuVisibility(false)}\n          />\n          {props.children}\n        </div>\n      )}\n    >\n      {\n        <Button\n          className=\"bp3-minimal\"\n          icon=\"menu\"\n          onClick={() => GlobalActions.setRightMenuVisibility(!isOpen)}\n        />\n      }\n    </Sidebar>\n  );\n}\n\nDrawerMenu.propTypes = {\n  children: PropTypes.object.isRequired,\n  // classes: PropTypes.object.isRequired,\n};\n\nexport default injectSheet(styles)(DrawerMenu);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport injectSheet from 'react-jss';\nimport About from '../containers/About';\nimport ContactForm from '../containers/ContactForm';\nimport ContactList from '../containers/ContactList';\nimport ContactDetail from '../containers/ContactDetail';\nimport GroupForm from '../containers/GroupForm';\nimport DrawerMenu from '../containers/Menu/DrawerMenu';\nimport { ROUTES } from './routes';\n\nconst styles = {\n  contactDetailsLayout: {\n    display: 'flex',\n    flex: '1 0 auto',\n  },\n  editContactLayout: {\n    display: 'flex',\n    flex: '1 0 auto',\n  },\n};\n\nfunction ComponentSelector({ route, router, classes }) {\n  if (!route) {\n    return <About route={route} />;\n  }\n\n  switch (route.name) {\n    case ROUTES.ADD_GROUP:\n      return <GroupForm route={route} />;\n    case ROUTES.CONTACT_DETAILS:\n      return (\n        <div className={classes.contactDetailsLayout}>\n          <ContactList route={route} />\n          <DrawerMenu>\n            <ContactDetail route={route} />\n          </DrawerMenu>\n        </div>\n      );\n    case ROUTES.LIST_CONTACTS:\n      return <ContactList route={route} />;\n    case ROUTES.ADD_CONTACT:\n      return <ContactForm route={route} router={router} />;\n    case ROUTES.EDIT_CONTACT:\n      return (\n        <div className={classes.editContactLayout}>\n          <ContactList route={route} />\n          <DrawerMenu>\n            <ContactForm route={route} router={router} />\n          </DrawerMenu>\n        </div>\n      );\n    case ROUTES.HOME:\n    default:\n      return <About route={route} />;\n  }\n}\n\nComponentSelector.propTypes = {\n  router: PropTypes.object.isRequired,\n  route: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default injectSheet(styles)(ComponentSelector);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  MenuItem, Menu, Popover, Button, Position,\n} from '@blueprintjs/core';\n\nconst IconElementList = ({ changeListMode }) => (\n  <Popover\n    content={(\n      <Menu>\n        <MenuItem text=\"List\" onClick={() => changeListMode('list')} />\n        <MenuItem text=\"Card\" onClick={() => changeListMode('card')} />\n      </Menu>\n    )}\n    position={Position.RIGHT_TOP}\n  >\n    <Button icon=\"more\" />\n  </Popover>\n);\n\nIconElementList.propTypes = {\n  changeListMode: PropTypes.func.isRequired,\n};\n\nexport default IconElementList;\n","import React from 'react';\nimport { Subscribe } from 'bey';\nimport PropTypes from 'prop-types';\nimport { Navbar, Button, Alignment } from '@blueprintjs/core';\nimport IconElementList from '../../components/IconElementList';\nimport { state as GlobalState, actions as GlobalActions } from '../../state/global';\nimport { ROUTES } from '../../router/routes';\n\nfunction MyNavbar({\n  route,\n}) {\n  return (\n    <Subscribe to={GlobalState}>\n      {() => (\n        <React.Fragment>\n          <Navbar>\n            <Navbar.Group align={Alignment.LEFT}>\n              <Button\n                className=\"bp3-minimal\"\n                icon=\"menu\"\n                onClick={GlobalActions.toggleLeftMenu}\n              />\n              <Navbar.Divider />\n              <Navbar.Heading>Contacts app</Navbar.Heading>\n            </Navbar.Group>\n            <Navbar.Group align={Alignment.RIGHT}>\n              {route.name === ROUTES.LIST_CONTACTS ? (\n                <IconElementList changeListMode={GlobalActions.changeMode} />\n              ) : null}\n            </Navbar.Group>\n          </Navbar>\n        </React.Fragment>\n      )}\n    </Subscribe>\n  );\n}\n\nMyNavbar.propTypes = {\n  route: PropTypes.object.isRequired,\n};\n\nexport default MyNavbar;\n","import React from 'react';\nimport {\n  Toaster, Toast, Position, ProgressBar,\n} from '@blueprintjs/core';\nimport { Subscribe } from 'bey';\nimport { state as GlobalState } from '../../state/global';\n\nfunction Loader() {\n  return (\n    <Subscribe to={GlobalState}>\n      {(state) => (\n        <Toaster position={Position.TOP}>\n          {state.loading.state ? (\n            <Toast\n              message={(\n                <div>\n                  <span>{`Loading ${state.loading.message}...`}</span>\n                  <ProgressBar />\n                </div>\n              )}\n            />\n          ) : null}\n        </Toaster>\n      )}\n    </Subscribe>\n  );\n}\n\nexport default Loader;\n","import React from 'react';\nimport { Toaster, Toast, Position } from '@blueprintjs/core';\nimport { Subscribe } from 'bey';\nimport { state as SnackbarState, actions as SnackbarActions } from '../../state/snackbar';\n\nfunction SB() {\n  return (\n    <Subscribe to={SnackbarState}>\n      {(message) => (\n        <Toaster position={Position.BOTTOM}>\n          {message ? (\n            <Toast\n              message={message || ''}\n              timeout={3000}\n              onDismiss={SnackbarActions.close}\n            />\n          ) : null}\n        </Toaster>\n      )}\n    </Subscribe>\n  );\n}\n\nexport default SB;\n","import React, { useEffect, useState } from 'react';\nimport { Subscribe } from 'bey';\nimport PropTypes from 'prop-types';\nimport injectSheet from 'react-jss';\nimport Sidebar from 'react-sidebar';\nimport { Menu, MenuItem } from '@blueprintjs/core';\nimport { actions } from '../../state/history';\nimport { state as GlobalState, actions as GlobalActions } from '../../state/global';\nimport { ROUTES } from '../../router/routes';\n\nconst styles = {\n  sidebar: {\n    sidebar: {\n      background: '#30404d',\n    },\n  },\n  leftMenuRoot: {\n    paddingTop: '4rem',\n    '&.selected': {\n      background: '#5C7080',\n    },\n  },\n};\n\nfunction selectMenuOption(e) {\n  actions.transitionToMenuOption(e.target.textContent);\n}\n\nfunction InnerMenu({\n  route, smallScreen, classes,\n}) {\n  return (\n    <Menu className={classes.leftMenuRoot}>\n      <MenuItem\n        active={route.name === ROUTES.HOME}\n        onClick={(e) => {\n          selectMenuOption(e);\n          if (smallScreen) {\n            GlobalActions.toggleLeftMenu();\n          }\n        }}\n        text=\"About\"\n      />\n      <MenuItem\n        active={\n          [ROUTES.LIST_CONTACTS, ROUTES.CONTACT_DETAILS, ROUTES.EDIT_CONTACT].indexOf(route.name) !== -1\n        }\n        onClick={(e) => {\n          selectMenuOption(e);\n          if (smallScreen) {\n            GlobalActions.toggleLeftMenu();\n          }\n        }}\n        text=\"List\"\n      />\n      <MenuItem\n        active={route.name === ROUTES.ADD_CONTACT}\n        onClick={(e) => {\n          selectMenuOption(e);\n          if (smallScreen) {\n            GlobalActions.toggleLeftMenu();\n          }\n        }}\n        text=\"Add Contact\"\n      />\n      <MenuItem\n        active={route.name === ROUTES.ADD_GROUP}\n        onClick={(e) => {\n          selectMenuOption(e);\n          if (smallScreen) {\n            GlobalActions.toggleLeftMenu();\n          }\n        }}\n        text=\"Add Group\"\n      />\n    </Menu>\n  );\n}\n\nconst mql = window.matchMedia('(min-width: 800px)');\n\nconst StyledInnerMenu = injectSheet(styles)(InnerMenu);\n\nfunction LeftMenu(props) {\n  const [smallScreen, setSmallScreen] = useState(!mql.matches);\n\n  function mediaQueryChanged() {\n    setSmallScreen(!mql.matches);\n  }\n\n  useEffect(() => {\n    mql.addListener(mediaQueryChanged);\n    return function cleanup() {\n      mql.removeListener(mediaQueryChanged);\n    };\n  });\n\n  return (\n    <Subscribe to={GlobalState} on={(state) => state.menu.left}>\n      {(visible) => {\n        if (visible) {\n          if (!smallScreen) {\n            return <StyledInnerMenu smallScreen={smallScreen} {...props} />;\n          }\n          return (\n            <Sidebar\n              open={visible}\n              styles={styles.sidebar}\n              onSetOpen={GlobalActions.toggleLeftMenu}\n              sidebar={<StyledInnerMenu smallScreen={smallScreen} {...props} />}\n            >\n              {false}\n            </Sidebar>\n          );\n        }\n        return null;\n      }}\n    </Subscribe>\n  );\n}\n\nInnerMenu.propTypes = {\n  route: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  smallScreen: PropTypes.bool.isRequired,\n};\n\nexport default LeftMenu;\n","import React from 'react';\nimport { Route } from 'react-router5';\nimport PropTypes from 'prop-types';\nimport ComponentSelector from './router/ComponentSelector';\nimport Navbar from './containers/Navbar';\nimport Loader from './containers/Loader';\nimport Snackbar from './containers/Snackbar';\nimport LeftMenu from './containers/Menu/LeftMenu';\n\nfunction App({\n  router,\n  ...rest\n}) {\n  return (\n    <div className=\"bp3-fill\" style={{ backgroundColor: '#30404d', minHeight: '100vh' }}>\n      <Route router={router}>{({ route }) => <Navbar route={route} />}</Route>\n      <Loader />\n      <Route router={router}>\n        {({ route }) => (\n          <div style={{ display: 'flex' }}>\n            <LeftMenu route={route} />\n            <ComponentSelector route={route} router={router} {...rest} />\n          </div>\n        )}\n      </Route>\n      <Snackbar />\n    </div>\n  );\n}\n\nApp.propTypes = {\n  router: PropTypes.object.isRequired,\n};\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          // eslint-disable-next-line no-console\n          console.log('This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://goo.gl/SC7cgQ');\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              // eslint-disable-next-line no-console\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              // eslint-disable-next-line no-console\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      // eslint-disable-next-line no-console\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404\n        || response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      // eslint-disable-next-line no-console\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { RouterProvider } from 'react-router5';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport router from './router/router-config';\n\n\nconst Root = () => (\n  <RouterProvider router={router}>\n    <App router={router} />\n  </RouterProvider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}