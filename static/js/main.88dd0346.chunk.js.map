{"version":3,"sources":["containers/About/index.js","components/FormTextField.js","components/FormMultiSelectField.js","router/routes.js","router/router-config.js","state/snackbar/index.js","state/helpers/loading.js","state/helpers/changelog.js","state/helpers/useStateProvider.js","state/helpers/index.js","state/helpers/modified.js","state/global/index.js","services/index.js","services/groups.js","services/contacts.js","state/contacts/index.js","state/history/actions.js","state/history/index.js","components/ModifiedCheckAlert.js","globals/validators.js","containers/ContactForm/form-validations.js","containers/ContactForm/index.js","components/ContactCard.js","components/Table/Filter.js","components/Table/PaginationButton.js","components/Table/Pagination.js","components/Table/Table.js","containers/ContactList/table.js","containers/ContactList/index.js","containers/ContactDetail/index.js","containers/GroupForm/form-validations.js","state/groups/index.js","containers/GroupForm/index.js","containers/Menu/DrawerMenu.js","router/ComponentSelector.js","components/IconElementList.js","containers/Navbar/index.js","containers/Loader/index.js","containers/Snackbar/index.js","containers/Menu/LeftMenu.js","App.js","index.js","registerServiceWorker.js"],"names":["injectSheet","cardRoot","margin","cardText1stLine","fontSize","cardText2ndLine","paddingTop","paddingBottom","_ref","classes","react_default","a","createElement","card","interactive","elevation","Elevation","TWO","className","FormTextField","input","label","placeholder","_ref$meta","meta","touched","error","custom","Object","objectWithoutProperties","formGroup","helperText","intent","undefined","inputGroup","assign","defaultProps","contactGroupMultiSelect","&.bp3-popover-target","width","contactGroupTagInputProps","& .bp3-input-ghost","options","_ref$input","value","onChange","indexesOptions","length","forEach","o","multiSelect","shouldDismissPopover","noResults","menuItem","disabled","text","popoverProps","minimal","targetClassName","items","selectedItems","onItemSelect","opt","indexOf","concat","toConsumableArray","splice","tagInputProps","fill","onRemove","index","itemRenderer","_ref2","handleClick","active","key","onClick","tagRenderer","ROUTES","HOME","ADD_CONTACT","LIST_CONTACTS","CONTACT_DETAILS","ADD_GROUP","EDIT_CONTACT","routes","name","path","router","createRouter","defaultRoute","autoCleanup","usePlugin","loggerPlugin","browserPlugin","useHash","forceDeactivate","configureRouter","start","navigate","snackbar","stateCreate","exported","state","actions","setMessage","message","update","displayError","close","loading","stateModule","arguments","localLoading","values","keys","actionName","isSync","originalAction","_plusLoading","asyncToGenerator","regenerator_default","mark","_callee","_len","args","_key","result","_args","wrap","_context","prev","next","console","groupCollapsed","Array","log","groupEnd","GlobalActions","setLoading","get","apply","sent","abrupt","stop","this","changelogs","updateStateDeferred","setStateFunction","oldState","newPartialState","moduleName","futureState","componentName","listeners","changes","push","timeouts","setTimeout","newState","objectSpread","moduleNameStr","change","i","defineProperty","totalChanges","Date","getMilliseconds","diffString","executeUpdateState","t","clearTimeout","useMultipleStates","stateModulesObject","selectorsObject","mergedState","moduleKeys","module","selector","_useState3","useState","_useState4","slicedToArray","setState","handler","currentState","shallowEqual","useEffect","on","off","Error","React","StateInspector","loadingModule","modified","initState","set","setModified","modifiedFlag","changelog","Symbol","previousSnap","previousValue","original","snapshot","updatedAt","now","useStateProvider","_len2","modules","_key2","LIST_MODE","CARD_MODE","TABLE_MODE","mql","window","matchMedia","global","total","mode","menu","left","right","isSmallScreen","matches","addListener","changeMode","SnackbarActions","toggleLeftMenu","setRightMenuVisibility","visible","selectors","loader","drawerMenu","isOpen","leftMenu","firebase","apiKey","authDomain","databaseURL","BASE_URL","getGroupsService","firebaseConnection","database","ref","Promise","resolve","reject","once","groupsDB","groupsDBValue","val","groups","map","id","err","getGroupService","groupDB","groupDBValue","postGroupService","group","post","updateGroupService","others","getContactsService","contactsDB","contactsDBValue","contacts","getContactService","contactDB","contactDBValue","postContactService","contact","updateContactService","deleteContactService","list","current","loadData","_callee2","groupsResponse","newGroups","contactsResponse","newContacts","_context2","t0","groupNames","groupId","join","_callee3","response","_context3","HistoryActions","transitionToContactList","_callee4","_context4","loadContactsIfEmpty","saveContact","deleteContact","contactForm","contactList","contactListGlobal","contactDetail","textToRouter","List","About","Add Contact","Add Group","_transitionToContactList","ContactsActions","transitionToEditContact","_transitionToEditContact","_x","transitionToContactDetail","_transitionToContactDetail","_x2","transitionToMenuOption","goBack","history","back","canDeactivate","initialRoute","getState","params","actionsObject","route","previousRoute","subscribe","ModifiedCheckAlert","isModified","routesToBlock","children","_useState","alertIsOpen","_useState2","handleCancel","useCallback","continue","handleContinue","cancel","routerProvided","toState","fromState","alert_alert","cancelButtonText","confirmButtonText","icon","onCancel","onConfirm","requiredValidation","isEmail","test","isUrl","RegExp","maxLength","validate","errors","email","imgUrl","formCard","padding","formContainer","buttonsContainer","display","justifyContent","isContactModified","ContactsState","components_ModifiedCheckAlert","bey","to","react_final_form_es","onSubmit","initialValues","render","handleSubmit","pristine","invalid","submitting","reset","_ref3","dirty","component","FormMultiSelectField","buttons","type","ContactCard","onEditClick","onDeleteClick","big","loadingClass","Classes","SKELETON","cardContentContainer","cardHeader","alt","src","cardImage","cardTextContainer","cardTextGroup","buttonContainer","button","props","& .bp3-card.bp3-interactive","position","textAlign","height","bottom","color","background","maxHeight","maxWidth","marginRight","FilterComponent","filter","column","INPUT","style","Placeholder","event","target","PaginationButton","BUTTON","pagination","&.-pagination","onPageChange","pages","page","showPageSizeOptions","pageSizeOptions","pageSize","showPageJump","canPrevious","canNext","onPageSizeChange","pageJumpText","nextText","pageText","previousText","rowsSelectorText","rowsText","ofText","getSafePage","toPage","finalPage","Number","isNaN","Math","min","max","changePage","safePage","applyPage","e","preventDefault","aria-label","onBlur","onKeyPress","which","keyCode","option","Table_PaginationButton","ReactTableDefaults","PaginationComponent","SelectTable","selectTableHOC","ReactTable","Table","data","columns","getTdProps","getTrProps","getTableProps","resolveData","selected","oneNotSelected","_find","filterable","keyField","selectAll","toggleSelection","isSelected","toggleAll","reduce","acc","v","selectType","defaultFilterMethod","row","String","toLowerCase","table","& .rt-th.rt-resizable-header","overflow","& .rt-tr.selected.-odd, .rt-tr.selected.-even","backgroundColor","& .groups","& .select-wrap select","& .rt-tr-group","flex","& .rt-table","minHeight","& .edit-item, .delete-item","Pop","posed","div","hoverable","init","scale","hover","Header","accessor","Cell","cellProps","Filter","split","tag","sortable","resizable","wrapWithOriginal","func","handleOriginal","rowInfo","ContactsTable","Table_Table","r","Item","enter","opacity","transition","delay","exit","ContactListCards","components_ContactCard","ContactListItems","react_pose_es","role","contactListItem","ContactList_Pop","contactListItemImage","contactListItemAvatar","substring","toUpperCase","contactListItemTextContainer","contactListItemText1stLine","contactListItemText2ndLine","stopPropagation","ContactList","memo","_useMultipleStates","Contacts","Global","ContactsSelectors","renderListType","contactListItemsContainer","contactListCardsContainer","contactListRoot","&.bp3-tag.bp3-interactive","paddingLeft","boxShadow","&.bp3-tag.bp3-interactive:hover","&.bp3-tag.bp3-interactive.selected","minWidth","flexDirection","alignSelf","marginLeft","fontWeight","lineHeight","borderRadius","overflowY","flexWrap","contactDetailRoot","saveGroup","CreateOrEditGroupPage","GroupActions","nextProps","GroupState","form","Component","styles","sidebar","root","content","overlay","_useMultipleStates$gl","GlobalSelectors","react_sidebar_esm","open","pullRight","touch","onSetOpen","contactDetailsLayout","editContactLayout","containers_About","GroupForm","containers_ContactList","Menu_DrawerMenu","ContactDetail","ContactForm","IconElementList","changeListMode","popover","Position","RIGHT_TOP","MyNavbar","Fragment","navbar","Group","align","Alignment","LEFT","Divider","Heading","RIGHT","components_IconElementList","Loader","toaster","TOP","toast","progressBar","Snackbar","SnackbarState","BOTTOM","timeout","onDismiss","leftMenuRoot","&.selected","StyledInnerMenu","smallScreen","textContent","selectMenuOption","LeftMenu","App","Root","rest","esm_extends","History","Navbar","containers_Loader","Menu_LeftMenu","router_ComponentSelector","containers_Snackbar","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","__REDUX_DEVTOOLS_EXTENSION__","index_es","src_App","ReactDOM","src_Root","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"qPAqCeA,kBAhCA,CACbC,SAAU,CACRC,OAAQ,OAEVC,gBAAiB,CACfC,SAAU,QAEZC,gBAAiB,CACfC,WAAY,OACZF,SAAU,OACVG,cAAe,QAsBJP,CAlBf,SAAAQ,GAEG,IADDC,EACCD,EADDC,QAEA,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,aAAW,EAACC,UAAWC,IAAUC,IAAKC,UAAWT,EAAQR,UAC7DS,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,OAAKM,UAAWT,EAAQN,iBAAxB,wBACAO,EAAAC,EAAAC,cAAA,OAAKM,UAAWT,EAAQJ,iBAAxB,oHCtBN,SAASc,EAATX,GAEG,IADDY,EACCZ,EADDY,MAAOC,EACNb,EADMa,MAAOC,EACbd,EADac,YACbC,EAAAf,EAD0BgB,KAAQC,EAClCF,EADkCE,QAASC,EAC3CH,EAD2CG,MAAYC,EACvDC,OAAAC,EAAA,EAAAD,CAAApB,EAAA,wCACD,OACEE,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CACEC,WAAYL,EACZL,MAAOA,EACPW,OAAQP,GAAWC,EAAQ,cAAWO,GAEtCvB,EAAAC,EAAAC,cAACsB,EAAA,EAADN,OAAAO,OAAA,CACEb,YAAaA,EACbU,OAAQP,GAAWC,EAAQ,cAAWO,GAClCb,EACAO,KAcZR,EAAciB,aAAe,CAC3BT,OAAQ,IAGKR,mCCuDAnB,kBApFA,CACbqC,wBAAyB,CACvBC,uBAAwB,CACtBC,MAAO,SAGXC,0BAA2B,CACzBC,qBAAsB,CACpBrC,SAAU,UA4EDJ,CAvEf,SAAAQ,GASG,IARDkC,EAQClC,EARDkC,QAQCC,EAAAnC,EAPDY,MACEwB,EAMDD,EANCC,MAAOC,EAMRF,EANQE,SAETxB,EAICb,EAJDa,MAICE,EAAAf,EAHDgB,KAAQC,EAGPF,EAHOE,QAASC,EAGhBH,EAHgBG,MACjBjB,EAECD,EAFDC,QACGkB,EACFC,OAAAC,EAAA,EAAAD,CAAApB,EAAA,8CACKsC,EAAiB,GAOvB,OANIJ,GAAWA,EAAQK,OAAS,GAC9BL,EAAQM,QAAQ,SAACC,GACfH,EAAeG,EAAEL,OAASK,IAK5BvC,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CACEC,WAAYL,EACZL,MAAOA,EACPW,OAAQP,GAAWC,EAAQ,cAAWO,GAEtCvB,EAAAC,EAAAC,cAACsC,EAAA,EAADtB,OAAAO,OAAA,CACEgB,sBAAsB,EACtBC,UAAW1C,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAUC,UAAQ,EAACC,KAAK,gBACnCC,aAAc,CAAEC,SAAS,EAAMC,gBAAiBjD,EAAQ4B,yBACxDsB,MAAOjB,EACPkB,cAAyB,KAAVhB,EAAe,GAAKA,EACnCiB,aAAc,SAACC,IACqB,IAA9BlB,EAAMmB,QAAQD,EAAIlB,OACpBC,EAAQ,GAAAmB,OAAApC,OAAAqC,EAAA,EAAArC,CAAKgB,GAAL,CAAYkB,EAAIlB,UAExBA,EAAMsB,OAAOtB,EAAMmB,QAAQD,EAAIlB,OAAQ,GACvCC,EAASD,KAGbuB,cAAe,CACb7C,YAAa,2BACb8C,MAAM,EACNlD,UAAWT,EAAQ+B,0BACnB6B,SAAU,SAACP,EAAKQ,GACV1B,GAASA,EAAMG,OAAS,IAC1BH,EAAMsB,OAAOI,EAAO,GACpBzB,EAASD,MAIf2B,aAAc,SAACT,EAADU,GAAA,IAAQC,EAARD,EAAQC,YAAR,OACZ/D,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CACEqB,QAAsC,IAA9B9B,EAAMmB,QAAQD,EAAIlB,OAC1B+B,IAAG,UAAAX,OAAYF,EAAIlB,OACnBW,KAAMO,EAAIP,KACVqB,QAASH,KAGbI,YAAa,SAACf,GAAD,OAAShB,EAAegB,GAAKP,OACtC5B,kDC5ECmD,EAAS,CACpBC,KAAM,OACNC,YAAa,aACbC,cAAe,eACfC,gBAAiB,iBACjBC,UAAW,WACXC,aAAc,eAGHC,EAAS,CACpB,CAAEC,KAAMR,EAAOC,KAAMQ,KAAM,KAC3B,CAAED,KAAMR,EAAOE,YAAaO,KAAM,QAClC,CAAED,KAAMR,EAAOG,cAAeM,KAAM,SACpC,CAAED,KAAMR,EAAOM,aAAcG,KAAM,aACnC,CAAED,KAAMR,EAAOI,gBAAiBK,KAAM,eACtC,CAAED,KAAMR,EAAOK,UAAWI,KAAM,eCQlC,IAAMC,EAlBN,WACE,IAAMA,EAASC,YAAaJ,EAAQ,CAClCK,aAAc,OACdC,aAAa,IAYf,OARAH,EAAOI,UACLC,IACAC,YAAc,CACZC,SAAS,EACTC,iBAAiB,KAIdR,EAGMS,GACfT,EAAOU,YAEQC,EAAaX,EAAbW,SACAX,6BCzBTY,EAAWC,gBAAY,MAsB7B,IAAMC,EAAW,CACfhB,KAAM,WACNiB,MAAOH,EACPI,QAAS,CAAEC,WAvBb,SAAoBC,GAClBC,iBAAOP,EAAU,kBAAMM,KAsBAE,aAnBzB,SAAsBlF,GACpB,IAAIgF,EAAU,gBAEVhF,GAASA,EAAMgF,QAEjBA,EAAUhF,EAAMgF,QACU,kBAAVhF,IAChBgF,EAAUhF,GAEZiF,iBAAOP,EAAU,kBAAMM,KAUcG,MAPvC,WACEF,iBAAOP,EAAU,kBAAM,UAQVG,EAAmBD,EAAnBC,MAAOC,EAAYF,EAAZE,QCrBP,SAASM,EAAQC,GAAgD,IAAnCrE,EAAmCsE,UAAAjE,OAAA,QAAAd,IAAA+E,UAAA,GAAAA,UAAA,GAAzB,CAAEC,cAAc,GAwCrE,OAvCIF,EAAYP,SAAW5E,OAAOsF,OAAOH,EAAYP,SAASzD,OAAS,GACrEnB,OAAOuF,KAAKJ,EAAYP,SAASxD,QAAQ,SAACoE,GACxC,GACEL,EAAYP,QAAQY,IAC0B,oBAApCL,EAAYP,QAAQY,KATf,IAUJL,EAAYP,QAAQY,GAV3BC,OAWJ,CACA,IAAMC,EAAiBP,EAAYP,QAAQY,GAE3CL,EAAYP,QAAQY,GAApB,eAAAG,EAAA3F,OAAA4F,EAAA,EAAA5F,CAAA6F,EAAA9G,EAAA+G,KAAkC,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAhB,UAAA,OAAAS,EAAA9G,EAAAsH,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WAEhCC,QAAQC,eAAR,IAAAtE,OAA2B+C,EAAYzB,KAAvC,wBAAAtB,OAAkEoD,EAAlE,OAFgCQ,EAAAI,EAAAjF,OAA8B8E,EAA9B,IAAAU,MAAAX,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAA8BD,EAA9BC,GAAAE,EAAAF,GAAA,OAGhCO,QAAQG,IAAR,oBAAAxE,OAAgC6D,IAChCQ,QAAQI,WACRC,GAAcC,YAAW,EAAM5B,EAAYzB,MACvC5C,EAAQuE,eAEY,IADAF,EAAYR,MAAMqC,MAAM9B,SAE5CH,iBAAOI,EAAYR,MAAO,SAACA,GACzBA,EAAMO,SAAU,IAVUoB,EAAAE,KAAA,EAcXd,EAAcuB,WAAd,EAAkBhB,GAdP,cAc1BE,EAd0BG,EAAAY,KAe5BpG,EAAQuE,eAEW,IADAF,EAAYR,MAAMqC,MAAM9B,SAE3CH,iBAAOI,EAAYR,MAAO,SAACA,GACzBA,EAAMO,SAAU,IAItB4B,GAAcC,YAAW,EAAO5B,EAAYzB,MAvBZ4C,EAAAa,OAAA,SAwBzBhB,GAxByB,yBAAAG,EAAAc,SAAArB,EAAAsB,SAAlC,yBAAA1B,EAAAsB,MAAAI,KAAAjC,YAAA,MA8BCD,0CC5CHmC,EAAa7C,gBAAY,0BCkC/B,SAAS8C,EAAoBC,EAAkBC,EAAUC,EAAiBC,EAAYC,EAAaC,EAAeC,GAEhHF,EAAYG,QAAQC,KAAK,CAAEP,WAAUC,kBAAiBC,eACtD,IAAIM,EAAW,GACfA,EAASD,KAAKE,WAAW,WACvB,GAAIN,EAAYG,QAAQ5G,OAAS,EAAG,CAClC,IAAIgH,EAAQnI,OAAAoI,EAAA,EAAApI,CAAA,GAAQ4H,EAAYH,UAC5BY,EAAgB,GACpBT,EAAYG,QAAQ3G,QAAQ,SAACkH,EAAQC,GACnCF,GAAiBC,EAAOX,YAAeY,IAAMX,EAAYG,QAAQ5G,OAAS,EAAK,MAAQ,IACvFgH,EAAQnI,OAAAoI,EAAA,EAAApI,CAAA,GAAQmI,EAARnI,OAAAwI,EAAA,EAAAxI,CAAA,GAAmBsI,EAAOX,WAAaW,EAAOZ,oBAW9D,SAA4BF,EAAkBC,EAAUU,EAAUR,EAAYc,EAAcZ,EAAeC,GAMzG,GAJArB,QAAQC,eAAR,IAAAtE,OAA2BuF,EAA3B,iBAAAvF,OAAqDqG,EAArD,mBAAArG,OAAmFyF,EAAnF,SAAAzF,QAAwG,IAAIsG,MAAOC,oBACnHlC,QAAQG,IAAI,cAAeuB,GAC3B1B,QAAQG,IAAIgC,qBAAWnB,EAAUU,IACjC1B,QAAQI,WACJiB,EAAY,EACd,OAAON,EAAiBW,GAhBtBU,CAAmBrB,EAAkBC,EAAUU,EAAUE,EAAeT,EAAYG,QAAQ5G,OAAQ0G,EAAeC,GACnHF,EAAYH,SAAWU,EACvBP,EAAYG,QAAU,GACtBE,EAAS7G,QAAQ,SAAC0H,GAAD,OAAOC,aAAaD,KACrCb,EAAW,KAEZ,IAeE,SAASe,EAAkBnB,EAAeoB,GAA0C,IAAtBC,EAAsB9D,UAAAjE,OAAA,QAAAd,IAAA+E,UAAA,GAAAA,UAAA,GAAJ,GACjF+D,EAAc,GAElB,GAAIF,GAAoD,kBAAvBA,GAAmCjJ,OAAOuF,KAAK0D,GAAoB9H,OAAS,EAAG,CAC9G,IAAMiI,EAAapJ,OAAOuF,KAAK0D,GAC/BG,EAAWhI,QAAQ,SAAC2B,GAClB,IAAMsG,EAASJ,EAAmBlG,GAC5B4B,EAAQ0E,EAAO1E,MAAMqC,MACrBsC,EAAWJ,EAAgBnG,GACjCoG,EAAWnJ,OAAAoI,EAAA,EAAApI,CAAA,GAAQmJ,EAARnJ,OAAAwI,EAAA,EAAAxI,CAAA,GAAsBqJ,EAAO3F,KAAQ4F,EAAYA,EAAS3E,GAASA,MAN8B,IAAA4E,EASpFC,YAASL,EAAatB,GAT8D4B,EAAAzJ,OAAA0J,EAAA,EAAA1J,CAAAuJ,EAAA,GASvG5E,EATuG8E,EAAA,GAShGE,EATgGF,EAAA,GAWxG7B,EAAc,CAAEH,SAAU9C,EAAOwD,SAAU,GAAIJ,QAAS,IAC1DD,EAAY,EAyBhB,OAxBAsB,EAAWhI,QAAQ,SAAC2B,GAClB,IAAMsG,EAASJ,EAAmBlG,GAC5BuG,EAAWJ,EAAgBnG,GAE3B6G,EAAU,WACd,IAAMC,EAAeR,EAAO1E,MAAMqC,MAC5BmB,EAAYmB,EAAYA,EAASO,GAAgBA,EAElDC,IAAa3B,EAAUxD,EAAM0E,EAAO3F,QAEvC6D,EAAoBoC,EAAUhF,EAAOwD,EAAUkB,EAAO3F,KAAMkE,EAAaC,EAAeC,IAI5FiC,oBAAU,WAGR,OAFAjC,GAAa,EACbuB,EAAO1E,MAAMqF,GAAGJ,GACT,WACL9B,GAAa,EACbuB,EAAO1E,MAAMsF,IAAIL,QAKhBjF,EAET,MAAM,IAAIuF,MAAM,kHA3GlBC,IAAMnL,cAAcoL,KCAb,IAAMlF,EAAUmF,EACVC,ECLE,SAAkBnF,GAE/B,GAAIA,EAAYP,SAA0C,kBAAxBO,EAAYP,QAAsB,CAClE,IAAM2F,EAAYpF,EAAYR,MAAMqC,MACpC7B,EAAYR,MAAM6F,IAAlBxK,OAAAoI,EAAA,EAAApI,CAAA,GAA2BuK,EAA3B,CAAsCD,UAAU,KAChDnF,EAAYP,QAAQ6F,YAAc,SAAqBC,GAChCvF,EAAYR,MAAMqC,MACtBsD,WAAaI,GAC5B3F,iBAAOI,EAAYR,MAAO,SAACA,GACzBA,EAAM2F,SAAWI,KAMzB,OAAOvF,GDTIwF,GFFE,SAAmBxF,GAChC,GAAIA,EAAYP,SAA0C,kBAAxBO,EAAYP,QAAsB,CAClE,IAAM7B,EAAMoC,EAAYzB,MAAQkH,OAAO,oCAEvCtD,EAAWkD,IAAXxK,OAAAoI,EAAA,EAAApI,CAAA,GACKsH,EAAWN,MADhBhH,OAAAwI,EAAA,EAAAxI,CAAA,GAEG+C,EAAM,CAAEgF,QAAS,OAGpB5C,EAAYR,MAAMqF,GAAG,WACnB,IAAM7B,EAAWhD,EAAYR,MAAMqC,MACnCjC,iBAAOuC,EAAY,SAAC3C,GAClB,IAAMkG,EAAelG,EAAM5B,GAAKgF,QAAQpD,EAAM5B,GAAKgF,QAAQ5G,OAAS,GAC9D2J,EAAgBD,EAAeE,mBAASF,GAAcG,cAAW3K,EACvEsE,EAAM5B,GAAKgF,QAAQC,KAAK,CAAEgD,SAAU7C,EAAU8C,UAAWvC,KAAKwC,QAE9DzE,QAAQC,eAAR,IAAAtE,OAA2BW,EAA3B,wBAAAX,QAAqD,IAAIsG,MAAOC,oBAChElC,QAAQG,IAAI,QAASkE,GACrBrE,QAAQG,IAAI,MAAOuB,GACnB1B,QAAQG,IAAI,SACZH,QAAQG,IAAIgC,qBAAWkC,EAAe3C,IACtC1B,QAAQI,eAKd,OAAO1B,GEtBIgG,GD0GE,SAA0BhG,GAUvC,OATIA,GAAsC,kBAAhBA,GAA4BA,EAAYR,OAAsC,kBAAtBQ,EAAYR,QAC5FQ,EAAYR,MAAM6E,SAAW,WAAkC,QAAA4B,EAAAhG,UAAAjE,OAATkK,EAAS,IAAA1E,MAAAyE,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAATD,EAASC,GAAAlG,UAAAkG,GAC7D,OAAID,EACKrC,EAAiB/B,WAAjB,EAAqBoE,GAEvBrC,EAAkB7D,KAItBA,GG1HHoG,GAAY,OACZC,GAAY,OACZC,GAAa,QAEbC,GAAMC,OAAOC,WAAW,sBAExBC,GAASpH,gBAAY,CACzBS,QAAS,CAAEP,OAAO,EAAOmH,MAAO,EAAGhH,QAAS,MAC5CiH,KAAMN,GACNO,KAAM,CACJC,MAAM,EACNC,OAAO,GAETC,eAAgBT,GAAIU,UAGtBV,GAAIW,YAAY,WACdtH,iBAAO8G,GAAQ,SAAClH,GACdA,EAAMwH,eAAiBT,GAAIU,YAkD/B,IAAM1H,GAAW,CACfhB,KAAM,SACNiB,MAAOkH,GACPjH,QAAS,CACPmC,WAlDJ,SAAoB7B,EAASJ,GAC3BC,iBAAO8G,GAAQ,SAAClH,GACVO,EACFP,EAAMO,QAAQ4G,OAAS,EAEvBnH,EAAMO,QAAQ4G,OAAS,EAGzBnH,EAAMO,QAAQP,MAAQA,EAAMO,QAAQ4G,MAAQ,EAC5CnH,EAAMO,QAAQJ,QAAUA,KAyCZwH,WArChB,SAAoBP,GACdA,IAASR,IAAaQ,IAASP,IAAaO,IAASN,KACvD1G,iBAAO8G,GAAQ,SAAClH,GACdA,EAAMoH,KAAOA,IAEfQ,EAAgB1H,WAAhB,oBAAAzC,OAA+C2J,MAgCvBS,eA5B5B,WACEzH,iBAAO8G,GAAQ,SAAClH,GACdA,EAAMqH,KAAKC,MAAQtH,EAAMqH,KAAKC,QA0BUQ,uBAtB5C,SAAgCC,GAC9B3H,iBAAO8G,GAAQ,SAAClH,GACdA,EAAMqH,KAAKE,MAAQQ,MAsBrBC,UAAW,CACTC,OAnBJ,SAAgBjI,GACd,MAAO,CAAEO,QAAS,CAAEP,MAAOA,EAAMO,QAAQP,MAAOG,QAASH,EAAMO,QAAQJ,WAkB7D+H,WAfZ,SAAoBlI,GAClB,MAAO,CAAEmI,OAAQnI,EAAMqH,KAAKE,MAAOC,cAAexH,EAAMwH,gBAclCY,SAXxB,SAAkBpI,GAChB,MAAO,CAAEmI,OAAQnI,EAAMqH,KAAKC,KAAME,cAAexH,EAAMwH,kBAanCvH,GAAuBF,GAAvBE,QAAS+H,GAAcjI,GAAdiI,UAChBhC,MAAUjG,aC3EzBsI,iBANe,CACbC,OAAQ,0CACRC,WAAY,qCACZC,YAAa,+CAKAH,UCRTI,GAAW,UAEV,SAASC,KACd,IAAMC,EAAqBN,GAASO,WAAWC,IAApB,GAAApL,OAA2BgL,KACtD,OAAO,IAAIK,QAAQ,SAACC,EAASC,GAC3BL,EAAmBM,KACjB,QACA,SAACC,GACC,IAAMC,EAAgBD,EAASE,MACzBC,EAAS,GAKf,OAJAhO,OAAOuF,KAAKuI,GAAeG,IAAI,SAACC,GAAD,OAAQF,EAAOhG,KAAPhI,OAAAoI,EAAA,EAAApI,CAAA,CACrCkO,MACGJ,EAAcI,OAEZR,EAAQM,IAEjB,SAACG,GAAD,OAASR,EAAOQ,OAKf,SAASC,GAAgBF,GAC9B,IAAMZ,EAAqBN,GAASO,WAAWC,IAApB,GAAApL,OAA2BgL,GAA3B,KAAAhL,OAAuC8L,IAClE,OAAO,IAAIT,QAAQ,SAACC,EAASC,GAC3BL,EAAmBM,KACjB,QACA,SAACS,GACC,IAAMC,EAAeD,EAAQN,MAE7B,OADAO,EAAaJ,GAAKA,EACXR,EAAQY,IAEjB,SAACH,GAAD,OAASR,EAAOQ,OAKf,SAASI,GAAiBC,GAC/B,IAAMlB,EAAqBN,GAASO,WAAWC,IAApB,GAAApL,OAA2BgL,KACtD,OAAO,IAAIK,QAAQ,SAACC,EAASC,GAC3B,IAAMc,EAAOnB,EAAmBtF,OAChCyG,EAAKjE,IAAIgE,EAAO,SAACL,GACf,OAAIA,EACKR,EAAOQ,GAETT,EAAQ1N,OAAAoI,EAAA,EAAApI,CAAA,CACbkO,GAAIO,EAAK1L,KACNyL,QAMJ,SAASE,GAAT9P,GAA+C,IAAjBsP,EAAiBtP,EAAjBsP,GAAOS,EAAU3O,OAAAC,EAAA,EAAAD,CAAApB,EAAA,QAC9C0O,EAAqBN,GAASO,WAAWC,IAApB,GAAApL,OAA2BgL,GAA3B,KAAAhL,OAAuC8L,IAClE,OAAO,IAAIT,QAAQ,SAACC,EAASC,GAC3BL,EAAmB9C,IAAnBxK,OAAAoI,EAAA,EAAApI,CAAA,GAA4B2O,GAAU,SAACR,GACrC,OAAIA,EACKR,EAAOQ,GAETT,EAAQ1N,OAAAoI,EAAA,EAAApI,CAAA,CACbkO,MACGS,QC7DX,IAAMvB,GAAW,QAEV,SAASwB,KACd,IAAMtB,EAAqBN,GAASO,WAAWC,IAApB,GAAApL,OAA2BgL,KACtD,OAAO,IAAIK,QAAQ,SAACC,EAASC,GAC3BL,EAAmBM,KACjB,QACA,SAACiB,GACC,IAAMC,EAAkBD,EAAWd,MAC7BgB,EAAW,GAKjB,OAJA/O,OAAOuF,KAAKuJ,GAAiBb,IAAI,SAACC,GAAD,OAAQa,EAAS/G,KAAThI,OAAAoI,EAAA,EAAApI,CAAA,CACvCkO,MACGY,EAAgBZ,OAEdR,EAAQqB,IAEjB,SAACZ,GAAD,OAASR,EAAOQ,OAKf,SAASa,GAAkBd,GAChC,IAAMZ,EAAqBN,GAASO,WAAWC,IAApB,GAAApL,OAA2BgL,GAA3B,KAAAhL,OAAuC8L,IAClE,OAAO,IAAIT,QAAQ,SAACC,EAASC,GAC3BL,EAAmBM,KACjB,QACA,SAACqB,GACC,IAAMC,EAAiBD,EAAUlB,MAIjC,OAHImB,IACFA,EAAehB,GAAKA,GAEfR,EAAQwB,IAEjB,SAACf,GAAD,OAASR,EAAOQ,OAKf,SAASgB,GAAmBC,GACjC,IAAM9B,EAAqBN,GAASO,WAAWC,IAApB,GAAApL,OAA2BgL,KACtD,OAAO,IAAIK,QAAQ,SAACC,EAASC,GAC3B,IAAMc,EAAOnB,EAAmBtF,OAChCyG,EAAKjE,IAAI4E,EAAS,SAACjB,GACjB,OAAIA,EACKR,EAAOQ,GAETT,EAAQ1N,OAAAoI,EAAA,EAAApI,CAAA,CACbkO,GAAIO,EAAK1L,KACNqM,QAMJ,SAASC,GAATzQ,GAAiD,IAAjBsP,EAAiBtP,EAAjBsP,GAAOS,EAAU3O,OAAAC,EAAA,EAAAD,CAAApB,EAAA,QAChD0O,EAAqBN,GAASO,WAAWC,IAApB,GAAApL,OAA2BgL,GAA3B,KAAAhL,OAAuC8L,IAClE,OAAO,IAAIT,QAAQ,SAACC,EAASC,GAC3BL,EAAmB9C,IAAnBxK,OAAAoI,EAAA,EAAApI,CAAA,GAA4B2O,GAAU,SAACR,GACrC,OAAIA,EACKR,EAAOQ,GAETT,EAAQ1N,OAAAoI,EAAA,EAAApI,CAAA,CACbkO,MACGS,QAMJ,SAASW,GAAqBpB,GACnC,IAAMZ,EAAqBN,GAASO,WAAWC,IAApB,GAAApL,OAA2BgL,GAA3B,KAAAhL,OAAuC8L,IAClE,OAAO,IAAIT,QAAQ,SAACC,EAASC,GAC3BL,EAAmB9C,IAAI,KAAM,SAAC2D,GAC5B,OAAIA,EACKR,EAAOQ,GAETT,EAAQ,CAAEQ,WC/DvB,IAAMa,GAAWtK,gBAAY,CAC3B8K,KAAM,GACNvB,OAAQ,GACRwB,QAAS,kDAGX,SAAAzJ,IAAA,OAAAF,EAAA9G,EAAAsH,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAE+B,IADPxG,OAAOsF,OAAOyJ,GAAS/H,MAAMuI,MACjCpO,QAChBsO,KAHJ,wBAAAnJ,EAAAc,SAAArB,EAAAsB,yCAOeoI,mFAAf,SAAAC,EAAwBxB,GAAxB,IAAAyB,EAAAC,EAAAC,EAAAC,EAAA,OAAAjK,EAAA9G,EAAAsH,KAAA,SAAA0J,GAAA,cAAAA,EAAAxJ,KAAAwJ,EAAAvJ,MAAA,cAAAuJ,EAAAvJ,KAAA,EAG+B6G,KAH/B,UAGQsC,EAHRI,EAAA7I,KAIQ0I,EAAY,GAElBD,EAAevO,QAAQ,SAACoN,GACtBoB,EAAUpB,EAAMN,IAAMM,KAIpBN,EAXN,CAAA6B,EAAAvJ,KAAA,gBAAAuJ,EAAAvJ,KAAA,EAY8BwI,GAAkBd,GAZhD,OAAA6B,EAAAC,GAAAD,EAAA7I,KAYI2I,EAZJ,CAAAE,EAAAC,IAAAD,EAAAvJ,KAAA,wBAAAuJ,EAAAvJ,KAAA,GAc6BoI,KAd7B,QAcIiB,EAdJE,EAAA7I,KAAA,QAiBQ4I,EAAc,GAEpBD,EAAiBzO,QAAQ,SAACgO,GACpBA,IACEA,EAAQpB,QAAUoB,EAAQpB,OAAO7M,OAAS,IAE5CiO,EAAQa,WAAab,EAAQpB,OAC1BC,IAAI,SAACiC,GACJ,OAAIN,EAAUM,GACLN,EAAUM,GAASxM,KAErB,KAERyM,KAAK,OAGVL,EAAYV,EAAQlB,IAAMkB,KAM9BrK,iBAAOgK,GAAU,SAACpK,GACZuJ,EACFvJ,EAAM6K,QAAUM,EAAY5B,IAAO,GAGnCvJ,EAAM4K,KAAOO,EAGfnL,EAAMqJ,OAAS4B,IA/CnB,yBAAAG,EAAA3I,SAAAsI,EAAArI,6EAmDA,SAAA+I,EAA2BhB,GAA3B,IAAAiB,EAAA,OAAAxK,EAAA9G,EAAAsH,KAAA,SAAAiK,GAAA,cAAAA,EAAA/J,KAAA+J,EAAA9J,MAAA,UAAA8J,EAAA/J,KAAA,GAIQ6I,EAAQlB,GAJhB,CAAAoC,EAAA9J,KAAA,eAAA8J,EAAA9J,KAAA,EAKuB6I,GAAqBD,GAL5C,OAKMiB,EALNC,EAAApJ,KAAAoJ,EAAA9J,KAAA,uBAAA8J,EAAA9J,KAAA,EAOuB2I,GAAmBC,GAP1C,OAOMiB,EAPNC,EAAApJ,KAAA,QAWIT,QAAQG,IAAI,2BAA4ByJ,GAExCtL,iBAAOgK,GAAU,SAACpK,GAChBA,EAAM6K,QAAUJ,EAChBzK,EAAM2F,UAAW,IAGnBiC,EAAgB1H,WAAhB,WAAAzC,OAAsCgN,EAAQlB,GAAK,UAAY,UAA/D,kBAlBJoC,EAAA9J,KAAA,iBAAA8J,EAAA/J,KAAA,GAAA+J,EAAAN,GAAAM,EAAA,SAoBI/D,EAAgBvH,aAAhBsL,EAAAN,IApBJ,QAsBEO,GAAeC,0BAtBjB,yBAAAF,EAAAlJ,SAAAgJ,EAAA/I,KAAA,iFAyBA,SAAAoJ,EAA6BvC,GAA7B,OAAArI,EAAA9G,EAAAsH,KAAA,SAAAqK,GAAA,cAAAA,EAAAnK,KAAAmK,EAAAlK,MAAA,UAAAkK,EAAAnK,KAAA,GAEQ2H,EAFR,CAAAwC,EAAAlK,KAAA,eAAAkK,EAAAlK,KAAA,EAGY8I,GAAqBpB,GAHjC,OAIMnJ,iBAAOgK,GAAU,SAACpK,GAChBA,EAAM6K,QAAU,KAGlBjD,EAAgB1H,WAAW,gCAC3B4K,KATN,OAAAiB,EAAAlK,KAAA,gBAAAkK,EAAAnK,KAAA,EAAAmK,EAAAV,GAAAU,EAAA,SAYInE,EAAgBvH,aAAhB0L,EAAAV,IAZJ,yBAAAU,EAAAtJ,SAAAqJ,EAAApJ,KAAA,mCAgCA,IAAM3C,GAAW,CACfhB,KAAM,WACNiB,MAAOoK,GACPnK,QAAS,CACP6K,YAAUkB,gEAAqBC,yDAAaC,4DAE9ClE,UAAW,CACTmE,YAvBJ,SAAqBnM,GACnB,MAAO,CAAE6K,QAAS7K,EAAM6K,QAASxB,OAAQrJ,EAAMqJ,SAsBhC+C,YAfjB,SAAqBpM,GACnB,MAAO,CAAE6K,QAAS7K,EAAM6K,QAASD,KAAM5K,EAAM4K,KAAMvB,OAAQrJ,EAAMqJ,SAcrCgD,kBAX9B,SAA2BrM,GACzB,MAAO,CAAEoH,KAAMpH,EAAMoH,OAU0BkF,cAnBjD,SAAuBtM,GACrB,MAAO,CAAE6K,QAAS7K,EAAM6K,QAAStK,QAASP,EAAMO,YAsBnCN,GAA8BF,GAA9BE,QAASD,GAAqBD,GAArBC,MAAOgI,GAAcjI,GAAdiI,UAChBxB,MAAiBR,GAAUL,EAASpF,EAAQR,GAAU,CAAEW,cAAc,OC/I/E6L,GAAe,CACnBC,KAAMjO,EAAOG,cACb+N,MAAOlO,EAAOC,KACdkO,cAAenO,EAAOE,YACtBkO,YAAapO,EAAOK,WAGhBqB,GAAU,CACd4L,wBAAuB,eAAAe,EAAAvR,OAAA4F,EAAA,EAAA5F,CAAA6F,EAAA9G,EAAA+G,KAAE,SAAAC,IAAA,OAAAF,EAAA9G,EAAAsH,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACjBgL,GAAgB/B,WADC,OAEvBlL,EAASrB,EAAOG,eAFO,wBAAAiD,EAAAc,SAAArB,EAAAsB,SAAF,yBAAAkK,EAAAtK,MAAAI,KAAAjC,YAAA,GAIvBqM,wBAAuB,eAAAC,EAAA1R,OAAA4F,EAAA,EAAA5F,CAAA6F,EAAA9G,EAAA+G,KAAE,SAAA4J,EAAA9Q,GAAA,IAAAsP,EAAA,OAAArI,EAAA9G,EAAAsH,KAAA,SAAA0J,GAAA,cAAAA,EAAAxJ,KAAAwJ,EAAAvJ,MAAA,cAAS0H,EAATtP,EAASsP,GAAT6B,EAAAvJ,KAAA,EACjB,CAACgL,GAAgB/B,SAASvB,GAAKsD,GAAgBb,uBAD9B,OAEvB7J,GAAc2F,wBAAuB,GACrClI,EAASrB,EAAOM,aAAc,CAAE0K,OAHT,wBAAA6B,EAAA3I,SAAAsI,EAAArI,SAAF,gBAAAsK,GAAA,OAAAD,EAAAzK,MAAAI,KAAAjC,YAAA,GAKvBwM,0BAAyB,eAAAC,EAAA7R,OAAA4F,EAAA,EAAA5F,CAAA6F,EAAA9G,EAAA+G,KAAE,SAAAsK,EAAAxN,GAAA,IAAAsL,EAAA,OAAArI,EAAA9G,EAAAsH,KAAA,SAAAiK,GAAA,cAAAA,EAAA/J,KAAA+J,EAAA9J,MAAA,cAAS0H,EAATtL,EAASsL,GAAToC,EAAA9J,KAAA,EACnB,CAACgL,GAAgB/B,SAASvB,GAAKsD,GAAgBb,uBAD5B,OAKzB7J,GAAc2F,wBAAuB,GACrClI,EAASrB,EAAOI,gBAAiB,CAAE4K,OANV,wBAAAoC,EAAAlJ,SAAAgJ,EAAA/I,SAAF,gBAAAyK,GAAA,OAAAD,EAAA5K,MAAAI,KAAAjC,YAAA,GAQzB2M,uBAAwB,SAACpQ,GACnBiD,GAAQsM,GAAavP,IACvBiD,GAAQsM,GAAavP,MAErB4C,EAAS2M,GAAavP,KAG1BqQ,OAAQ,kBAAMrG,OAAOsG,QAAQC,QAC7BtO,OAAQ,CACNuO,cAAevO,EAAOuO,gBAI1BvN,GAAQ1B,EAAOM,cAAgBoB,GAAQ6M,wBACvC7M,GAAQ1B,EAAOI,iBAAmBsB,GAAQgN,0BAC1ChN,GAAQ1B,EAAOG,eAAiBuB,GAAQ4L,wBAEzB5L,UC3CTwN,GAAexO,EAAOyO,WACpB3O,GAAiB0O,GAAjB1O,KAAM4O,GAAWF,GAAXE,OAEVC,GAAc7O,KAChB6O,GAAc7O,IAAM4O,IAGtB,IAAML,GAAUxN,gBAAY,CAC1B+N,MAAOJ,GACPK,cAAe,KAGX/N,GAAW,CACfhB,KAAM,UACNiB,MAAOsN,GACPrN,QAAS2N,IAGX3O,EAAO8O,UAAU,SAACpK,GAChBvD,iBAAOkN,GAAS,SAACtN,GAEfA,EAAM6N,MAAQlK,EAAOkK,MACrB7N,EAAM8N,cAAgBnK,EAAOmK,sBAIX7N,GAAYF,GAAZE,QACPF,MCiCAiO,OA3Df,SAAA/T,GAEG,IADDgU,EACChU,EADDgU,WAAYC,EACXjU,EADWiU,cAAeC,EAC1BlU,EAD0BkU,SAC1BC,EACyBvJ,mBAAS,CAAEwJ,aAAa,IADjDC,EAAAjT,OAAA0J,EAAA,EAAA1J,CAAA+S,EAAA,GACMpO,EADNsO,EAAA,GACatJ,EADbsJ,EAAA,GAGKC,EAAeC,sBAAY,WAC/BxO,EAAMyO,WACNzJ,EAAS,CAAEqJ,aAAa,MAGpBK,EAAiBF,sBAAY,WACjCxO,EAAM2O,SACN3J,EAAS,CAAEqJ,aAAa,MAG1BjJ,oBAAU,WACR,GAAIwG,GAAe3M,OAAQ,CAEzB,IAAMuO,EAAgB,SAACoB,GAAD,OAAoB,SAACC,EAASC,GAElD,OADsBb,KAEb,IAAInF,QAAQ,SAACC,EAASC,GAC3BhE,EAAS,CAAEqJ,aAAa,EAAMI,SAAUzF,EAAQ2F,OAAQ5F,QAM9DmF,EAAczR,QAAQ,SAACoR,GACrBjC,GAAe3M,OAAOuO,cAAcK,EAAOL,QA3BhD,IAgCOa,EAAgBrO,EAAhBqO,YACR,OACElU,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC0U,EAAA,EAAD,CACEC,iBAAiB,SACjBC,kBAAkB,WAClBC,KAAK,QACLzT,OAAO,SACP0M,OAAQkG,EACRc,SAAUZ,EACVa,UAAWV,GAEXvU,EAAAC,EAAAC,cAAA,qEAED8T,ICrDMkB,GAAqB,SAAChT,GAAD,YAAqBX,IAAVW,GAAiC,OAAVA,GAA4B,KAAVA,GAEzEiT,GAAU,SAACjT,GACtB,GAAIA,EAAO,CAET,MADe,04BACDkT,KAAKlT,GAErB,OAAO,GAGImT,GAAQ,SAACnT,GACpB,OAAIA,GACa,IAAIoT,OAAO,sbACZF,KAAKlT,IAKVqT,GAAY,SAACrT,EAAOG,GAAR,OAAmBH,GAASA,EAAMG,OAASA,GChBrD,SAASmT,GAAShP,GAC/B,IAAMiP,EAAS,GAYf,OAXKP,GAAmB1O,EAAOkP,OAEnBP,GAAQ3O,EAAOkP,SACzBD,EAAOC,MAAQ,6BAFfD,EAAOC,MAAQ,oBAIZR,GAAmB1O,EAAO5B,QAC7B6Q,EAAO7Q,KAAO,oBAEXyQ,GAAM7O,EAAOmP,UAChBF,EAAOE,OAAS,eAEXF,EC8GMnW,mBA7GA,CACbsW,SAAU,CACR/T,MAAO,QACPrC,OAAQ,YACRqW,QAAS,OAEXC,cAAe,CACblW,WAAY,QAEdmW,iBAAkB,CAChBC,QAAS,OACTC,eAAgB,kBAkGL3W,CA9Ff,SAAAQ,GAEG,IADDC,EACCD,EADDC,QAAS2T,EACR5T,EADQ4T,MAEHwC,EAAoB7B,sBAAY,kBAAM8B,GAAcjO,MAAMsD,WAEhE,OACExL,EAAAC,EAAAC,cAACkW,GAAD,CACEtC,WAAYoC,EACZnC,cAAe,CAAC3P,EAAOE,YAAaF,EAAOM,eAE3C1E,EAAAC,EAAAC,cAACmW,EAAA,UAAD,CAAWC,GAAIH,GAAejL,GAAI2C,GAAUmE,aACzC,SAAC/B,GAAD,OACCjQ,EAAAC,EAAAC,cAACqW,EAAA,EAAD,CACEC,SAAU9D,GAAgBZ,YAC1B0D,SAAUA,GACViB,cAAe/C,EAAMF,OAAOpE,GAAKa,EAASS,QAAU,GACpDgG,OAAQ,SAAA5S,GAAA,IACN6S,EADM7S,EACN6S,aAAcC,EADR9S,EACQ8S,SAAUC,EADlB/S,EACkB+S,QAASC,EAD3BhT,EAC2BgT,WAAYC,EADvCjT,EACuCiT,MADvC,OAGN/W,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,aAAW,EACXC,UAAWC,IAAUC,IACrBC,UAAWT,EAAQ6V,UAEnB5V,EAAAC,EAAAC,cAAA,QAAMM,UAAWT,EAAQ+V,cAAeU,SAAUG,GAChD3W,EAAAC,EAAAC,cAACqW,EAAA,EAAD,CACEpU,SAAU,SAAA6U,GAAe,IAAZC,EAAYD,EAAZC,MACXvE,GAAgB/G,YAAYsL,IAAUH,MAG1C9W,EAAAC,EAAAC,cAACqW,EAAA,EAAD,CACE3R,KAAK,OACLjE,MAAM,OACNC,YAAY,OACZsW,UAAWzW,IAEbT,EAAAC,EAAAC,cAACqW,EAAA,EAAD,CACE3R,KAAK,QACLjE,MAAM,QACNC,YAAY,QACZsW,UAAWzW,IAEbT,EAAAC,EAAAC,cAACqW,EAAA,EAAD,CACE3R,KAAK,cACLjE,MAAM,eACNC,YAAY,eACZsW,UAAWzW,IAEbT,EAAAC,EAAAC,cAACqW,EAAA,EAAD,CACE3R,KAAK,SACLjE,MAAM,oBACNC,YAAY,oBACZsW,UAAWzW,IAEbT,EAAAC,EAAAC,cAACqW,EAAA,EAAD,CACE3R,KAAK,SACLsS,UAAWC,EACXxW,MAAM,SACNqB,QAASd,OAAOsF,OAAOyJ,EAASf,QAAQC,IAAI,SAACO,GAAD,MAAY,CACtDxN,MAAOwN,EAAMN,GACbvM,KAAM6M,EAAM9K,UAGhB5E,EAAAC,EAAAC,cAAA,OAAKM,UAAWT,EAAQgW,kBACtB/V,EAAAC,EAAAC,cAACkX,EAAA,EAAD,CACEvU,KAAK,eACLkS,KAAK,cACLzT,OAAO,UACP+V,KAAK,SACLzU,SAAUgU,GAAYE,GAAcD,IAEtC7W,EAAAC,EAAAC,cAACkX,EAAA,EAAD,CACEvU,KAAK,eACLD,SAAUgU,GAAYE,EACtB/B,KAAK,UACLzT,OAAO,SACP4C,QAAS6S,iCCnDzBO,GAAc,SAAAxX,GAGd,IADJwQ,EACIxQ,EADJwQ,QAASiH,EACLzX,EADKyX,YAAaC,EAClB1X,EADkB0X,cAAoBpR,GACtCtG,EADiC2X,IACjC3X,EADsCsG,SAASrG,EAC/CD,EAD+CC,QAGjD6E,EACE0L,EADF1L,KAAM+Q,EACJrF,EADIqF,OAAQD,EACZpF,EADYoF,MAAOvE,EACnBb,EADmBa,WAEjBuG,EAAetR,EAAUuR,KAAQC,SAAW,GAClD,OACE5X,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,aAAW,EACXC,UAAWC,IAAUC,IACrBC,UAAWT,EAAQR,UAEnBS,EAAAC,EAAAC,cAAA,OAAKM,UAAWT,EAAQ8X,sBACtB7X,EAAAC,EAAAC,cAAA,MAAIM,UAAWT,EAAQ+X,YACrB9X,EAAAC,EAAAC,cAAA,QAAMM,UAAWkX,GAAe9S,GAAQ,QAE1C5E,EAAAC,EAAAC,cAAA,OACE6X,IAAI,UACJC,IAAMpT,EAAQ+Q,GAAU,iCAAmC,0EAC3DnV,UAAWT,EAAQkY,aAGvBjY,EAAAC,EAAAC,cAAA,OAAKM,UAAWT,EAAQmY,mBACtBlY,EAAAC,EAAAC,cAAA,QAAMM,UAAWkX,GAAehC,GAAS,OACzC1V,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,QAAMM,UAAS,GAAA8C,OAAKvD,EAAQoY,cAAb,KAAA7U,OAA8BoU,IAC1CvG,GAAc,kBAGnBnR,EAAAC,EAAAC,cAAA,OAAKM,UAAWT,EAAQqY,iBACtBpY,EAAAC,EAAAC,cAACkX,EAAA,EAAD,CAAQlT,QAASqT,EAAa1U,KAAK,OAAOrC,UAAWT,EAAQsY,SAC7DrY,EAAAC,EAAAC,cAACkX,EAAA,EAAD,CAAQlT,QAASsT,EAAe3U,KAAK,SAASrC,UAAWT,EAAQsY,YAezEf,GAAY5V,aAAe,CACzB+V,KAAK,EACLrR,SAAS,GAGI9G,mBAtGA,CAEbC,SAAU,SAAC+Y,GACT,MAAQ,CACNzW,MAAOyW,EAAMb,IAAM,OAAS,QAC5B5B,QAASyC,EAAMb,IAAM,UAAY,MACjCc,8BAA+B,CAC7B/Y,OAAQ,MACRqW,QAAS,KAIfgC,qBAAsB,CACpBW,SAAU,WACVC,UAAW,SACXC,OAAQ,IACR7W,MAAO,KAETiW,WAAY,CACVU,SAAU,WACVG,OAAQ,MACRvL,MAAO,MACPD,KAAM,MACN0I,QAAS,MACTrW,OAAQ,IACRoZ,MAAO,QACPC,WAAY,uBAEdZ,UAAW,CACTa,UAAW,IACXC,SAAU,KAEZb,kBAAmB,CACjBxY,SAAU,OACVmW,QAAS,OAEXsC,cAAe,CACbzY,SAAU,OACVkZ,MAAO,QAETR,gBAAiB,CACfvC,QAAS,MACT2C,SAAU,YAEZH,OAAQ,CACNW,YAAa,QAyDF1Z,CAAoBgY,0EC/EpB2B,OA1Bf,SAAAnZ,GAIG,IAHDoZ,EAGCpZ,EAHDoZ,OACA/W,EAECrC,EAFDqC,SACAgX,EACCrZ,EADDqZ,OAEA,OACEnZ,EAAAC,EAAAC,cAAA,SACEM,UAAWmX,KAAQyB,MACnB/B,KAAK,OACLgC,MAAO,CACLxX,MAAO,QAETjB,YAAauY,EAAOG,YACpBpX,MAAOgX,EAASA,EAAOhX,MAAQ,GAC/BC,SAAU,SAACoX,GAAD,OAAWpX,EAASoX,EAAMC,OAAOtX,WCAlCuX,OAbf,SAA0BnB,GACxB,OACEtY,EAAAC,EAAAC,cAAA,SAAAgB,OAAAO,OAAA,CAAQ4V,KAAK,UAAaiB,EAA1B,CAAiC9X,UAAWmX,KAAQ+B,SAClD1Z,EAAAC,EAAAC,cAAC6U,GAAA,EAAD,CAAMA,KAAMuD,EAAMvD,SCyKTzV,mBA5KA,CACbqa,WAAY,CACVC,gBAAiB,CACf3D,eAAgB,cAyKP3W,CApKf,SAAAQ,GAuBG,IAtBD+Z,EAsBC/Z,EAtBD+Z,aAEAC,EAoBCha,EApBDga,MAEAC,EAkBCja,EAlBDia,KACAC,EAiBCla,EAjBDka,oBACAC,EAgBCna,EAhBDma,gBACAC,EAeCpa,EAfDoa,SACAC,EAcCra,EAdDqa,aACAC,EAaCta,EAbDsa,YACAC,EAYCva,EAZDua,QACAC,EAWCxa,EAXDwa,iBACA9Z,EAUCV,EAVDU,UACA+Z,EASCza,EATDya,aACAC,EAQC1a,EARD0a,SACAC,EAOC3a,EAPD2a,SACAC,EAMC5a,EAND4a,aACArB,EAKCvZ,EALDuZ,MACAsB,EAIC7a,EAJD6a,iBACAC,EAGC9a,EAHD8a,SACAC,EAEC/a,EAFD+a,OACA9a,EACCD,EADDC,QACCkU,EACyBvJ,mBAAS,CAAEqP,SADpC5F,EAAAjT,OAAA0J,EAAA,EAAA1J,CAAA+S,EAAA,GACMpO,EADNsO,EAAA,GACatJ,EADbsJ,EAAA,GAGK2G,EAAczG,sBAAY,SAAC0G,GAC/B,IAAIC,EAAYD,EAIhB,OAHIE,OAAOC,MAAMH,KACfC,EAAYjB,GAEPoB,KAAKC,IAAID,KAAKE,IAAIL,EAAW,GAAIlB,EAAQ,KAG5CwB,EAAajH,sBAAY,SAAC0G,GAC9B,IAAMQ,EAAWT,EAAYC,GAC7BlQ,EAAS,CAAE0Q,aACPxB,IAASwB,GACX1B,EAAa0B,KAIXC,EAAYnH,sBAAY,SAACoH,GACzBA,GACFA,EAAEC,iBAEJJ,EAAoB,KAATvB,EAAcA,EAAOlU,EAAMkU,QAGxC,OACE/Z,EAAAC,EAAAC,cAAA,OAAKM,UAAS,GAAA8C,OAAK9C,GAAa,GAAlB,iBAAA8C,OAAoCvD,EAAQ4Z,YAAcN,MAAOA,GAC7ErZ,EAAAC,EAAAC,cAAA,QAAMM,UAAU,aACbia,EACA,IACAN,EACCna,EAAAC,EAAAC,cAAA,OAAKM,UAAU,aACbR,EAAAC,EAAAC,cAAA,SACEyb,aAAYpB,EACZlD,KAAqB,KAAfxR,EAAMkU,KAAc,OAAS,SACnC5X,SAAU,SAACsZ,GACT,IAAMxM,EAAMwM,EAAEjC,OAAOtX,MAErB,OACS2I,EADG,KAARoE,EACc,CAAE8K,KAAM9K,GAEV,CAAE8K,KAAMe,EAJN7L,EAAM,MAM1B/M,MAAsB,KAAf2D,EAAMkU,KAAc,GAAKlU,EAAMkU,KAAO,EAC7C6B,OAAQJ,EACRK,WAAY,SAACJ,GACK,KAAZA,EAAEK,OAA8B,KAAdL,EAAEM,SACtBP,QAMRxb,EAAAC,EAAAC,cAAA,QAAMM,UAAU,gBAAgBuZ,EAAO,GA1B3C,IAAAzW,OA4BOuX,EA5BP,KA6BE7a,EAAAC,EAAAC,cAAA,QAAMM,UAAU,eAAesZ,GAAS,IAEzCE,GACCha,EAAAC,EAAAC,cAAA,QAAMM,UAAU,gCACdR,EAAAC,EAAAC,cAAA,UACEyb,aAAYhB,EACZxY,SAAU,SAACsZ,GAAD,OAAOnB,EAAiBW,OAAOQ,EAAEjC,OAAOtX,SAClDA,MAAOgY,GAEND,EAAgB9K,IAAI,SAAC6M,EAAQvS,GAAT,OAEnBzJ,EAAAC,EAAAC,cAAA,UAAQ+D,IAAKwF,EAAGvH,MAAO8Z,GAAvB,GAAA1Y,OACM0Y,EADN,KAAA1Y,OACgBsX,QAMxB5a,EAAAC,EAAAC,cAAA,OAAKM,UAAU,sBACbR,EAAAC,EAAAC,cAAC+b,GAAD,CACElH,KAAK,sBACL7Q,QAAS,WACFkW,GACLkB,EAAW,IAEb1Y,UAAWwX,IAEbpa,EAAAC,EAAAC,cAAC+b,GAAD,CACElH,KAAK,eACL7Q,QAAS,WACFkW,GACLkB,EAAWvB,EAAO,IAEpBnX,UAAWwX,GAEVM,GAEH1a,EAAAC,EAAAC,cAAC+b,GAAD,CACElH,KAAK,gBACL7Q,QAAS,WACFmW,GACLiB,EAAWvB,EAAO,IAEpBnX,UAAWyX,IAEbra,EAAAC,EAAAC,cAAC+b,GAAD,CACElH,KAAK,uBACL7Q,QAAS,WACFmW,GACLiB,EAAWxB,EAAQ,IAErBlX,UAAWyX,GAEVG,OCxIXtZ,OAAOO,OAAOya,KAAoB,CAChCjD,mBACAkD,yBAGF,IAAMC,GAAcC,KAAeC,MAgCnC,SAASC,GAATzc,GAEG,IADDC,EACCD,EADDC,QAASyc,EACR1c,EADQ0c,KAAMC,EACd3c,EADc2c,QAASC,EACvB5c,EADuB4c,WAAYC,EACnC7c,EADmC6c,WAAYC,EAC/C9c,EAD+C8c,cAAeC,EAC9D/c,EAD8D+c,YAC9D5I,EACyBvJ,mBAAS,CAAEoS,SAAU,KAD9C3I,EAAAjT,OAAA0J,EAAA,EAAA1J,CAAA+S,EAAA,GACMpO,EADNsO,EAAA,GACatJ,EADbsJ,EAAA,GAGK4I,IAAiB7b,OAAOuF,KAAKZ,EAAMiX,UAAUza,OAAS,KAAyC,IAArC2a,KAAMnX,EAAMiX,SAAU,SAACrB,GAAD,OAAQA,IAE9F,OACEzb,EAAAC,EAAAC,cAACkc,GAAD,CACEI,KAAMA,EACNS,YAAU,EACVJ,YAAaA,EACbK,SAAS,KACTC,WAAYJ,EACZK,gBAAiB,SAAC3T,GAAQoB,EAAS3J,OAAAoI,EAAA,EAAApI,CAAA,GAAK2E,EAAN,CAAaiX,SAAS5b,OAAAoI,EAAA,EAAApI,CAAA,GAAM2E,EAAMiX,SAAb5b,OAAAwI,EAAA,EAAAxI,CAAA,GAAwBuI,GAAK5D,EAAMiX,SAASrT,SACnG4T,WAAY,SAAC5T,GAAD,OAAO5D,EAAMiX,SAASrT,IAElC6T,UAAW,WAAQzS,EAAS3J,OAAAoI,EAAA,EAAApI,CAAA,GAAK2E,EAAN,CAAaiX,SAAUN,EAAKe,OAAO,SAACC,EAAKC,GAAgC,OAAxBD,EAAIC,EAAErO,KAAOoO,EAAIC,EAAErO,IAAYoO,GAAQ3X,EAAMiX,cACzHY,WAAW,WACXf,WAAYA,EACZD,WAAYA,EACZE,cAAeA,EACfzC,cAAc,EACdwD,oBAAqB,SAACzE,EAAQ0E,GAAT,OAA+F,IAA9EC,OAAOD,EAAI1E,EAAO9J,KAAK0O,cAAcza,QAAQ6V,EAAOhX,MAAM4b,gBAChGrB,QAASA,EACTjc,UAAS,uBAAA8C,OAAyBvD,EAAQge,SAehDxB,GAAM7a,aAAe,CACnBgb,gBAAYnb,EACZob,gBAAYpb,EACZqb,mBAAerb,EACfsb,iBAAatb,GAGAjC,mBA7EA,CACbye,MAAO,CACLC,+BAAgC,CAC9Bpe,WAAY,QACZqe,SAAU,UAEZC,gDAAiD,CAC/CC,gBAAiB,WAEnBC,YAAa,CACXpI,QAAS,OACTC,eAAgB,gBAElBoI,wBAAyB,CACvBF,gBAAiB,wBACjBvF,MAAO,SAET0F,iBAAkB,CAChBC,KAAM,YAERC,cAAe,CACbC,UAAW,0BAEbC,6BAA8B,CAC5BjG,UAAW,YAqDFnZ,CAAoBid,ICrF7BoC,GAAMC,KAAMC,IAAI,CACpBC,WAAW,EACXC,KAAM,CAAEC,MAAO,GACfC,MAAO,CAAED,MAAO,OAGZvC,GAAU,CAAC,CACfyC,OAAQ,OACRC,SAAU,OACV7F,YAAa,qBACZ,CACD4F,OAAQ,QACRC,SAAU,QACV7F,YAAa,qBACb8F,KAAM,SAACC,GAAD,OACJrf,EAAAC,EAAAC,cAAA,QAAMM,UAAU,SACdR,EAAAC,EAAAC,cAAC6U,GAAA,EAAD,CAAMA,KAAK,aADb,KAAAzR,OAEQ+b,EAAUnd,SAGpBod,OAAQ,kBAAM,OACb,CACDJ,OAAQ,eACRC,SAAU,cACV7F,YAAa,4BACb8F,KAAM,SAACC,GAAD,QACHA,EAAUnd,OAEPlC,EAAAC,EAAAC,cAAA,QAAMM,UAAU,eACdR,EAAAC,EAAAC,cAAC6U,GAAA,EAAD,CAAMA,KAAK,UADb,KAAAzR,OAEQ+b,EAAUnd,UAGvB,CACDgd,OAAQ,SACRC,SAAU,aACV7F,YAAa,qBACb8F,KAAM,SAACC,GAAD,OACJrf,EAAAC,EAAAC,cAAA,QAAMM,UAAU,YACZ6e,EAAUnd,OAASmd,EAAUnd,MAAMqd,MAAM,KAAKpQ,IAAI,SAACO,GAAD,OAClD1P,EAAAC,EAAAC,cAACsf,GAAA,EAAD,CAAKvb,IAAKyL,GACR1P,EAAAC,EAAAC,cAAC6U,GAAA,EAAD,CAAMA,KAAK,WACVrF,QAKR,CACDwP,OAAQ,OACRO,UAAU,EACVC,WAAW,EACXzC,YAAY,EACZpb,MAAO,GACPrB,UAAW,YACX4e,KAAM,kBACJpf,EAAAC,EAAAC,cAACye,GAAD,KAAK3e,EAAAC,EAAAC,cAAC6U,GAAA,EAAD,CAAMA,KAAK,YAEjB,CACDmK,OAAQ,SACRO,UAAU,EACVC,WAAW,EACXzC,YAAY,EACZpb,MAAO,GACPrB,UAAW,cACX4e,KAAM,kBACJpf,EAAAC,EAAAC,cAACye,GAAD,KAAK3e,EAAAC,EAAAC,cAAC6U,GAAA,EAAD,CAAMA,KAAK,eAId4K,GAAmB,SAACC,EAAMC,GAC9BD,IAEIC,GACFA,KAIEnD,GAAa,SAAC7W,EAAOia,EAAS3G,GAClC,OAAQA,EAAO+F,QACb,IAAK,OACH,MAAO,CACLhb,QAAS,SAACuX,EAAGoE,GACXF,GAAiB,WACflO,GAAekB,wBAAwB,CAAEvD,GAAI0Q,EAAQ7T,SAASmD,MAC7DyQ,KAGT,IAAK,SACH,MAAO,CACL3b,QAAS,SAACuX,EAAGoE,GACXF,GAAiB,WACfjN,GAAgBX,cAAc+N,EAAQ7T,SAASmD,KAC9CyQ,KAGT,QACE,MAAO,KAIPlD,GAAa,SAAC9W,EAAOia,GAAR,MAAqB,CACtCtf,UAAYsf,GAAWA,EAAQ7T,UAAY6T,EAAQ7T,SAAS6Q,SAAY,WAAa,GACrF5Y,QAAS,SAACuX,EAAGoE,GACXF,GAAiB,WACflO,GAAekB,wBAAwB,CAAEvD,GAAI0Q,EAAQ7T,SAASmD,MAC7DyQ,MAyBQE,OApBf,SAAAjgB,GAEG,IADD2Q,EACC3Q,EADD2Q,KAAMiD,EACL5T,EADK4T,MAEN,OACE1T,EAAAC,EAAAC,cAAC8f,GAAD,CACEnD,YAAa,SAACL,GAAD,OAAUA,EAAKrN,IAAI,SAAC8Q,GAAD,OAAA/e,OAAAoI,EAAA,EAAApI,CAAA,GAAa+e,EAAb,CAAgBnD,SAAUpJ,EAAMF,OAAOpE,KAAO6Q,EAAE7Q,QAChFuN,WAAYA,GACZD,WAAYA,GACZF,KAAM/L,EACNwM,YAAU,EACVR,QAASA,MCtDTkC,GAAMC,KAAMC,IAAI,CACpBC,WAAW,EACXC,KAAM,CAAEC,MAAO,GACfC,MAAO,CAAED,MAAO,OAGZkB,GAAOtB,KAAMC,IAAI,CACrBsB,MAAO,CACLC,QAAS,EACTC,WAAY,SAAAvgB,GAAA,MAAY,CAAEwgB,MAAW,GAAzBxgB,EAAG2J,KAEjB8W,KAAM,CAAEH,QAAS,GACjB9H,MAAO,CAAE7O,EAAG,KAGd,SAAS+W,GAAiBlI,GACxB,OAAOA,EAAM7H,KAAKtB,IAAI,SAACmB,GAAD,OACpBtQ,EAAAC,EAAAC,cAACugB,GAAD,CACExc,IAAG,WAAAX,OAAagN,EAAQlB,IACxBkB,QAASA,EACTiH,YAAa,kBAAM9F,GAAekB,wBAAwB,CAAEvD,GAAIkB,EAAQlB,MACxEoI,cAAe,kBAAM9E,GAAgBX,cAAczB,EAAQlB,SAKjE,SAASsR,GAAT5c,GAEG,IADD/D,EACC+D,EADD/D,QAAS0Q,EACR3M,EADQ2M,KAAMiD,EACd5P,EADc4P,MAEf,OACE1T,EAAAC,EAAAC,cAACygB,GAAA,EAAD,KACGlQ,EAAKtB,IAAI,SAACmB,EAAS7G,GAAV,OACRzJ,EAAAC,EAAAC,cAACggB,GAAD,CAAMjc,IAAG,WAAAX,OAAagN,EAAQlB,IAAMA,GAAIkB,EAAQlB,GAAI3F,EAAGA,GACrDzJ,EAAAC,EAAAC,cAAA,OACE0gB,KAAK,eACL/E,WAAY,SAACJ,GAAD,MAAkB,UAAVA,EAAExX,KAAmBwN,GAAeqB,0BAA0B,CAAE1D,GAAIkB,EAAQlB,MAChGlL,QAAS,kBAAMuN,GAAeqB,0BAA0B,CAAE1D,GAAIkB,EAAQlB,MACtE5O,UAAS,2BAAA8C,OAA6BvD,EAAQ8gB,gBAArC,KAAAvd,OACPoQ,EAAMF,OAAOpE,KAAOkB,EAAQlB,GAAK,WAAa,KAGhDpP,EAAAC,EAAAC,cAAA,OAAKmZ,MAAO,CAAErD,QAAS,SACpB1F,EAAQqF,OACP3V,EAAAC,EAAAC,cAAC4gB,GAAD,KACE9gB,EAAAC,EAAAC,cAAA,OACE8X,IAAK1H,EAAQqF,OACboC,IAAKzH,EAAQ1L,KACbpE,UAAWT,EAAQghB,wBAIvB/gB,EAAAC,EAAAC,cAAC4gB,GAAD,CAAKtgB,UAAWT,EAAQihB,uBACpB1Q,EAAQ1L,KAAKqc,UAAU,EAAG,GAAGC,eAGnClhB,EAAAC,EAAAC,cAAA,OAAKM,UAAWT,EAAQohB,8BACtBnhB,EAAAC,EAAAC,cAAA,OAAKM,UAAWT,EAAQqhB,4BAA6B9Q,EAAQ1L,MAC7D5E,EAAAC,EAAAC,cAAA,OAAKM,UAAWT,EAAQshB,4BAA6B/Q,EAAQa,YAAc,mBAG/EnR,EAAAC,EAAAC,cAAC4gB,GAAD,KACE9gB,EAAAC,EAAAC,cAACkX,EAAA,EAAD,CACErC,KAAK,SACL7Q,QAAS,SAACuX,GACR/I,GAAgBX,cAAczB,EAAQlB,IACtCqM,EAAE6F,2BAWpB,IAAMC,GAAclW,IAAMmW,KAAK,SAAClJ,GAAU,IAAAmJ,EACXvX,EAAkB,cAAe,CAC5D+F,SAAUyR,GACV3U,OAAQ4U,IACP,CACD1R,SAAU2R,GAAkB3P,YAC5BlF,OAAQ6U,GAAkB1P,oBALpBjC,EADgCwR,EAChCxR,SAAUlD,EADsB0U,EACtB1U,OAQZ8U,EAAiBxN,sBAAY,WACjC,OAAQtH,EAAOE,MACb,IAAK,OACH,OACEjN,EAAAC,EAAAC,cAAA,OAAKM,UAAW8X,EAAMvY,QAAQ+hB,2BAC5B9hB,EAAAC,EAAAC,cAACwgB,GAADxf,OAAAO,OAAA,GAAsB6W,EAAtB,CAA6B7H,KAAMvP,OAAOsF,OAAOyJ,EAASQ,UAGhE,IAAK,OACH,OACEzQ,EAAAC,EAAAC,cAAA,OAAKM,UAAW8X,EAAMvY,QAAQgiB,2BAC5B/hB,EAAAC,EAAAC,cAACsgB,GAADtf,OAAAO,OAAA,GAAsB6W,EAAtB,CAA6B7H,KAAMvP,OAAOsF,OAAOyJ,EAASQ,UAGhE,QACE,OACEzQ,EAAAC,EAAAC,cAAA,OAAKM,UAAW8X,EAAMvY,QAAQ+hB,2BAC5B9hB,EAAAC,EAAAC,cAAC6d,GAAD7c,OAAAO,OAAA,GAAW6W,EAAX,CAAkB7H,KAAMvP,OAAOsF,OAAOyJ,EAASQ,aAMzD,OACEzQ,EAAAC,EAAAC,cAAA,OAAKM,UAAW8X,EAAMvY,QAAQiiB,iBAC3BH,OAoBQviB,eAjMA,CACbuhB,gBAAiB,CACfoB,4BAA6B,CAC3BjM,QAAS,OACTC,eAAgB,gBAChByC,OAAQ,OACRwJ,YAAa,MACb1iB,OAAQ,MACR2e,gBAAiB,UACjBvF,MAAO,QACPuJ,UAAW,+FAEbC,kCAAmC,CACjCvJ,WAAY,WAEdwJ,qCAAsC,CACpCxJ,WAAY,YAGhBkI,qBAAsB,CACpBhI,SAAU,GACVuJ,SAAU,GACVxJ,UAAW,IAEbqI,6BAA8B,CAC5BnL,QAAS,OACTuM,cAAe,SACfC,UAAW,SACXC,WAAY,QAEdrB,2BAA4B,CAC1BsB,WAAY,UAEdrB,2BAA4B,CAC1B3hB,SAAU,QAEZshB,sBAAuB,CACrBnf,MAAO,OACP6W,OAAQ,OACRhZ,SAAU,OACVye,gBAAiB,UACjBvF,MAAO,QACPH,UAAW,SACXkK,WAAY,OACZC,aAAc,QAEhBZ,gBAAiB,CACfhM,QAAS,OACTuI,KAAM,WACNgE,cAAe,MACf7J,OAAQ,sBACRmK,UAAW,UAEbf,0BAA2B,CACzB9L,QAAS,OACTuI,KAAM,WACNgE,cAAe,UAEjBR,0BAA2B,CACzBe,SAAU,SAsICxjB,CAAoBiiB,ICzKpBjiB,mBA5BA,CACbyjB,kBAAmB,CACjBvjB,OAAQ,YACRqC,MAAO,UAyBIvC,CArBf,SAAqBgZ,GAAO,IAClBrI,EAAa/F,EAAkB,gBAAiB,CAAE+F,SAAUyR,IAAY,CAAEzR,SAAU2R,GAAkBzP,gBAAtGlC,SAER,OACEjQ,EAAAC,EAAAC,cAAA,OAAKM,UAAW8X,EAAMvY,QAAQgjB,mBAC5B/iB,EAAAC,EAAAC,cAACugB,GAAD,CACEhJ,KAAG,EACHnH,QAASL,EAASS,QAClBtK,QAAS6J,EAAS7J,QAClBmR,YAAa,kBAAM9F,GAAekB,wBAAwB2F,EAAM5E,MAAMF,SACtEgE,cAAe,kBAAM9E,GAAgBX,cAAcuG,EAAM5E,MAAMF,OAAOpE,4DCvB/D,SAASoG,GAAShP,GAC/B,IAAMiP,EAAS,GAMf,OALKP,GAAmB1O,EAAO5B,MAEnB2Q,GAAU/O,EAAO5B,KAAM,KACjC6Q,EAAO7Q,KAAO,mCAFd6Q,EAAO7Q,KAAO,mBAIT6Q,ECET,IAAMvG,GAASvJ,gBAAY,CACzB8K,KAAM,GACNC,QAAS,kDAGX,SAAAzJ,EAAwBmI,GAAxB,IAAAyB,EAAA,OAAA9J,EAAA9G,EAAAsH,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WAEM0H,EAFN,CAAA5H,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAG2B4H,GAAgBF,GAH3C,OAGIyB,EAHJrJ,EAAAY,KAIInC,iBAAOiJ,GAAQ,SAACrJ,GACdA,EAAM6K,QAAUG,IALtBrJ,EAAAE,KAAA,uBAAAF,EAAAE,KAAA,EAQ2B6G,KAR3B,OAQIsC,EARJrJ,EAAAY,KASInC,iBAAOiJ,GAAQ,SAACrJ,GACdA,EAAM4K,KAAOI,IAVnB,yBAAArJ,EAAAc,SAAArB,EAAAsB,6EAeA,SAAAqI,EAAyBlB,GAAzB,OAAA3I,EAAA9G,EAAAsH,KAAA,SAAA0J,GAAA,cAAAA,EAAAxJ,KAAAwJ,EAAAvJ,MAAA,UAAAuJ,EAAAxJ,KAAA,GAEQiI,EAAMN,GAFd,CAAA6B,EAAAvJ,KAAA,eAAAuJ,EAAAvJ,KAAA,EAGYkI,GAAmBF,GAH/B,OAIMjC,EAAgB1H,WAAW,8BAJjCkL,EAAAvJ,KAAA,uBAAAuJ,EAAAvJ,KAAA,EAMY+H,GAAiBC,GAN7B,OAOMjC,EAAgB1H,WAAW,8BAPjC,QAUIE,iBAAOiJ,GAAQ,SAACrJ,GACdA,EAAM6K,QAAUhB,IAXtBuB,EAAAvJ,KAAA,iBAAAuJ,EAAAxJ,KAAA,GAAAwJ,EAAAC,GAAAD,EAAA,SAcIxD,EAAgBvH,aAAhB+K,EAAAC,IAdJ,QAiBEO,GAAeyB,SAjBjB,yBAAAjC,EAAA3I,SAAAsI,EAAArI,KAAA,oCAoBA,IAAM3C,GAAW,CACfhB,KAAM,SACNiB,MAAOqJ,GACPpJ,QAAS,CAAE6K,sDAAUqS,yDAERnd,GAAmBD,GAAnBC,MAAOC,GAAYF,GAAZE,QC/BhBmd,IDgCS7c,EAAQR,qMC/BD,IACVwJ,EAAO7G,KAAK+P,MAAM5E,MAAMF,OAAxBpE,GACJA,GACF8T,GAAavS,SAASvB,qDAIA+T,GACpB5a,KAAK+P,MAAM5E,MAAMF,OAAOpE,KAAO+T,EAAUzP,MAAMF,OAAOpE,IACxD8T,GAAavS,SAASwS,EAAUzP,MAAMF,OAAOpE,qCAIxC,IACCrP,EAAYwI,KAAK+P,MAAjBvY,QACR,OACEC,EAAAC,EAAAC,cAACmW,EAAA,UAAD,CAAWC,GAAI8M,IACZ,SAACnT,GAAD,OACCjQ,EAAAC,EAAAC,cAACqW,EAAA,EAAD,CACEC,SAAU0M,GAAaF,UACvBxN,SAAUA,GACViB,cAAexG,EAASS,QACxBgG,OAAQ,SAAA5W,GAAA,IACN6W,EADM7W,EACN6W,aAAcC,EADR9W,EACQ8W,SAAUC,EADlB/W,EACkB+W,QAASC,EAD3BhX,EAC2BgX,WAAoBC,EAD/CjX,EACuCujB,KAAQtM,MAD/C,OAGN/W,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,aAAW,EACXC,UAAWC,IAAUC,IACrBC,UAAWT,EAAQ6V,UAEnB5V,EAAAC,EAAAC,cAAA,QAAMM,UAAWT,EAAQ+V,cAAeU,SAAUG,GAChD3W,EAAAC,EAAAC,cAACqW,EAAA,EAAD,CAAO3R,KAAK,OAAOjE,MAAM,OAAOC,YAAY,OAAOsW,UAAWzW,IAC9DT,EAAAC,EAAAC,cAAA,OAAKM,UAAWT,EAAQgW,kBACtB/V,EAAAC,EAAAC,cAACkX,EAAA,EAAD,CACErC,KAAK,cACLzT,OAAO,UACP+V,KAAK,SACLzU,SAAUgU,GAAYE,GAAcD,EACpChU,KAAK,eAEP7C,EAAAC,EAAAC,cAACkX,EAAA,EAAD,CACErC,KAAK,UACLzT,OAAO,SACP4C,QAAS6S,EACTnU,SAAUgU,GAAYE,EACtBjU,KAAK,gCA9CSygB,cAgErBhkB,eA/EA,CACbsW,SAAU,CACR/T,MAAO,QACPrC,OAAQ,YACRqW,QAAS,OAEXC,cAAe,CACblW,WAAY,QAEdmW,iBAAkB,CAChBC,QAAS,OACTC,eAAgB,kBAoEL3W,CAAoB2jB,aCjF7BM,GAAS,CACbC,QAAS,CACPC,KAAM,CAAEjL,SAAU,WAClBkL,QAAS,CAAE1N,QAAS,QACpB2N,QAAS,CAAE3N,QAAS,QACpBwN,QAAS,CAAE3K,WAAY,UAAWjZ,WAAY,YAkDnCN,mBAAYikB,GAAZjkB,CA9Cf,SAAoBgZ,GAAO,IAAAsL,EACqB1Z,EAAkB,aAAc,CAC5E6C,OAAQ4U,IACP,CACD5U,OAAQ8W,GAAgB9V,aAHlBhB,OAAUiB,EADO4V,EACP5V,OAMlB,OAPyB4V,EACCvW,cAUxBrN,EAAAC,EAAAC,cAAC4jB,GAAA,EAAD,CACEC,KAAM/V,EACNgW,WAAS,EACTC,OAAK,EACLV,OAAQA,GAAOC,QACfU,UAAW,SAACH,GACV/b,GAAc2F,uBAAuBoW,IAEvCP,QACExjB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACkX,EAAA,EAAD,CACE5W,UAAU,cACVuU,KAAK,QACL7Q,QAAS,kBAAM8D,GAAc2F,wBAAuB,MAErD2K,EAAMtE,WAKThU,EAAAC,EAAAC,cAACkX,EAAA,EAAD,CACE5W,UAAU,cACVuU,KAAK,OACL7Q,QAAS,kBAAM8D,GAAc2F,wBAAwBK,OA1BpDsK,EAAMtE,WCsCF1U,mBApDA,CACb6kB,qBAAsB,CACpBnO,QAAS,OACTuI,KAAM,YAER6F,kBAAmB,CACjBpO,QAAS,OACTuI,KAAM,aA6CKjf,CAzCf,SAAAQ,GAA+C,IAAlB4T,EAAkB5T,EAAlB4T,MAAO3T,EAAWD,EAAXC,QAClC,IAAK2T,EACH,OAAO1T,EAAAC,EAAAC,cAACmkB,EAAD,CAAO3Q,MAAOA,IAGvB,OAAQA,EAAM9O,MACZ,KAAKR,EAAOK,UACV,OAAOzE,EAAAC,EAAAC,cAACokB,GAAD,CAAW5Q,MAAOA,IAC3B,KAAKtP,EAAOI,gBACV,OACExE,EAAAC,EAAAC,cAAA,OAAKM,UAAWT,EAAQokB,sBACtBnkB,EAAAC,EAAAC,cAACqkB,GAAD,CAAa7Q,MAAOA,IACpB1T,EAAAC,EAAAC,cAACskB,GAAD,KACExkB,EAAAC,EAAAC,cAACukB,GAAD,CAAe/Q,MAAOA,MAI9B,KAAKtP,EAAOG,cACV,OAAOvE,EAAAC,EAAAC,cAACqkB,GAAD,CAAa7Q,MAAOA,IAC7B,KAAKtP,EAAOE,YACV,OAAOtE,EAAAC,EAAAC,cAACwkB,GAAD,CAAahR,MAAOA,IAC7B,KAAKtP,EAAOM,aACV,OACE1E,EAAAC,EAAAC,cAAA,OAAKM,UAAWT,EAAQqkB,mBACtBpkB,EAAAC,EAAAC,cAACqkB,GAAD,CAAa7Q,MAAOA,IACpB1T,EAAAC,EAAAC,cAACskB,GAAD,KACExkB,EAAAC,EAAAC,cAACwkB,GAAD,CAAahR,MAAOA,MAI5B,KAAKtP,EAAOC,KACZ,QACE,OAAOrE,EAAAC,EAAAC,cAACmkB,EAAD,CAAO3Q,MAAOA,uDC7BZiR,GAnBS,SAAA7kB,GAAA,IAAG8kB,EAAH9kB,EAAG8kB,eAAH,OACtB5kB,EAAAC,EAAAC,cAAC2kB,GAAA,EAAD,CACEnB,QACE1jB,EAAAC,EAAAC,cAACgN,GAAA,EAAD,KACElN,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAUE,KAAK,OAAOqB,QAAS,kBAAM0gB,EAAe,WACpD5kB,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAUE,KAAK,OAAOqB,QAAS,kBAAM0gB,EAAe,WACpD5kB,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAUE,KAAK,QAAQqB,QAAS,kBAAM0gB,EAAe,aAGzDpM,SAAUsM,KAASC,WAEnB/kB,EAAAC,EAAAC,cAACkX,EAAA,EAAD,CAAQrC,KAAK,WCmBFiQ,OA7Bf,SAAAllB,GAEG,IADD4T,EACC5T,EADD4T,MAEA,OACE1T,EAAAC,EAAAC,cAACF,EAAAC,EAAMglB,SAAP,KACEjlB,EAAAC,EAAAC,cAACglB,GAAA,EAAD,KACEllB,EAAAC,EAAAC,cAACglB,GAAA,EAAOC,MAAR,CAAcC,MAAOC,KAAUC,MAC7BtlB,EAAAC,EAAAC,cAACkX,EAAA,EAAD,CACE5W,UAAU,cACVuU,KAAK,OACL7Q,QAAS8D,GAAc0F,iBAEzB1N,EAAAC,EAAAC,cAACglB,GAAA,EAAOK,QAAR,MACAvlB,EAAAC,EAAAC,cAACglB,GAAA,EAAOM,QAAR,sBAEFxlB,EAAAC,EAAAC,cAACglB,GAAA,EAAOC,MAAR,CAAcC,MAAOC,KAAUI,OAC5B/R,EAAM9O,OAASR,EAAOG,cACrBvE,EAAAC,EAAAC,cAACwlB,GAAD,CAAiBd,eAAgB5c,GAAcwF,aAC7C,uCCCCmY,OAnBf,WAAkB,IACR5Y,EAAW7C,EAAkB,SAAU,CAAE6C,OAAQ4U,IAAU,CAAE5U,OAAQ8W,GAAgB/V,SAArFf,OAER,OACE/M,EAAAC,EAAAC,cAAC0lB,GAAA,EAAD,CAASpN,SAAUsM,KAASe,KACzB9Y,EAAO3G,QAAQP,MACd7F,EAAAC,EAAAC,cAAC4lB,GAAA,EAAD,CACE9f,QACEhG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,uBAAAoD,OAAkByJ,EAAO3G,QAAQJ,QAAjC,QACAhG,EAAAC,EAAAC,cAAC6lB,GAAA,EAAD,SAIJ,OCEKC,OAlBf,WACE,OACEhmB,EAAAC,EAAAC,cAACmW,EAAA,UAAD,CAAWC,GAAI2P,GACZ,SAACjgB,GAAD,OACChG,EAAAC,EAAAC,cAAC0lB,GAAA,EAAD,CAASpN,SAAUsM,KAASoB,QACzBlgB,EACChG,EAAAC,EAAAC,cAAC4lB,GAAA,EAAD,CACE9f,QAASA,GAAW,GACpBmgB,QAAS,IACTC,UAAW3Y,EAAgBtH,QAE3B,SCNRod,GAAS,CACbC,QAAS,CACPA,QAAS,CACP3K,WAAY,YAGhBwN,aAAc,CACZzmB,WAAY,OACZ0mB,aAAc,CACZzN,WAAY,aA+ClB,IAAM0N,GAAkBjnB,YAAYikB,GAAZjkB,CAtCxB,SAAAQ,GAEG,IADD4T,EACC5T,EADD4T,MAAO8S,EACN1mB,EADM0mB,YAAazmB,EACnBD,EADmBC,QAEpB,SAASgE,EAAY0X,IAPvB,SAA0BA,GACxBhK,GAAewB,uBAAuBwI,EAAEjC,OAAOiN,aAO7CC,CAAiBjL,GACb+K,GACFxe,GAAc0F,iBAIlB,OACE1N,EAAAC,EAAAC,cAACgN,GAAA,EAAD,CAAM1M,UAAWT,EAAQsmB,cACvBrmB,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CACEqB,OAAQ0P,EAAM9O,OAASR,EAAOC,KAC9BH,QAASH,EACTlB,KAAK,UAEP7C,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CACEqB,QAC+F,IAA7F,CAACI,EAAOG,cAAeH,EAAOI,gBAAiBJ,EAAOM,cAAcrB,QAAQqQ,EAAM9O,MAEpFV,QAASH,EACTlB,KAAK,SAEP7C,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CACEqB,OAAQ0P,EAAM9O,OAASR,EAAOE,YAC9BJ,QAASH,EACTlB,KAAK,gBAEP7C,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CACEqB,OAAQ0P,EAAM9O,OAASR,EAAOK,UAC9BP,QAASH,EACTlB,KAAK,iBA2CE8jB,OAnCf,SAAkBrO,GAAO,IAAAsL,EACuB1Z,EAAkB,WAAY,CAC1E6C,OAAQ4U,IACP,CACD5U,OAAQ8W,GAAgB5V,WAHlBlB,OAAUiB,EADK4V,EACL5V,OAAQX,EADHuW,EACGvW,cAM1B,QAEQW,IACGX,EAIHrN,EAAAC,EAAAC,cAAC4jB,GAAA,EAAD,CACEC,KAAM/V,EACNuV,OAAQA,GAAOC,QACfU,UAAWlc,GAAc0F,eACzB8V,QAASxjB,EAAAC,EAAAC,cAACqmB,GAADrlB,OAAAO,OAAA,CAAiB+kB,YAAanZ,GAAmBiL,MAEzD,GATItY,EAAAC,EAAAC,cAACqmB,GAADrlB,OAAAO,OAAA,CAAiB+kB,YAAanZ,GAAmBiL,MChDnDsO,ICxBXC,GDwBWD,GAtBf,SAAA9mB,GAEG,IADEgnB,EACF5lB,OAAA6lB,EAAA,EAAA7lB,CAAA,GAAApB,GACkB4T,EAAYxJ,EAAkB,MAAO,CAAEiJ,QAAS6T,KAA3D7T,QAAWO,MACnB,OACE1T,EAAAC,EAAAC,cAAA,OAAKM,UAAU,WAAW6Y,MAAO,CAAE8E,gBAAiB,UAAWM,UAAW,UACxEze,EAAAC,EAAAC,cAAC+mB,GAAD,CAAQvT,MAAOA,IACf1T,EAAAC,EAAAC,cAACgnB,GAAD,MACAlnB,EAAAC,EAAAC,cAAA,OAAKmZ,MAAO,CAAErD,QAAS,SACrBhW,EAAAC,EAAAC,cAACinB,GAAD,CAAUzT,MAAOA,IACjB1T,EAAAC,EAAAC,cAACknB,GAADlmB,OAAAO,OAAA,CAAmBiS,MAAOA,GAAWoT,KAEvC9mB,EAAAC,EAAAC,cAACmnB,GAAD,QEXAC,GAAcC,QAAqC,cAA7B1a,OAAO2a,SAASC,UAER,UAA7B5a,OAAO2a,SAASC,UAEhB5a,OAAO2a,SAASC,SAASC,MAAM,2DAmCtC,SAASC,GAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,KAAK,SAACC,GAELA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBtiB,QACfgiB,UAAUC,cAAcQ,WAM1B3gB,QAAQG,IAAI,6CAMZH,QAAQG,IAAI,2CAMrBygB,MAAM,SAACvnB,GAEN2G,QAAQ3G,MAAM,4CAA6CA,KDlE/D6lB,GADEha,OAAO2b,6BACF,kBACLxoB,EAAAC,EAAAC,cAACuoB,EAAA,EAAD,KACEzoB,EAAAC,EAAAC,cAACwoB,GAAD,QAIG,kBACL1oB,EAAAC,EAAAC,cAACwoB,GAAD,OAIJC,IAASjS,OAAO1W,EAAAC,EAAAC,cAAC0oB,GAAD,MAAUC,SAASC,eAAe,SCPnC,WACb,GAA6C,kBAAmBjB,UAAW,CAGzE,GADkB,IAAIkB,IAAIC,sBAAwBnc,OAAO2a,UAC3CyB,SAAWpc,OAAO2a,SAASyB,OAIvC,OAGFpc,OAAOqc,iBAAiB,OAAQ,WAC9B,IAAMtB,EAAK,GAAAtkB,OAAM0lB,sBAAN,sBAEP1B,IAoDV,SAAiCM,GAE/BuB,MAAMvB,GACHI,KAAK,SAACzW,GAGiB,MAApBA,EAAS6X,SAC0D,IAAhE7X,EAAS8X,QAAQnhB,IAAI,gBAAgB7E,QAAQ,cAGhDwkB,UAAUC,cAAcwB,MAAMtB,KAAK,SAACC,GAClCA,EAAasB,aAAavB,KAAK,WAC7Bnb,OAAO2a,SAASgC,aAKpB7B,GAAgBC,KAGnBW,MAAM,WAEL5gB,QAAQG,IAAI,mEAxEV2hB,CAAwB7B,GAIxBC,UAAUC,cAAcwB,MAAMtB,KAAK,WAEjCrgB,QAAQG,IAAI,+GAKd6f,GAAgBC,MDnBxB8B","file":"static/js/main.88dd0346.chunk.js","sourcesContent":["import React from 'react';\nimport { Card, Elevation } from '@blueprintjs/core';\nimport PropTypes from 'prop-types';\nimport injectSheet from 'react-jss';\n\nconst styles = {\n  cardRoot: {\n    margin: '1em',\n  },\n  cardText1stLine: {\n    fontSize: '14px',\n  },\n  cardText2ndLine: {\n    paddingTop: '16px',\n    fontSize: '14px',\n    paddingBottom: '2em',\n  },\n};\n\nfunction About({\n  classes,\n}) {\n  return (\n    <Card interactive elevation={Elevation.TWO} className={classes.cardRoot}>\n      <h1>Contacts App</h1>\n      <div className={classes.cardText1stLine}>Learning Immer (Bey)</div>\n      <div className={classes.cardText2ndLine}>\n        This is a example app using immer and react context + hooks.\n      </div>\n    </Card>\n  );\n}\n\nAbout.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default injectSheet(styles)(About);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputGroup, FormGroup } from '@blueprintjs/core';\n\nfunction FormTextField({\n  input, label, placeholder, meta: { touched, error }, ...custom\n}) {\n  return (\n    <FormGroup\n      helperText={error}\n      label={label}\n      intent={touched && error ? 'danger' : undefined}\n    >\n      <InputGroup\n        placeholder={placeholder}\n        intent={touched && error ? 'danger' : undefined}\n        {...input}\n        {...custom}\n      />\n    </FormGroup>\n  );\n}\n\nFormTextField.propTypes = {\n  input: PropTypes.object.isRequired,\n  label: PropTypes.string.isRequired,\n  meta: PropTypes.object.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  custom: PropTypes.object,\n};\n\nFormTextField.defaultProps = {\n  custom: {},\n};\n\nexport default FormTextField;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, FormGroup } from '@blueprintjs/core';\nimport { MultiSelect } from '@blueprintjs/select';\nimport injectSheet from 'react-jss';\n\nconst styles = {\n  contactGroupMultiSelect: {\n    '&.bp3-popover-target': {\n      width: '100%',\n    },\n  },\n  contactGroupTagInputProps: {\n    '& .bp3-input-ghost': {\n      fontSize: '14px',\n    },\n  },\n};\n\nfunction FormMultiSelectField({\n  options,\n  input: {\n    value, onChange,\n  },\n  label,\n  meta: { touched, error },\n  classes,\n  ...custom\n}) {\n  const indexesOptions = {};\n  if (options && options.length > 0) {\n    options.forEach((o) => {\n      indexesOptions[o.value] = o;\n    });\n  }\n\n  return (\n    <FormGroup\n      helperText={error}\n      label={label}\n      intent={touched && error ? 'danger' : undefined}\n    >\n      <MultiSelect\n        shouldDismissPopover={false}\n        noResults={<MenuItem disabled text=\"No results.\" />}\n        popoverProps={{ minimal: true, targetClassName: classes.contactGroupMultiSelect }}\n        items={options}\n        selectedItems={value === '' ? [] : value}\n        onItemSelect={(opt) => {\n          if (value.indexOf(opt.value) === -1) {\n            onChange([...value, opt.value]);\n          } else {\n            value.splice(value.indexOf(opt.value), 1);\n            onChange(value);\n          }\n        }}\n        tagInputProps={{\n          placeholder: 'Select contact groups...',\n          fill: true,\n          className: classes.contactGroupTagInputProps,\n          onRemove: (opt, index) => {\n            if (value && value.length > 0) {\n              value.splice(index, 1);\n              onChange(value);\n            }\n          },\n        }}\n        itemRenderer={(opt, { handleClick }) => (\n          <MenuItem\n            active={value.indexOf(opt.value) !== -1}\n            key={`option-${opt.value}`}\n            text={opt.text}\n            onClick={handleClick}\n          />\n        )}\n        tagRenderer={(opt) => indexesOptions[opt].text}\n        {...custom}\n      />\n    </FormGroup>\n  );\n}\n\nFormMultiSelectField.propTypes = {\n  input: PropTypes.object.isRequired,\n  label: PropTypes.string.isRequired,\n  meta: PropTypes.object.isRequired,\n  options: PropTypes.array.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default injectSheet(styles)(FormMultiSelectField);\n","export const ROUTES = {\n  HOME: 'home',\n  ADD_CONTACT: 'addContact',\n  LIST_CONTACTS: 'listContacts',\n  CONTACT_DETAILS: 'contactDetails',\n  ADD_GROUP: 'addGroup',\n  EDIT_CONTACT: 'editContact',\n};\n\nexport const routes = [\n  { name: ROUTES.HOME, path: '/' },\n  { name: ROUTES.ADD_CONTACT, path: '/add' },\n  { name: ROUTES.LIST_CONTACTS, path: '/list' },\n  { name: ROUTES.EDIT_CONTACT, path: '/edit/:id' },\n  { name: ROUTES.CONTACT_DETAILS, path: '/detail/:id' },\n  { name: ROUTES.ADD_GROUP, path: '/group/add' },\n];\n","import createRouter from 'router5';\nimport loggerPlugin from 'router5-plugin-logger';\nimport browserPlugin from 'router5-plugin-browser';\nimport { routes } from './routes';\n\nfunction configureRouter() {\n  const router = createRouter(routes, {\n    defaultRoute: 'home',\n    autoCleanup: false,\n  });\n\n  // Plugins\n  router.usePlugin(\n    loggerPlugin,\n    browserPlugin({\n      useHash: true,\n      forceDeactivate: false,\n    }),\n  );\n\n  return router;\n}\n\nconst router = configureRouter();\nrouter.start();\n\nexport const { navigate } = router;\nexport default router;\n","import { state as stateCreate, update } from 'bey';\n\nconst snackbar = stateCreate(null);\n\nfunction setMessage(message) {\n  update(snackbar, () => message);\n}\n\nfunction displayError(error) {\n  let message = 'Unknown error';\n\n  if (error && error.message) {\n    // eslint-disable-next-line prefer-destructuring\n    message = error.message;\n  } else if (typeof error === 'string') {\n    message = error;\n  }\n  update(snackbar, () => message);\n}\n\nfunction close() {\n  update(snackbar, () => null);\n}\n\nconst exported = {\n  name: 'snackbar',\n  state: snackbar,\n  actions: { setMessage, displayError, close },\n};\nexport const { state, actions } = exported;\nexport default exported;\n","import { update } from 'bey';\nimport { actions as GlobalActions } from '../global';\n\nfunction isAsync(fn) {\n  return fn.isSync !== true;\n  // return fn.constructor.name === 'AsyncFunction';\n}\n\nexport default function loading(stateModule, options = { localLoading: false }) {\n  if (stateModule.actions && Object.values(stateModule.actions).length > 0) {\n    Object.keys(stateModule.actions).forEach((actionName) => {\n      if (\n        stateModule.actions[actionName]\n        && typeof stateModule.actions[actionName] === 'function'\n        && isAsync(stateModule.actions[actionName])\n      ) {\n        const originalAction = stateModule.actions[actionName];\n        /* eslint-disable no-param-reassign */\n        stateModule.actions[actionName] = async function plusLoading(...args) {\n          /* eslint-disable no-console */\n          console.groupCollapsed(`[${stateModule.name}] executing action: ${actionName}()`);\n          console.log(`Using arguments: ${args}`);\n          console.groupEnd();\n          GlobalActions.setLoading(true, stateModule.name);\n          if (options.localLoading) {\n            const loadingBefore = stateModule.state.get().loading;\n            if (loadingBefore !== true) {\n              update(stateModule.state, (state) => {\n                state.loading = true;\n              });\n            }\n          }\n          const result = await originalAction(...args);\n          if (options.localLoading) {\n            const loadingAfter = stateModule.state.get().loading;\n            if (loadingAfter !== false) {\n              update(stateModule.state, (state) => {\n                state.loading = false;\n              });\n            }\n          }\n          GlobalActions.setLoading(false, stateModule.name);\n          return result;\n        };\n      }\n    });\n  }\n\n  return stateModule;\n}\n","import { original } from 'immer';\nimport { diffString } from 'json-diff';\nimport { state as stateCreate, update } from 'bey';\n\nconst changelogs = stateCreate({});\n\nexport default function changelog(stateModule) {\n  if (stateModule.actions && typeof stateModule.actions === 'object') {\n    const key = stateModule.name || Symbol('state module name is not defined');\n\n    changelogs.set({\n      ...changelogs.get(),\n      [key]: { changes: [] },\n    });\n\n    stateModule.state.on(() => {\n      const newState = stateModule.state.get();\n      update(changelogs, (state) => {\n        const previousSnap = state[key].changes[state[key].changes.length - 1];\n        const previousValue = previousSnap ? original(previousSnap).snapshot : undefined;\n        state[key].changes.push({ snapshot: newState, updatedAt: Date.now() });\n        /* eslint-disable no-console */\n        console.groupCollapsed(`[${key}] state changed at: ${new Date().getMilliseconds()}`); // at ${new Date().getMilliseconds()}\n        console.log('FROM:', previousValue);\n        console.log('TO:', newState);\n        console.log('DIFF:');\n        console.log(diffString(previousValue, newState));\n        console.groupEnd();\n      });\n    });\n  }\n\n  return stateModule;\n}\n","\nimport React, { useEffect, useCallback } from 'react';\nimport { useState, StateInspector } from 'reinspect';\nimport shallowEqual from 'fbjs/lib/shallowEqual';\nimport { diffString } from 'json-diff';\n\nReact.createElement(StateInspector);\n\nexport function useMultiple(...stateModules) {\n  const finalState = [];\n\n  if (stateModules && stateModules.length > 0) {\n    stateModules.forEach((module) => {\n      const [state, setState] = useState(module.state.get());\n\n      finalState.push(state);\n\n      const handler = useCallback(() => {\n        const newState = module.state.get();\n        if (newState !== state) {\n          setState(newState);\n        }\n      });\n\n      useEffect(() => {\n        module.state.on(handler);\n        return function cleanup() {\n          module.state.off(handler);\n        };\n      });\n    });\n\n    return finalState;\n  }\n  throw new Error('useMultiple requires at least one argument.');\n}\n\n\nfunction updateStateDeferred(setStateFunction, oldState, newPartialState, moduleName, futureState, componentName, listeners) {\n  /* eslint-disable no-param-reassign */\n  futureState.changes.push({ oldState, newPartialState, moduleName });\n  let timeouts = [];\n  timeouts.push(setTimeout(() => {\n    if (futureState.changes.length > 0) {\n      let newState = { ...futureState.oldState };\n      let moduleNameStr = '';\n      futureState.changes.forEach((change, i) => {\n        moduleNameStr += change.moduleName + ((i !== futureState.changes.length - 1) ? ' + ' : '');\n        newState = { ...newState, [change.moduleName]: change.newPartialState };\n      });\n      executeUpdateState(setStateFunction, oldState, newState, moduleNameStr, futureState.changes.length, componentName, listeners);\n      futureState.oldState = newState;\n      futureState.changes = [];\n      timeouts.forEach((t) => clearTimeout(t));\n      timeouts = [];\n    }\n  }, 0));\n}\n\nfunction executeUpdateState(setStateFunction, oldState, newState, moduleName, totalChanges, componentName, listeners) {\n  /* eslint-disable no-console */\n  console.groupCollapsed(`[${moduleName}] rendering [${totalChanges}] changes from ${componentName} at: ${new Date().getMilliseconds()}`);\n  console.log('NEW STATE: ', newState);\n  console.log(diffString(oldState, newState));\n  console.groupEnd();\n  if (listeners > 0) {\n    return setStateFunction(newState);\n  }\n  return false;\n}\n\nexport function useMultipleStates(componentName, stateModulesObject, selectorsObject = {}) {\n  let mergedState = {};\n\n  if (stateModulesObject && typeof stateModulesObject === 'object' && Object.keys(stateModulesObject).length > 0) {\n    const moduleKeys = Object.keys(stateModulesObject);\n    moduleKeys.forEach((key) => {\n      const module = stateModulesObject[key];\n      const state = module.state.get();\n      const selector = selectorsObject[key];\n      mergedState = { ...mergedState, [module.name]: (selector) ? selector(state) : state };\n    });\n\n    const [state, setState] = useState(mergedState, componentName);\n\n    const futureState = { oldState: state, newState: {}, changes: [] };\n    let listeners = 0;\n    moduleKeys.forEach((key) => {\n      const module = stateModulesObject[key];\n      const selector = selectorsObject[key];\n\n      const handler = () => {\n        const currentState = module.state.get();\n        const newState = (selector) ? selector(currentState) : currentState;\n        // console.log('updateStateDeferred', module.name ,new Date().getMilliseconds());\n        if (!shallowEqual(newState, state[module.name])) {\n          // console.log('updateStateDeferred changed',new Date().getMilliseconds());\n          updateStateDeferred(setState, state, newState, module.name, futureState, componentName, listeners);\n        }\n      };\n\n      useEffect(() => {\n        listeners += 1;\n        module.state.on(handler);\n        return function cleanup() {\n          listeners -= 1;\n          module.state.off(handler);\n        };\n      });\n    });\n\n    return state;\n  }\n  throw new Error('useMultipleStates requires at least 2 arguments: componentName (string), stateModules (object) indexed by key.');\n}\n\nexport default function useStateProvider(stateModule) {\n  if (stateModule && typeof stateModule === 'object' && stateModule.state && typeof stateModule.state === 'object') {\n    stateModule.state.useState = function useStateHook(...modules) {\n      if (modules) {\n        return useMultipleStates(...modules);\n      }\n      return useMultipleStates(stateModule);\n    };\n  }\n\n  return stateModule;\n}\n","import loadingModule from './loading';\nimport modifiedModule from './modified';\nimport changelogModule from './changelog';\nimport contextModule from './context';\nimport useStateProviderModule from './useStateProvider';\n\nexport const loading = loadingModule;\nexport const modified = modifiedModule;\nexport const changelog = changelogModule;\nexport const addContext = contextModule;\nexport const useStateProvider = useStateProviderModule;\n","import { update } from 'bey';\n\nexport default function modified(stateModule) {\n  /* eslint-disable no-param-reassign */\n  if (stateModule.actions && typeof stateModule.actions === 'object') {\n    const initState = stateModule.state.get();\n    stateModule.state.set({ ...initState, modified: false });\n    stateModule.actions.setModified = function setModified(modifiedFlag) {\n      const currentState = stateModule.state.get();\n      if (currentState.modified !== modifiedFlag) {\n        update(stateModule.state, (state) => {\n          state.modified = modifiedFlag;\n        });\n      }\n    };\n  }\n\n  return stateModule;\n}\n","import { state as stateCreate, update } from 'bey';\nimport { actions as SnackbarActions } from '../snackbar';\nimport { changelog } from '../helpers';\n\nconst LIST_MODE = 'list';\nconst CARD_MODE = 'card';\nconst TABLE_MODE = 'table';\n\nconst mql = window.matchMedia('(min-width: 800px)');\n\nconst global = stateCreate({\n  loading: { state: false, total: 0, message: null },\n  mode: TABLE_MODE,\n  menu: {\n    left: true,\n    right: true,\n  },\n  isSmallScreen: !mql.matches,\n});\n\nmql.addListener(() => {\n  update(global, (state) => {\n    state.isSmallScreen = !mql.matches;\n  });\n});\n\nfunction setLoading(loading, message) {\n  update(global, (state) => {\n    if (loading) {\n      state.loading.total += 1;\n    } else {\n      state.loading.total -= 1;\n    }\n\n    state.loading.state = state.loading.total > 0;\n    state.loading.message = message;\n  });\n}\n\nfunction changeMode(mode) {\n  if (mode === LIST_MODE || mode === CARD_MODE || mode === TABLE_MODE) {\n    update(global, (state) => {\n      state.mode = mode;\n    });\n    SnackbarActions.setMessage(`Mode changed to: ${mode}`);\n  }\n}\n\nfunction toggleLeftMenu() {\n  update(global, (state) => {\n    state.menu.left = !state.menu.left;\n  });\n}\n\nfunction setRightMenuVisibility(visible) {\n  update(global, (state) => {\n    state.menu.right = visible;\n  });\n}\n\nfunction loader(state) {\n  return { loading: { state: state.loading.state, message: state.loading.message } };\n}\n\nfunction drawerMenu(state) {\n  return { isOpen: state.menu.right, isSmallScreen: state.isSmallScreen };\n}\n\nfunction leftMenu(state) {\n  return { isOpen: state.menu.left, isSmallScreen: state.isSmallScreen };\n}\n\nconst exported = {\n  name: 'global',\n  state: global,\n  actions: {\n    setLoading, changeMode, toggleLeftMenu, setRightMenuVisibility,\n  },\n  selectors: {\n    loader, drawerMenu, leftMenu,\n  },\n};\nexport const { state, actions, selectors } = exported;\nexport default changelog(exported);\n","import * as firebase from 'firebase';\n\nconst config = {\n  apiKey: 'AIzaSyB1GATIyuA6FNnAUMBz0kXJ62EvlSWx99o',\n  authDomain: 'redux-contacts-app.firebaseapp.com',\n  databaseURL: 'https://redux-contacts-app.firebaseio.com/',\n};\n\nfirebase.initializeApp(config);\n\nexport default firebase;\n","import firebase from './index';\n\nconst BASE_URL = '/groups';\n\nexport function getGroupsService() {\n  const firebaseConnection = firebase.database().ref(`${BASE_URL}`);\n  return new Promise((resolve, reject) => {\n    firebaseConnection.once(\n      'value',\n      (groupsDB) => {\n        const groupsDBValue = groupsDB.val();\n        const groups = [];\n        Object.keys(groupsDBValue).map((id) => groups.push({\n          id,\n          ...groupsDBValue[id],\n        }));\n        return resolve(groups);\n      },\n      (err) => reject(err),\n    );\n  });\n}\n\nexport function getGroupService(id) {\n  const firebaseConnection = firebase.database().ref(`${BASE_URL}/${id}`);\n  return new Promise((resolve, reject) => {\n    firebaseConnection.once(\n      'value',\n      (groupDB) => {\n        const groupDBValue = groupDB.val();\n        groupDBValue.id = id;\n        return resolve(groupDBValue);\n      },\n      (err) => reject(err),\n    );\n  });\n}\n\nexport function postGroupService(group) {\n  const firebaseConnection = firebase.database().ref(`${BASE_URL}`);\n  return new Promise((resolve, reject) => {\n    const post = firebaseConnection.push();\n    post.set(group, (err) => {\n      if (err) {\n        return reject(err);\n      }\n      return resolve({\n        id: post.key,\n        ...group,\n      });\n    });\n  });\n}\n\nexport function updateGroupService({ id, ...others }) {\n  const firebaseConnection = firebase.database().ref(`${BASE_URL}/${id}`);\n  return new Promise((resolve, reject) => {\n    firebaseConnection.set({ ...others }, (err) => {\n      if (err) {\n        return reject(err);\n      }\n      return resolve({\n        id,\n        ...others,\n      });\n    });\n  });\n}\n\nexport function deleteGroupService(id) {\n  const firebaseConnection = firebase.database().ref(`${BASE_URL}/${id}`);\n  return new Promise((resolve, reject) => {\n    firebaseConnection.set(null, (err) => {\n      if (err) {\n        return reject(err);\n      }\n      return resolve({ id });\n    });\n  });\n}\n","import firebase from './index';\n\nconst BASE_URL = '/jony';\n\nexport function getContactsService() {\n  const firebaseConnection = firebase.database().ref(`${BASE_URL}`);\n  return new Promise((resolve, reject) => {\n    firebaseConnection.once(\n      'value',\n      (contactsDB) => {\n        const contactsDBValue = contactsDB.val();\n        const contacts = [];\n        Object.keys(contactsDBValue).map((id) => contacts.push({\n          id,\n          ...contactsDBValue[id],\n        }));\n        return resolve(contacts);\n      },\n      (err) => reject(err),\n    );\n  });\n}\n\nexport function getContactService(id) {\n  const firebaseConnection = firebase.database().ref(`${BASE_URL}/${id}`);\n  return new Promise((resolve, reject) => {\n    firebaseConnection.once(\n      'value',\n      (contactDB) => {\n        const contactDBValue = contactDB.val();\n        if (contactDBValue) {\n          contactDBValue.id = id;\n        }\n        return resolve(contactDBValue);\n      },\n      (err) => reject(err),\n    );\n  });\n}\n\nexport function postContactService(contact) {\n  const firebaseConnection = firebase.database().ref(`${BASE_URL}`);\n  return new Promise((resolve, reject) => {\n    const post = firebaseConnection.push();\n    post.set(contact, (err) => {\n      if (err) {\n        return reject(err);\n      }\n      return resolve({\n        id: post.key,\n        ...contact,\n      });\n    });\n  });\n}\n\nexport function updateContactService({ id, ...others }) {\n  const firebaseConnection = firebase.database().ref(`${BASE_URL}/${id}`);\n  return new Promise((resolve, reject) => {\n    firebaseConnection.set({ ...others }, (err) => {\n      if (err) {\n        return reject(err);\n      }\n      return resolve({\n        id,\n        ...others,\n      });\n    });\n  });\n}\n\nexport function deleteContactService(id) {\n  const firebaseConnection = firebase.database().ref(`${BASE_URL}/${id}`);\n  return new Promise((resolve, reject) => {\n    firebaseConnection.set(null, (err) => {\n      if (err) {\n        return reject(err);\n      }\n      return resolve({ id });\n    });\n  });\n}\n","import { state as stateCreate, update } from 'bey';\nimport { actions as SnackbarActions } from '../snackbar';\nimport { getGroupsService } from '../../services/groups';\nimport {\n  getContactsService,\n  getContactService,\n  updateContactService,\n  postContactService,\n  deleteContactService,\n} from '../../services/contacts';\nimport HistoryActions from '../history/actions';\nimport {\n  loading, modified, changelog, useStateProvider,\n} from '../helpers';\n\nconst contacts = stateCreate({\n  list: {},\n  groups: {},\n  current: {},\n});\n\nasync function loadContactsIfEmpty() {\n  const contactsArray = Object.values(contacts.get().list);\n  if (contactsArray.length === 0) {\n    loadData();\n  }\n}\n\nasync function loadData(id) {\n  // TODO: move this to a service layer\n\n  const groupsResponse = await getGroupsService();\n  const newGroups = {};\n\n  groupsResponse.forEach((group) => {\n    newGroups[group.id] = group;\n  });\n\n  let contactsResponse;\n  if (id) {\n    contactsResponse = [await getContactService(id)];\n  } else {\n    contactsResponse = await getContactsService();\n  }\n\n  const newContacts = {};\n\n  contactsResponse.forEach((contact) => {\n    if (contact) {\n      if (contact.groups && contact.groups.length > 0) {\n        /* eslint-disable-next-line no-param-reassign */\n        contact.groupNames = contact.groups\n          .map((groupId) => {\n            if (newGroups[groupId]) {\n              return newGroups[groupId].name;\n            }\n            return '';\n          })\n          .join(', ');\n      }\n\n      newContacts[contact.id] = contact;\n    }\n  });\n\n  // TODO: move until here to a service layer\n\n  update(contacts, (state) => {\n    if (id) {\n      state.current = newContacts[id] || {};\n      // state.modified = false;\n    } else {\n      state.list = newContacts;\n    }\n\n    state.groups = newGroups;\n  });\n}\n\nasync function saveContact(contact) {\n  try {\n    let response;\n\n    if (contact.id) {\n      response = await updateContactService(contact);\n    } else {\n      response = await postContactService(contact);\n    }\n\n    // eslint-disable-next-line no-console\n    console.log('current contact updated:', response);\n\n    update(contacts, (state) => {\n      state.current = contact;\n      state.modified = false;\n    });\n\n    SnackbarActions.setMessage(`Contact ${contact.id ? 'updated' : 'created'} successfully`);\n  } catch (error) {\n    SnackbarActions.displayError(error);\n  }\n  HistoryActions.transitionToContactList();\n}\n\nasync function deleteContact(id) {\n  try {\n    if (id) {\n      await deleteContactService(id);\n      update(contacts, (state) => {\n        state.current = {};\n      });\n\n      SnackbarActions.setMessage('Contact deleted successfully');\n      loadData();\n    }\n  } catch (error) {\n    SnackbarActions.displayError(error);\n  }\n}\n\nfunction contactForm(state) {\n  return { current: state.current, groups: state.groups };\n}\n\nfunction contactDetail(state) {\n  return { current: state.current, loading: state.loading };\n}\n\nfunction contactList(state) {\n  return { current: state.current, list: state.list, groups: state.groups };\n}\n\nfunction contactListGlobal(state) {\n  return { mode: state.mode };\n}\n\nconst exported = {\n  name: 'contacts',\n  state: contacts,\n  actions: {\n    loadData, loadContactsIfEmpty, saveContact, deleteContact,\n  },\n  selectors: {\n    contactForm, contactList, contactListGlobal, contactDetail,\n  },\n};\n\nexport const { actions, state, selectors } = exported;\nexport default useStateProvider(changelog(modified(loading(exported, { localLoading: true }))));\n","import { actions as GlobalActions } from '../global';\nimport { actions as ContactsActions } from '../contacts';\nimport router, { navigate } from '../../router/router-config';\nimport { ROUTES } from '../../router/routes';\n\nconst textToRouter = {\n  List: ROUTES.LIST_CONTACTS,\n  About: ROUTES.HOME,\n  'Add Contact': ROUTES.ADD_CONTACT,\n  'Add Group': ROUTES.ADD_GROUP,\n};\n\nconst actions = {\n  transitionToContactList: async () => {\n    await ContactsActions.loadData();\n    navigate(ROUTES.LIST_CONTACTS);\n  },\n  transitionToEditContact: async ({ id }) => {\n    await [ContactsActions.loadData(id), ContactsActions.loadContactsIfEmpty()];\n    GlobalActions.setRightMenuVisibility(true);\n    navigate(ROUTES.EDIT_CONTACT, { id });\n  },\n  transitionToContactDetail: async ({ id }) => {\n    await [ContactsActions.loadData(id), ContactsActions.loadContactsIfEmpty()];\n    // async rendering example\n    // ContactsActions.loadData(id);\n    // setTimeout(() => ContactsActions.loadContactsIfEmpty(), 2000);\n    GlobalActions.setRightMenuVisibility(true);\n    navigate(ROUTES.CONTACT_DETAILS, { id });\n  },\n  transitionToMenuOption: (text) => {\n    if (actions[textToRouter[text]]) {\n      actions[textToRouter[text]]();\n    } else {\n      navigate(textToRouter[text]);\n    }\n  },\n  goBack: () => window.history.back(),\n  router: {\n    canDeactivate: router.canDeactivate,\n  },\n};\n\nactions[ROUTES.EDIT_CONTACT] = actions.transitionToEditContact;\nactions[ROUTES.CONTACT_DETAILS] = actions.transitionToContactDetail;\nactions[ROUTES.LIST_CONTACTS] = actions.transitionToContactList;\n\nexport default actions;\n","import { state as stateCreate, update } from 'bey';\nimport router from '../../router/router-config';\nimport actionsObject from './actions';\n\nconst initialRoute = router.getState();\nconst { name, params } = initialRoute;\n\nif (actionsObject[name]) {\n  actionsObject[name](params);\n}\n\nconst history = stateCreate({\n  route: initialRoute,\n  previousRoute: {},\n});\n\nconst exported = {\n  name: 'history',\n  state: history,\n  actions: actionsObject,\n};\n\nrouter.subscribe((change) => {\n  update(history, (state) => {\n    // console.log('History route changed:', change);\n    state.route = change.route;\n    state.previousRoute = change.previousRoute;\n  });\n});\n\nexport const { state, actions } = exported;\nexport default exported;\n","import React, { useState, useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Alert } from '@blueprintjs/core';\nimport { actions as HistoryActions } from '../state/history';\n\nfunction ModifiedCheckAlert({\n  isModified, routesToBlock, children,\n}) {\n  const [state, setState] = useState({ alertIsOpen: false });\n\n  const handleCancel = useCallback(() => {\n    state.continue();\n    setState({ alertIsOpen: false });\n  });\n\n  const handleContinue = useCallback(() => {\n    state.cancel();\n    setState({ alertIsOpen: false });\n  });\n\n  useEffect(() => {\n    if (HistoryActions.router) {\n      // eslint-disable-next-line no-unused-vars\n      const canDeactivate = (routerProvided) => (toState, fromState) => {\n        const isModifiedVal = isModified();\n        if (isModifiedVal) {\n          return new Promise((resolve, reject) => {\n            setState({ alertIsOpen: true, continue: reject, cancel: resolve });\n          });\n        }\n        return true;\n      };\n\n      routesToBlock.forEach((route) => {\n        HistoryActions.router.canDeactivate(route, canDeactivate);\n      });\n    }\n  });\n\n  const { alertIsOpen } = state;\n  return (\n    <div>\n      <Alert\n        cancelButtonText=\"Cancel\"\n        confirmButtonText=\"Continue\"\n        icon=\"trash\"\n        intent=\"danger\"\n        isOpen={alertIsOpen}\n        onCancel={handleCancel}\n        onConfirm={handleContinue}\n      >\n        <p>Are you sure you want leave? Your changes will be lost.</p>\n      </Alert>\n      {children}\n    </div>\n  );\n}\n\nModifiedCheckAlert.propTypes = {\n  isModified: PropTypes.func.isRequired,\n  routesToBlock: PropTypes.array.isRequired,\n  children: PropTypes.object.isRequired,\n};\n\nexport default ModifiedCheckAlert;\n","export const requiredValidation = (value) => value !== undefined && value !== null && value !== '';\n\nexport const isEmail = (value) => {\n  if (value) {\n    const regExp = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i; // eslint-disable-line\n    return regExp.test(value);\n  }\n  return true;\n};\n\nexport const isUrl = (value) => {\n  if (value) {\n    const regExp = new RegExp('^(?:(?:https?|ftp)://)(?:S+(?::S*)?@)?(?:(?!10(?:.d{1,3}){3})(?!127(?:.d{1,3}){3})(?!169.254(?:.d{1,3}){2})(?!192.168(?:.d{1,3}){2})(?!172.(?:1[6-9]|2d|3[0-1])(?:.d{1,3}){2})(?:[1-9]d?|1dd|2[01]d|22[0-3])(?:.(?:1?d{1,2}|2[0-4]d|25[0-5])){2}(?:.(?:[1-9]d?|1dd|2[0-4]d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)(?:.(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)*(?:.(?:[a-z\\u00a1-\\uffff]{2,})))(?::d{2,5})?(?:/[^s]*)?');\n    return regExp.test(value);\n  }\n  return true;\n};\n\nexport const maxLength = (value, length) => value && value.length > length;\n","import { requiredValidation, isEmail, isUrl } from '../../globals/validators';\n\nexport default function validate(values) {\n  const errors = {};\n  if (!requiredValidation(values.email)) {\n    errors.email = 'Email is required';\n  } else if (!isEmail(values.email)) {\n    errors.email = 'Email format is incorrect';\n  }\n  if (!requiredValidation(values.name)) {\n    errors.name = 'Name is Required';\n  }\n  if (!isUrl(values.imgUrl)) {\n    errors.imgUrl = 'Invalid url';\n  }\n  return errors;\n}\n","import React, { useCallback } from 'react';\nimport { Subscribe } from 'bey';\nimport injectSheet from 'react-jss';\nimport PropTypes from 'prop-types';\nimport { Form, Field, FormSpy } from 'react-final-form';\nimport {\n  Button, Card, Elevation,\n} from '@blueprintjs/core';\nimport FormTextField from '../../components/FormTextField';\nimport FormMultiSelectField from '../../components/FormMultiSelectField';\nimport ModifiedCheckAlert from '../../components/ModifiedCheckAlert';\nimport validate from './form-validations';\nimport { actions as ContactsActions, selectors, state as ContactsState } from '../../state/contacts';\nimport { ROUTES } from '../../router/routes';\n\n\nconst styles = {\n  formCard: {\n    width: '300px',\n    margin: '0.5em 1em',\n    padding: '1em',\n  },\n  formContainer: {\n    paddingTop: '16px',\n  },\n  buttonsContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n};\n\nfunction CreateOrEditContactPage({\n  classes, route,\n}) {\n  const isContactModified = useCallback(() => ContactsState.get().modified);\n\n  return (\n    <ModifiedCheckAlert\n      isModified={isContactModified}\n      routesToBlock={[ROUTES.ADD_CONTACT, ROUTES.EDIT_CONTACT]}\n    >\n      <Subscribe to={ContactsState} on={selectors.contactForm}>\n        {(contacts) => (\n          <Form\n            onSubmit={ContactsActions.saveContact}\n            validate={validate}\n            initialValues={route.params.id ? contacts.current : {}}\n            render={({\n              handleSubmit, pristine, invalid, submitting, reset,\n            }) => (\n              <Card\n                interactive\n                elevation={Elevation.TWO}\n                className={classes.formCard}\n              >\n                <form className={classes.formContainer} onSubmit={handleSubmit}>\n                  <FormSpy\n                    onChange={({ dirty }) => {\n                      ContactsActions.setModified(dirty && !submitting);\n                    }}\n                  />\n                  <Field\n                    name=\"name\"\n                    label=\"Name\"\n                    placeholder=\"Name\"\n                    component={FormTextField}\n                  />\n                  <Field\n                    name=\"email\"\n                    label=\"Email\"\n                    placeholder=\"Email\"\n                    component={FormTextField}\n                  />\n                  <Field\n                    name=\"phoneNumber\"\n                    label=\"Phone number\"\n                    placeholder=\"Phone number\"\n                    component={FormTextField}\n                  />\n                  <Field\n                    name=\"imgUrl\"\n                    label=\"Profile image url\"\n                    placeholder=\"Profile image url\"\n                    component={FormTextField}\n                  />\n                  <Field\n                    name=\"groups\"\n                    component={FormMultiSelectField}\n                    label=\"Groups\"\n                    options={Object.values(contacts.groups).map((group) => ({\n                      value: group.id,\n                      text: group.name,\n                    }))}\n                  />\n                  <div className={classes.buttonsContainer}>\n                    <Button\n                      text=\"Save contact\"\n                      icon=\"floppy-disk\"\n                      intent=\"success\"\n                      type=\"submit\"\n                      disabled={pristine || submitting || invalid}\n                    />\n                    <Button\n                      text=\"Reset values\"\n                      disabled={pristine || submitting}\n                      icon=\"refresh\"\n                      intent=\"danger\"\n                      onClick={reset}\n                    />\n                  </div>\n                </form>\n              </Card>\n            )}\n          />\n        )}\n      </Subscribe>\n    </ModifiedCheckAlert>\n  );\n}\n\nCreateOrEditContactPage.propTypes = {\n  route: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default injectSheet(styles)(CreateOrEditContactPage);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport injectSheet from 'react-jss';\nimport {\n  Button, Card, Elevation, Classes,\n} from '@blueprintjs/core';\n\nconst styles = {\n  // eslint-disable-next-line arrow-body-style\n  cardRoot: (props) => {\n    return ({\n      width: props.big ? 'auto' : '300px',\n      padding: props.big ? 'inherit' : '0px',\n      '& .bp3-card.bp3-interactive': {\n        margin: '1em',\n        padding: 0,\n      },\n    });\n  },\n  cardContentContainer: {\n    position: 'relative',\n    textAlign: 'center',\n    height: 300,\n    width: 300,\n  },\n  cardHeader: {\n    position: 'absolute',\n    bottom: '0px',\n    right: '0px',\n    left: '0px',\n    padding: '8px',\n    margin: '0',\n    color: 'white',\n    background: 'rgba(0, 0, 0, 0.54)',\n  },\n  cardImage: {\n    maxHeight: 300,\n    maxWidth: 300,\n  },\n  cardTextContainer: {\n    fontSize: '12pt',\n    padding: '8px',\n  },\n  cardTextGroup: {\n    fontSize: '10pt',\n    color: 'grey',\n  },\n  buttonContainer: {\n    padding: '8px',\n    position: 'relative',\n  },\n  button: {\n    marginRight: '8px',\n  },\n};\n\nconst ContactCard = ({\n  // eslint-disable-next-line no-unused-vars\n  contact, onEditClick, onDeleteClick, big, loading, classes,\n}) => {\n  const {\n    name, imgUrl, email, groupNames,\n  } = contact;\n  const loadingClass = loading ? Classes.SKELETON : '';\n  return (\n    <Card\n      interactive\n      elevation={Elevation.TWO}\n      className={classes.cardRoot}\n    >\n      <div className={classes.cardContentContainer}>\n        <h1 className={classes.cardHeader}>\n          <span className={loadingClass}>{name || '...'}</span>\n        </h1>\n        <img\n          alt=\"contact\"\n          src={(name) ? imgUrl || 'http://i.imgur.com/mbZIBzc.png' : 'http://cdn.osxdaily.com/wp-content/uploads/2013/09/deleted-contacts.jpg'}\n          className={classes.cardImage}\n        />\n      </div>\n      <div className={classes.cardTextContainer}>\n        <span className={loadingClass}>{email || '...'}</span>\n        <br />\n        <span className={`${classes.cardTextGroup} ${loadingClass}`}>\n          {groupNames || 'Without group'}\n        </span>\n      </div>\n      <div className={classes.buttonContainer}>\n        <Button onClick={onEditClick} text=\"Edit\" className={classes.button} />\n        <Button onClick={onDeleteClick} text=\"Delete\" className={classes.button} />\n      </div>\n    </Card>\n  );\n};\n\nContactCard.propTypes = {\n  contact: PropTypes.object.isRequired,\n  onEditClick: PropTypes.func.isRequired,\n  onDeleteClick: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  big: PropTypes.bool,\n  loading: PropTypes.bool,\n};\n\nContactCard.defaultProps = {\n  big: false,\n  loading: false,\n};\n\nexport default injectSheet(styles)(ContactCard);\n","import React from 'react';\nimport { Classes } from '@blueprintjs/core';\nimport PropTypes from 'prop-types';\n\nfunction FilterComponent({\n  filter,\n  onChange,\n  column,\n}) {\n  return (\n    <input\n      className={Classes.INPUT}\n      type=\"text\"\n      style={{\n        width: '100%',\n      }}\n      placeholder={column.Placeholder}\n      value={filter ? filter.value : ''}\n      onChange={(event) => onChange(event.target.value)}\n    />\n  );\n}\n\nFilterComponent.propTypes = {\n  column: PropTypes.object.isRequired,\n  filter: PropTypes.object.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\n\nexport default FilterComponent;\n","\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon, Classes } from '@blueprintjs/core';\n\nfunction PaginationButton(props) {\n  return (\n    <button type=\"button\" {...props} className={Classes.BUTTON}>\n      <Icon icon={props.icon} />\n    </button>\n  );\n}\n\nPaginationButton.propTypes = {\n  icon: PropTypes.string.isRequired,\n};\n\n\nexport default PaginationButton;\n","import React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport injectSheet from 'react-jss';\nimport PaginationButton from './PaginationButton';\n\nconst styles = {\n  pagination: {\n    '&.-pagination': {\n      justifyContent: 'flex-end',\n    },\n  },\n};\n\nfunction Pagination({\n  onPageChange,\n  // Computed\n  pages,\n  // Props\n  page,\n  showPageSizeOptions,\n  pageSizeOptions,\n  pageSize,\n  showPageJump,\n  canPrevious,\n  canNext,\n  onPageSizeChange,\n  className,\n  pageJumpText,\n  nextText,\n  pageText,\n  previousText,\n  style,\n  rowsSelectorText,\n  rowsText,\n  ofText,\n  classes,\n}) {\n  const [state, setState] = useState({ page });\n\n  const getSafePage = useCallback((toPage) => {\n    let finalPage = toPage;\n    if (Number.isNaN(toPage)) {\n      finalPage = page;\n    }\n    return Math.min(Math.max(finalPage, 0), pages - 1);\n  });\n\n  const changePage = useCallback((toPage) => {\n    const safePage = getSafePage(toPage);\n    setState({ safePage });\n    if (page !== safePage) {\n      onPageChange(safePage);\n    }\n  });\n\n  const applyPage = useCallback((e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    changePage(page === '' ? page : state.page);\n  });\n\n  return (\n    <div className={`${className || ''} -pagination ${classes.pagination}`} style={style}>\n      <span className=\"-pageInfo\">\n        {pageText}\n        {' '}\n        {showPageJump ? (\n          <div className=\"-pageJump\">\n            <input\n              aria-label={pageJumpText}\n              type={state.page === '' ? 'text' : 'number'}\n              onChange={(e) => {\n                const val = e.target.value;\n                const finalPage = val - 1;\n                if (val === '') {\n                  return setState({ page: val });\n                }\n                return setState({ page: getSafePage(finalPage) });\n              }}\n              value={state.page === '' ? '' : state.page + 1}\n              onBlur={applyPage}\n              onKeyPress={(e) => {\n                if (e.which === 13 || e.keyCode === 13) {\n                  applyPage();\n                }\n              }}\n            />\n          </div>\n        ) : (\n          <span className=\"-currentPage\">{page + 1}</span>\n        )}\n        {` ${ofText} `}\n        <span className=\"-totalPages\">{pages || 1}</span>\n      </span>\n      {showPageSizeOptions && (\n        <span className=\"select-wrap -pageSizeOptions\">\n          <select\n            aria-label={rowsSelectorText}\n            onChange={(e) => onPageSizeChange(Number(e.target.value))}\n            value={pageSize}\n          >\n            {pageSizeOptions.map((option, i) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <option key={i} value={option}>\n                {`${option} ${rowsText}`}\n              </option>\n            ))}\n          </select>\n        </span>\n      )}\n      <div className=\"pagination-buttons\">\n        <PaginationButton\n          icon=\"double-chevron-left\"\n          onClick={() => {\n            if (!canPrevious) return;\n            changePage(0);\n          }}\n          disabled={!canPrevious}\n        />\n        <PaginationButton\n          icon=\"chevron-left\"\n          onClick={() => {\n            if (!canPrevious) return;\n            changePage(page - 1);\n          }}\n          disabled={!canPrevious}\n        >\n          {previousText}\n        </PaginationButton>\n        <PaginationButton\n          icon=\"chevron-right\"\n          onClick={() => {\n            if (!canNext) return;\n            changePage(page + 1);\n          }}\n          disabled={!canNext}\n        />\n        <PaginationButton\n          icon=\"double-chevron-right\"\n          onClick={() => {\n            if (!canNext) return;\n            changePage(pages - 1);\n          }}\n          disabled={!canNext}\n        >\n          {nextText}\n        </PaginationButton>\n      </div>\n    </div>\n  );\n}\n\nPagination.propTypes = {\n  /* eslint-disable react/require-default-props */\n  onPageChange: PropTypes.func,\n  pages: PropTypes.number.isRequired,\n  page: PropTypes.number.isRequired,\n  showPageSizeOptions: PropTypes.bool,\n  pageSizeOptions: PropTypes.array,\n  pageSize: PropTypes.number,\n  showPageJump: PropTypes.bool,\n  canPrevious: PropTypes.bool,\n  canNext: PropTypes.bool,\n  onPageSizeChange: PropTypes.func,\n  className: PropTypes.string,\n  pageJumpText: PropTypes.string,\n  nextText: PropTypes.string,\n  pageText: PropTypes.string,\n  previousText: PropTypes.string,\n  style: PropTypes.object,\n  rowsSelectorText: PropTypes.string,\n  rowsText: PropTypes.string,\n  ofText: PropTypes.string,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default injectSheet(styles)(Pagination);\n","import React, { useState } from 'react';\nimport ReactTable, { ReactTableDefaults } from 'react-table';\nimport selectTableHOC from 'react-table/lib/hoc/selectTable';\nimport _find from 'lodash/find';\nimport injectSheet from 'react-jss';\nimport PropTypes from 'prop-types';\nimport FilterComponent from './Filter';\nimport PaginationComponent from './Pagination';\n\n\nObject.assign(ReactTableDefaults, {\n  FilterComponent,\n  PaginationComponent,\n});\n\nconst SelectTable = selectTableHOC(ReactTable);\n\nconst styles = {\n  table: {\n    '& .rt-th.rt-resizable-header': {\n      paddingTop: '0.5em',\n      overflow: 'hidden',\n    },\n    '& .rt-tr.selected.-odd, .rt-tr.selected.-even': {\n      backgroundColor: '#5C7080',\n    },\n    '& .groups': {\n      display: 'flex',\n      justifyContent: 'space-evenly',\n    },\n    '& .select-wrap select': {\n      backgroundColor: 'rgba(16, 22, 26, 0.3)',\n      color: 'white',\n    },\n    '& .rt-tr-group': {\n      flex: '0 0 auto',\n    },\n    '& .rt-table': {\n      minHeight: 'calc( 100vh - 5.7rem )',\n    },\n    '& .edit-item, .delete-item': {\n      textAlign: 'center',\n    },\n  },\n};\n\n\nfunction Table({\n  classes, data, columns, getTdProps, getTrProps, getTableProps, resolveData,\n}) {\n  const [state, setState] = useState({ selected: {} });\n\n  const oneNotSelected = Object.keys(state.selected).length > 0 ? _find(state.selected, (e) => !e) === false : true;\n\n  return (\n    <SelectTable\n      data={data}\n      filterable\n      resolveData={resolveData}\n      keyField=\"id\"\n      selectAll={!oneNotSelected}\n      toggleSelection={(i) => { setState({ ...state, selected: { ...state.selected, [i]: !state.selected[i] } }); }}\n      isSelected={(i) => state.selected[i]}\n      // eslint-disable-next-line no-param-reassign\n      toggleAll={() => { setState({ ...state, selected: data.reduce((acc, v) => { acc[v.id] = !acc[v.id]; return acc; }, state.selected) }); }}\n      selectType=\"checkbox\"\n      getTrProps={getTrProps}\n      getTdProps={getTdProps}\n      getTableProps={getTableProps}\n      showPageJump={false}\n      defaultFilterMethod={(filter, row) => String(row[filter.id]).toLowerCase().indexOf(filter.value.toLowerCase()) !== -1}\n      columns={columns}\n      className={`-striped -highlight ${classes.table}`}\n    />\n  );\n}\n\nTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n  columns: PropTypes.array.isRequired,\n  data: PropTypes.array.isRequired,\n  getTdProps: PropTypes.func,\n  getTrProps: PropTypes.func,\n  getTableProps: PropTypes.func,\n  resolveData: PropTypes.func,\n};\n\nTable.defaultProps = {\n  getTdProps: undefined,\n  getTrProps: undefined,\n  getTableProps: undefined,\n  resolveData: undefined,\n};\n\nexport default injectSheet(styles)(Table);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon, Tag } from '@blueprintjs/core';\nimport posed from 'react-pose';\nimport Table from '../../components/Table/Table';\nimport { actions as ContactsActions } from '../../state/contacts';\nimport { actions as HistoryActions } from '../../state/history';\n\n\nconst Pop = posed.div({\n  hoverable: true,\n  init: { scale: 1 },\n  hover: { scale: 1.2 },\n});\n\nconst columns = [{\n  Header: 'Name',\n  accessor: 'name',\n  Placeholder: 'Search by name...',\n}, {\n  Header: 'Email',\n  accessor: 'email',\n  Placeholder: 'Search by email...',\n  Cell: (cellProps) => (\n    <span className=\"email\">\n      <Icon icon=\"envelope\" />\n      {`  ${cellProps.value}`}\n    </span>\n  ),\n  Filter: () => null,\n}, {\n  Header: 'Phone Number',\n  accessor: 'phoneNumber',\n  Placeholder: 'Search by phone number...',\n  Cell: (cellProps) => (\n    (cellProps.value)\n      ? (\n        <span className=\"phoneNumber\">\n          <Icon icon=\"phone\" />\n          {`  ${cellProps.value}`}\n        </span>\n      ) : false),\n}, {\n  Header: 'Groups',\n  accessor: 'groupNames',\n  Placeholder: 'Search by group...',\n  Cell: (cellProps) => (\n    <span className=\"groups\">\n      {(cellProps.value) ? cellProps.value.split(',').map((group) => (\n        <Tag key={group}>\n          <Icon icon=\"people\" />\n          {group}\n        </Tag>\n      )) : false}\n    </span>\n  ),\n}, {\n  Header: 'Edit',\n  sortable: false,\n  resizable: false,\n  filterable: false,\n  width: 50,\n  className: 'edit-item',\n  Cell: () => (\n    <Pop><Icon icon=\"edit\" /></Pop>\n  ),\n}, {\n  Header: 'Delete',\n  sortable: false,\n  resizable: false,\n  filterable: false,\n  width: 50,\n  className: 'delete-item',\n  Cell: () => (\n    <Pop><Icon icon=\"delete\" /></Pop>\n  ),\n}];\n\nconst wrapWithOriginal = (func, handleOriginal) => {\n  func();\n\n  if (handleOriginal) {\n    handleOriginal();\n  }\n};\n\nconst getTdProps = (state, rowInfo, column) => {\n  switch (column.Header) {\n    case 'Edit':\n      return {\n        onClick: (e, handleOriginal) => {\n          wrapWithOriginal(() => {\n            HistoryActions.transitionToEditContact({ id: rowInfo.original.id });\n          }, handleOriginal);\n        },\n      };\n    case 'Delete':\n      return {\n        onClick: (e, handleOriginal) => {\n          wrapWithOriginal(() => {\n            ContactsActions.deleteContact(rowInfo.original.id);\n          }, handleOriginal);\n        },\n      };\n    default:\n      return {};\n  }\n};\n\nconst getTrProps = (state, rowInfo) => ({\n  className: (rowInfo && rowInfo.original && rowInfo.original.selected) ? 'selected' : '',\n  onClick: (e, handleOriginal) => {\n    wrapWithOriginal(() => {\n      HistoryActions.transitionToEditContact({ id: rowInfo.original.id });\n    }, handleOriginal);\n  },\n});\n\n\nfunction ContactsTable({\n  list, route,\n}) {\n  return (\n    <Table\n      resolveData={(data) => data.map((r) => ({ ...r, selected: route.params.id === r.id }))}\n      getTrProps={getTrProps}\n      getTdProps={getTdProps}\n      data={list}\n      filterable\n      columns={columns}\n    />\n  );\n}\n\nContactsTable.propTypes = {\n  list: PropTypes.array.isRequired,\n  route: PropTypes.object.isRequired,\n};\n\nexport default ContactsTable;\n","import React, { useCallback } from 'react';\nimport posed, { PoseGroup } from 'react-pose';\nimport PropTypes from 'prop-types';\nimport injectSheet from 'react-jss';\nimport { Button } from '@blueprintjs/core';\nimport ContactCard from '../../components/ContactCard';\nimport { useMultipleStates } from '../../state/helpers/useStateProvider';\nimport Contacts, { actions as ContactsActions, selectors as ContactsSelectors } from '../../state/contacts';\nimport Global from '../../state/global';\nimport { actions as HistoryActions } from '../../state/history';\nimport Table from './table';\n\nconst styles = {\n  contactListItem: {\n    '&.bp3-tag.bp3-interactive': {\n      display: 'flex',\n      justifyContent: 'space-between',\n      height: '60px',\n      paddingLeft: '8px',\n      margin: '3px',\n      backgroundColor: '#394b59',\n      color: 'white',\n      boxShadow: '0 0 0 1px rgba(16, 22, 26, 0.2), 0 0 0 rgba(16, 22, 26, 0), 0 1px 1px rgba(16, 22, 26, 0.4)',\n    },\n    '&.bp3-tag.bp3-interactive:hover': {\n      background: '#202B33',\n    },\n    '&.bp3-tag.bp3-interactive.selected': {\n      background: '#5C7080',\n    },\n  },\n  contactListItemImage: {\n    maxWidth: 50,\n    minWidth: 50,\n    maxHeight: 50,\n  },\n  contactListItemTextContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignSelf: 'center',\n    marginLeft: '2rem',\n  },\n  contactListItemText1stLine: {\n    fontWeight: 'bolder',\n  },\n  contactListItemText2ndLine: {\n    fontSize: '12px',\n  },\n  contactListItemAvatar: {\n    width: '50px',\n    height: '50px',\n    fontSize: '35px',\n    backgroundColor: '#182026',\n    color: 'white',\n    textAlign: 'center',\n    lineHeight: '50px',\n    borderRadius: '50px',\n  },\n  contactListRoot: {\n    display: 'flex',\n    flex: '1 0 auto',\n    flexDirection: 'row',\n    height: 'calc(100vh - 3.7em)',\n    overflowY: 'scroll',\n  },\n  contactListItemsContainer: {\n    display: 'flex',\n    flex: '1 0 auto',\n    flexDirection: 'column',\n  },\n  contactListCardsContainer: {\n    flexWrap: 'wrap',\n  },\n};\n\nconst Pop = posed.div({\n  hoverable: true,\n  init: { scale: 1 },\n  hover: { scale: 1.2 },\n});\n\nconst Item = posed.div({\n  enter: {\n    opacity: 1,\n    transition: ({ i }) => ({ delay: i * 50 }),\n  },\n  exit: { opacity: 0 },\n  props: { i: 0 },\n});\n\nfunction ContactListCards(props) {\n  return props.list.map((contact) => (\n    <ContactCard\n      key={`contact-${contact.id}`}\n      contact={contact}\n      onEditClick={() => HistoryActions.transitionToEditContact({ id: contact.id })}\n      onDeleteClick={() => ContactsActions.deleteContact(contact.id)}\n    />\n  ));\n}\n\nfunction ContactListItems({\n  classes, list, route,\n}) {\n  return (\n    <PoseGroup>\n      {list.map((contact, i) => (\n        <Item key={`contact-${contact.id}`} id={contact.id} i={i}>\n          <div\n            role=\"presentation\"\n            onKeyPress={(e) => (e.key === 'Enter') ? HistoryActions.transitionToContactDetail({ id: contact.id }) : false}\n            onClick={() => HistoryActions.transitionToContactDetail({ id: contact.id })}\n            className={`bp3-tag bp3-interactive ${classes.contactListItem} ${\n              route.params.id === contact.id ? 'selected' : ''\n            }`}\n          >\n            <div style={{ display: 'flex' }}>\n              {contact.imgUrl ? (\n                <Pop>\n                  <img\n                    src={contact.imgUrl}\n                    alt={contact.name}\n                    className={classes.contactListItemImage}\n                  />\n                </Pop>\n              ) : (\n                <Pop className={classes.contactListItemAvatar}>\n                  { contact.name.substring(0, 1).toUpperCase() }\n                </Pop>\n              )}\n              <div className={classes.contactListItemTextContainer}>\n                <div className={classes.contactListItemText1stLine}>{contact.name}</div>\n                <div className={classes.contactListItemText2ndLine}>{contact.groupNames || 'Without group'}</div>\n              </div>\n            </div>\n            <Pop>\n              <Button\n                icon=\"delete\"\n                onClick={(e) => {\n                  ContactsActions.deleteContact(contact.id);\n                  e.stopPropagation();\n                }}\n              />\n            </Pop>\n          </div>\n        </Item>\n      ))}\n    </PoseGroup>\n  );\n}\n\nconst ContactList = React.memo((props) => {\n  const { contacts, global } = useMultipleStates('ContactList', {\n    contacts: Contacts,\n    global: Global,\n  }, {\n    contacts: ContactsSelectors.contactList,\n    global: ContactsSelectors.contactListGlobal,\n  });\n\n  const renderListType = useCallback(() => {\n    switch (global.mode) {\n      case 'list':\n        return (\n          <div className={props.classes.contactListItemsContainer}>\n            <ContactListItems {...props} list={Object.values(contacts.list)} />\n          </div>\n        );\n      case 'card':\n        return (\n          <div className={props.classes.contactListCardsContainer}>\n            <ContactListCards {...props} list={Object.values(contacts.list)} />\n          </div>\n        );\n      default:\n        return (\n          <div className={props.classes.contactListItemsContainer}>\n            <Table {...props} list={Object.values(contacts.list)} />\n          </div>\n        );\n    }\n  });\n\n  return (\n    <div className={props.classes.contactListRoot}>\n      {renderListType()}\n    </div>\n  );\n});\n\nContactListCards.propTypes = {\n  list: PropTypes.array.isRequired,\n  route: PropTypes.object.isRequired,\n};\n\nContactListItems.propTypes = {\n  list: PropTypes.array.isRequired,\n  classes: PropTypes.object.isRequired,\n  route: PropTypes.object.isRequired,\n};\n\nContactList.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default injectSheet(styles)(ContactList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport injectSheet from 'react-jss';\nimport ContactCard from '../../components/ContactCard';\nimport Contacts, { actions as ContactsActions, selectors as ContactsSelectors } from '../../state/contacts';\nimport { actions as HistoryActions } from '../../state/history';\nimport { useMultipleStates } from '../../state/helpers/useStateProvider';\n\nconst styles = {\n  contactDetailRoot: {\n    margin: '0.5em 1em',\n    width: '300px',\n  },\n};\n\nfunction ContactPage(props) {\n  const { contacts } = useMultipleStates('ContactDetail', { contacts: Contacts }, { contacts: ContactsSelectors.contactDetail });\n\n  return (\n    <div className={props.classes.contactDetailRoot}>\n      <ContactCard\n        big\n        contact={contacts.current}\n        loading={contacts.loading}\n        onEditClick={() => HistoryActions.transitionToEditContact(props.route.params)}\n        onDeleteClick={() => ContactsActions.deleteContact(props.route.params.id)}\n      />\n    </div>\n  );\n}\n\nContactPage.propTypes = {\n  route: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default injectSheet(styles)(ContactPage);\n","import { requiredValidation, maxLength } from '../../globals/validators';\n\nexport default function validate(values) {\n  const errors = {};\n  if (!requiredValidation(values.name)) {\n    errors.name = 'Name is required';\n  } else if (!maxLength(values.name, 4)) {\n    errors.name = 'Name has to 4 o more characters';\n  }\n  return errors;\n}\n","import { state as stateCreate, update } from 'bey';\nimport { actions as SnackbarActions } from '../snackbar';\nimport {\n  getGroupsService,\n  getGroupService,\n  postGroupService,\n  updateGroupService,\n} from '../../services/groups';\nimport { actions as HistoryActions } from '../history';\nimport loading from '../helpers/loading';\n\nconst groups = stateCreate({\n  list: {},\n  current: {},\n});\n\nasync function loadData(id) {\n  let groupsResponse;\n  if (id) {\n    groupsResponse = await getGroupService(id);\n    update(groups, (state) => {\n      state.current = groupsResponse;\n    });\n  } else {\n    groupsResponse = await getGroupsService();\n    update(groups, (state) => {\n      state.list = groupsResponse;\n    });\n  }\n}\n\nasync function saveGroup(group) {\n  try {\n    if (group.id) {\n      await updateGroupService(group);\n      SnackbarActions.setMessage('Group updated successfully');\n    } else {\n      await postGroupService(group);\n      SnackbarActions.setMessage('Group created successfully');\n    }\n\n    update(groups, (state) => {\n      state.current = group;\n    });\n  } catch (error) {\n    SnackbarActions.displayError(error);\n  }\n\n  HistoryActions.goBack();\n}\n\nconst exported = {\n  name: 'groups',\n  state: groups,\n  actions: { loadData, saveGroup },\n};\nexport const { state, actions } = exported;\nexport default loading(exported);\n","import React, { Component } from 'react';\nimport { Subscribe } from 'bey';\nimport PropTypes from 'prop-types';\nimport injectSheet from 'react-jss';\nimport { Form, Field } from 'react-final-form';\nimport { Button, Card, Elevation } from '@blueprintjs/core';\nimport FormTextField from '../../components/FormTextField';\nimport validate from './form-validations';\nimport { actions as GroupActions, state as GroupState } from '../../state/groups';\n\nconst styles = {\n  formCard: {\n    width: '300px',\n    margin: '0.5em 1em',\n    padding: '1em',\n  },\n  formContainer: {\n    paddingTop: '16px',\n  },\n  buttonsContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n};\n\nclass CreateOrEditGroupPage extends Component {\n  componentDidMount() {\n    const { id } = this.props.route.params;\n    if (id) {\n      GroupActions.loadData(id);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.route.params.id !== nextProps.route.params.id) {\n      GroupActions.loadData(nextProps.route.params.id);\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <Subscribe to={GroupState}>\n        {(contacts) => (\n          <Form\n            onSubmit={GroupActions.saveGroup}\n            validate={validate}\n            initialValues={contacts.current}\n            render={({\n              handleSubmit, pristine, invalid, submitting, form: { reset },\n            }) => (\n              <Card\n                interactive\n                elevation={Elevation.TWO}\n                className={classes.formCard}\n              >\n                <form className={classes.formContainer} onSubmit={handleSubmit}>\n                  <Field name=\"name\" label=\"Name\" placeholder=\"Name\" component={FormTextField} />\n                  <div className={classes.buttonsContainer}>\n                    <Button\n                      icon=\"floppy-disk\"\n                      intent=\"success\"\n                      type=\"submit\"\n                      disabled={pristine || submitting || invalid}\n                      text=\"Save group\"\n                    />\n                    <Button\n                      icon=\"refresh\"\n                      intent=\"danger\"\n                      onClick={reset}\n                      disabled={pristine || submitting}\n                      text=\"Reset values\"\n                    />\n                  </div>\n                </form>\n              </Card>\n            )}\n          />\n        )}\n      </Subscribe>\n    );\n  }\n}\n\nCreateOrEditGroupPage.propTypes = {\n  route: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default injectSheet(styles)(CreateOrEditGroupPage);\n","import React from 'react';\nimport Sidebar from 'react-sidebar';\nimport PropTypes from 'prop-types';\nimport injectSheet from 'react-jss';\nimport { Button } from '@blueprintjs/core';\nimport Global, { actions as GlobalActions, selectors as GlobalSelectors } from '../../state/global';\nimport { useMultipleStates } from '../../state/helpers/useStateProvider';\n\nconst styles = {\n  sidebar: {\n    root: { position: 'initial' },\n    content: { display: 'none' },\n    overlay: { display: 'none' },\n    sidebar: { background: '#30404d', paddingTop: '3.5rem' },\n  },\n};\n\nfunction DrawerMenu(props) {\n  const { global: { isOpen, isSmallScreen } } = useMultipleStates('DrawerMenu', {\n    global: Global,\n  }, {\n    global: GlobalSelectors.drawerMenu,\n  });\n\n  if (!isSmallScreen) {\n    return props.children;\n  }\n  return (\n    <Sidebar\n      open={isOpen}\n      pullRight\n      touch\n      styles={styles.sidebar}\n      onSetOpen={(open) => {\n        GlobalActions.setRightMenuVisibility(open);\n      }}\n      sidebar={(\n        <div>\n          <Button\n            className=\"bp3-minimal\"\n            icon=\"cross\"\n            onClick={() => GlobalActions.setRightMenuVisibility(false)}\n          />\n          {props.children}\n        </div>\n      )}\n    >\n      {\n        <Button\n          className=\"bp3-minimal\"\n          icon=\"menu\"\n          onClick={() => GlobalActions.setRightMenuVisibility(!isOpen)}\n        />\n      }\n    </Sidebar>\n  );\n}\n\nDrawerMenu.propTypes = {\n  children: PropTypes.object.isRequired,\n  // classes: PropTypes.object.isRequired,\n};\n\nexport default injectSheet(styles)(DrawerMenu);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport injectSheet from 'react-jss';\nimport About from '../containers/About';\nimport ContactForm from '../containers/ContactForm';\nimport ContactList from '../containers/ContactList';\nimport ContactDetail from '../containers/ContactDetail';\nimport GroupForm from '../containers/GroupForm';\nimport DrawerMenu from '../containers/Menu/DrawerMenu';\nimport { ROUTES } from './routes';\n\nconst styles = {\n  contactDetailsLayout: {\n    display: 'flex',\n    flex: '1 0 auto',\n  },\n  editContactLayout: {\n    display: 'flex',\n    flex: '1 0 auto',\n  },\n};\n\nfunction ComponentSelector({ route, classes }) {\n  if (!route) {\n    return <About route={route} />;\n  }\n\n  switch (route.name) {\n    case ROUTES.ADD_GROUP:\n      return <GroupForm route={route} />;\n    case ROUTES.CONTACT_DETAILS:\n      return (\n        <div className={classes.contactDetailsLayout}>\n          <ContactList route={route} />\n          <DrawerMenu>\n            <ContactDetail route={route} />\n          </DrawerMenu>\n        </div>\n      );\n    case ROUTES.LIST_CONTACTS:\n      return <ContactList route={route} />;\n    case ROUTES.ADD_CONTACT:\n      return <ContactForm route={route} />;\n    case ROUTES.EDIT_CONTACT:\n      return (\n        <div className={classes.editContactLayout}>\n          <ContactList route={route} />\n          <DrawerMenu>\n            <ContactForm route={route} />\n          </DrawerMenu>\n        </div>\n      );\n    case ROUTES.HOME:\n    default:\n      return <About route={route} />;\n  }\n}\n\nComponentSelector.propTypes = {\n  route: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default injectSheet(styles)(ComponentSelector);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  MenuItem, Menu, Popover, Button, Position,\n} from '@blueprintjs/core';\n\nconst IconElementList = ({ changeListMode }) => (\n  <Popover\n    content={(\n      <Menu>\n        <MenuItem text=\"List\" onClick={() => changeListMode('list')} />\n        <MenuItem text=\"Card\" onClick={() => changeListMode('card')} />\n        <MenuItem text=\"Table\" onClick={() => changeListMode('table')} />\n      </Menu>\n    )}\n    position={Position.RIGHT_TOP}\n  >\n    <Button icon=\"more\" />\n  </Popover>\n);\n\nIconElementList.propTypes = {\n  changeListMode: PropTypes.func.isRequired,\n};\n\nexport default IconElementList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Navbar, Button, Alignment } from '@blueprintjs/core';\nimport IconElementList from '../../components/IconElementList';\nimport { actions as GlobalActions } from '../../state/global';\nimport { ROUTES } from '../../router/routes';\n\nfunction MyNavbar({\n  route,\n}) {\n  return (\n    <React.Fragment>\n      <Navbar>\n        <Navbar.Group align={Alignment.LEFT}>\n          <Button\n            className=\"bp3-minimal\"\n            icon=\"menu\"\n            onClick={GlobalActions.toggleLeftMenu}\n          />\n          <Navbar.Divider />\n          <Navbar.Heading>Contacts app</Navbar.Heading>\n        </Navbar.Group>\n        <Navbar.Group align={Alignment.RIGHT}>\n          {route.name === ROUTES.LIST_CONTACTS ? (\n            <IconElementList changeListMode={GlobalActions.changeMode} />\n          ) : null}\n        </Navbar.Group>\n      </Navbar>\n    </React.Fragment>\n  );\n}\n\nMyNavbar.propTypes = {\n  route: PropTypes.object.isRequired,\n};\n\nexport default MyNavbar;\n","import React from 'react';\nimport {\n  Toaster, Toast, Position, ProgressBar,\n} from '@blueprintjs/core';\nimport Global, { selectors as GlobalSelectors } from '../../state/global';\nimport { useMultipleStates } from '../../state/helpers/useStateProvider';\n\nfunction Loader() {\n  const { global } = useMultipleStates('Loader', { global: Global }, { global: GlobalSelectors.loader });\n\n  return (\n    <Toaster position={Position.TOP}>\n      {global.loading.state ? (\n        <Toast\n          message={(\n            <div>\n              <span>{`Loading ${global.loading.message}...`}</span>\n              <ProgressBar />\n            </div>\n          )}\n        />\n      ) : null}\n    </Toaster>\n  );\n}\n\nexport default Loader;\n","import React from 'react';\nimport { Toaster, Toast, Position } from '@blueprintjs/core';\nimport { Subscribe } from 'bey';\nimport { state as SnackbarState, actions as SnackbarActions } from '../../state/snackbar';\n\nfunction Snackbar() {\n  return (\n    <Subscribe to={SnackbarState}>\n      {(message) => (\n        <Toaster position={Position.BOTTOM}>\n          {message ? (\n            <Toast\n              message={message || ''}\n              timeout={3000}\n              onDismiss={SnackbarActions.close}\n            />\n          ) : null}\n        </Toaster>\n      )}\n    </Subscribe>\n  );\n}\n\nexport default Snackbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport injectSheet from 'react-jss';\nimport Sidebar from 'react-sidebar';\nimport { Menu, MenuItem } from '@blueprintjs/core';\nimport { actions as HistoryActions } from '../../state/history';\nimport Global, { actions as GlobalActions, selectors as GlobalSelectors } from '../../state/global';\nimport { ROUTES } from '../../router/routes';\nimport { useMultipleStates } from '../../state/helpers/useStateProvider';\n\nconst styles = {\n  sidebar: {\n    sidebar: {\n      background: '#30404d',\n    },\n  },\n  leftMenuRoot: {\n    paddingTop: '4rem',\n    '&.selected': {\n      background: '#5C7080',\n    },\n  },\n};\n\nfunction selectMenuOption(e) {\n  HistoryActions.transitionToMenuOption(e.target.textContent);\n}\n\nfunction InnerMenu({\n  route, smallScreen, classes,\n}) {\n  function handleClick(e) {\n    selectMenuOption(e);\n    if (smallScreen) {\n      GlobalActions.toggleLeftMenu();\n    }\n  }\n\n  return (\n    <Menu className={classes.leftMenuRoot}>\n      <MenuItem\n        active={route.name === ROUTES.HOME}\n        onClick={handleClick}\n        text=\"About\"\n      />\n      <MenuItem\n        active={\n          [ROUTES.LIST_CONTACTS, ROUTES.CONTACT_DETAILS, ROUTES.EDIT_CONTACT].indexOf(route.name) !== -1\n        }\n        onClick={handleClick}\n        text=\"List\"\n      />\n      <MenuItem\n        active={route.name === ROUTES.ADD_CONTACT}\n        onClick={handleClick}\n        text=\"Add Contact\"\n      />\n      <MenuItem\n        active={route.name === ROUTES.ADD_GROUP}\n        onClick={handleClick}\n        text=\"Add Group\"\n      />\n    </Menu>\n  );\n}\n\nconst StyledInnerMenu = injectSheet(styles)(InnerMenu);\n\nfunction LeftMenu(props) {\n  const { global: { isOpen, isSmallScreen } } = useMultipleStates('LeftMenu', {\n    global: Global,\n  }, {\n    global: GlobalSelectors.leftMenu,\n  });\n\n  return (\n    () => {\n      if (isOpen) {\n        if (!isSmallScreen) {\n          return <StyledInnerMenu smallScreen={isSmallScreen} {...props} />;\n        }\n        return (\n          <Sidebar\n            open={isOpen}\n            styles={styles.sidebar}\n            onSetOpen={GlobalActions.toggleLeftMenu}\n            sidebar={<StyledInnerMenu smallScreen={isSmallScreen} {...props} />}\n          >\n            {false}\n          </Sidebar>\n        );\n      }\n      return false;\n    }\n  )();\n}\n\nInnerMenu.propTypes = {\n  route: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  smallScreen: PropTypes.bool.isRequired,\n};\n\nexport default LeftMenu;\n","import React from 'react';\nimport ComponentSelector from './router/ComponentSelector';\nimport Navbar from './containers/Navbar';\nimport Loader from './containers/Loader';\nimport Snackbar from './containers/Snackbar';\nimport LeftMenu from './containers/Menu/LeftMenu';\nimport History from './state/history';\nimport { useMultipleStates } from './state/helpers/useStateProvider';\n\nfunction App({\n  ...rest\n}) {\n  const { history: { route } } = useMultipleStates('App', { history: History });\n  return (\n    <div className=\"bp3-fill\" style={{ backgroundColor: '#30404d', minHeight: '100vh' }}>\n      <Navbar route={route} />\n      <Loader />\n      <div style={{ display: 'flex' }}>\n        <LeftMenu route={route} />\n        <ComponentSelector route={route} {...rest} />\n      </div>\n      <Snackbar />\n    </div>\n  );\n}\n\nApp.propTypes = {\n\n};\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { StateInspector } from 'reinspect';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nlet Root;\n\n// enabling redux-tools\n// eslint-disable-next-line no-underscore-dangle\nif (window.__REDUX_DEVTOOLS_EXTENSION__) {\n  Root = () => (\n    <StateInspector>\n      <App />\n    </StateInspector>\n  );\n} else {\n  Root = () => (\n    <App />\n  );\n}\n\nReactDOM.render(<Root />, document.getElementById('root'));\nregisterServiceWorker();\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          // eslint-disable-next-line no-console\n          console.log('This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://goo.gl/SC7cgQ');\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      // eslint-disable-next-line no-param-reassign\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              // eslint-disable-next-line no-console\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              // eslint-disable-next-line no-console\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      // eslint-disable-next-line no-console\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404\n        || response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      // eslint-disable-next-line no-console\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}