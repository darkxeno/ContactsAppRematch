{"version":3,"sources":["containers/About/index.js","components/FormTextField.js","components/FormMultiSelectField.js","router/routes.js","router/router-config.js","state/snackbar/index.js","state/helpers/loading.js","state/helpers/changelog.js","state/helpers/useStateProvider.js","state/helpers/index.js","state/helpers/modified.js","state/global/index.js","services/index.js","services/groups.js","services/contacts.js","state/contacts/index.js","state/history/actions.js","state/history/index.js","components/ModifiedCheckAlert.js","globals/validators.js","containers/ContactForm/form-validations.js","containers/ContactForm/index.js","components/ContactCard.js","containers/ContactList/index.js","containers/ContactDetail/index.js","containers/GroupForm/form-validations.js","state/groups/index.js","containers/GroupForm/index.js","containers/Menu/DrawerMenu.js","router/ComponentSelector.js","components/IconElementList.js","containers/Navbar/index.js","containers/Loader/index.js","containers/Snackbar/index.js","containers/Menu/LeftMenu.js","App.js","index.js","registerServiceWorker.js"],"names":["injectSheet","cardRoot","margin","cardText1stLine","fontSize","cardText2ndLine","paddingTop","paddingBottom","_ref","classes","react_default","a","createElement","card","interactive","elevation","Elevation","TWO","className","FormTextField","input","label","placeholder","_ref$meta","meta","touched","error","custom","Object","objectWithoutProperties","formGroup","helperText","intent","undefined","inputGroup","assign","defaultProps","contactGroupMultiSelect","&.bp3-popover-target","width","contactGroupTagInputProps","& .bp3-input-ghost","options","_ref$input","value","onChange","indexesOptions","length","forEach","o","multiSelect","shouldDismissPopover","noResults","menuItem","disabled","text","popoverProps","minimal","targetClassName","items","selectedItems","onItemSelect","opt","indexOf","concat","toConsumableArray","splice","tagInputProps","fill","onRemove","index","itemRenderer","_ref2","handleClick","active","key","onClick","tagRenderer","ROUTES","HOME","ADD_CONTACT","LIST_CONTACTS","CONTACT_DETAILS","ADD_GROUP","EDIT_CONTACT","routes","name","path","router","createRouter","defaultRoute","autoCleanup","usePlugin","loggerPlugin","browserPlugin","useHash","forceDeactivate","configureRouter","start","navigate","snackbar","stateCreate","exported","state","actions","setMessage","message","update","displayError","close","loading","stateModule","arguments","localLoading","values","keys","actionName","isSync","originalAction","_plusLoading","asyncToGenerator","regenerator_default","mark","_callee","_len","args","_key","result","_args","wrap","_context","prev","next","console","groupCollapsed","Array","log","groupEnd","GlobalActions","setLoading","get","apply","sent","abrupt","stop","this","changelogs","updateStateDeferred","setStateFunction","oldState","newPartialState","moduleName","futureState","componentName","listeners","changes","push","timeouts","setTimeout","newState","objectSpread","moduleNameStr","change","i","defineProperty","totalChanges","Date","getMilliseconds","diffString","executeUpdateState","t","clearTimeout","useMultipleStates","stateModulesObject","selectorsObject","mergedState","moduleKeys","module","selector","_useState3","useState","_useState4","slicedToArray","setState","handler","currentState","shallowEqual","useEffect","on","off","Error","React","StateInspector","loadingModule","modified","initState","set","setModified","modifiedFlag","changelog","Symbol","previousSnap","previousValue","original","snapshot","updatedAt","now","useStateProvider","_len2","modules","_key2","LIST_MODE","CARD_MODE","mql","window","matchMedia","global","total","mode","menu","left","right","isSmallScreen","matches","addListener","changeMode","SnackbarActions","toggleLeftMenu","setRightMenuVisibility","visible","selectors","loader","drawerMenu","isOpen","leftMenu","firebase","apiKey","authDomain","databaseURL","BASE_URL","getGroupsService","firebaseConnection","database","ref","Promise","resolve","reject","once","groupsDB","groupsDBValue","val","groups","map","id","err","getGroupService","groupDB","groupDBValue","postGroupService","group","post","updateGroupService","others","getContactsService","contactsDB","contactsDBValue","contacts","getContactService","contactDB","contactDBValue","postContactService","contact","updateContactService","deleteContactService","list","current","loadData","_callee2","groupsResponse","newGroups","contactsResponse","newContacts","_context2","t0","groupNames","groupId","join","_callee3","response","_context3","HistoryActions","goBack","_callee4","_context4","loadContactsIfEmpty","saveContact","deleteContact","contactForm","contactList","contactListGlobal","contactDetail","textToRouter","List","About","Add Contact","Add Group","transitionToContactList","_transitionToContactList","ContactsActions","transitionToEditContact","_transitionToEditContact","_x","transitionToContactDetail","_transitionToContactDetail","_x2","transitionToMenuOption","history","back","canDeactivate","initialRoute","getState","params","actionsObject","route","previousRoute","subscribe","ModifiedCheckAlert","isModified","routesToBlock","children","_useState","alertIsOpen","_useState2","handleCancel","useCallback","continue","handleContinue","cancel","routerProvided","toState","fromState","alert_alert","cancelButtonText","confirmButtonText","icon","onCancel","onConfirm","requiredValidation","isEmail","test","isUrl","RegExp","maxLength","validate","errors","email","imgUrl","formCard","padding","formContainer","buttonsContainer","display","justifyContent","isContactModified","ContactsState","components_ModifiedCheckAlert","bey","to","react_final_form_es","onSubmit","initialValues","render","handleSubmit","pristine","invalid","submitting","reset","_ref3","dirty","component","FormMultiSelectField","buttons","type","ContactCard","onEditClick","onDeleteClick","big","loadingClass","Classes","SKELETON","cardContentContainer","cardHeader","alt","src","cardImage","cardTextContainer","cardTextGroup","buttonContainer","button","props","& .bp3-card.bp3-interactive","position","textAlign","height","bottom","color","background","maxHeight","maxWidth","marginRight","Pop","posed","div","hoverable","init","scale","hover","Item","enter","opacity","transition","delay","exit","ContactListCards","components_ContactCard","ContactListItems","react_pose_es","role","onKeyPress","e","contactListItem","style","contactListItemImage","contactListItemAvatar","substring","toUpperCase","contactListItemTextContainer","contactListItemText1stLine","contactListItemText2ndLine","stopPropagation","ContactList","memo","_useMultipleStates","Contacts","Global","ContactsSelectors","contactListRoot","contactListItemsContainer","contactListCardsContainer","&.bp3-tag.bp3-interactive","paddingLeft","backgroundColor","boxShadow","&.bp3-tag.bp3-interactive:hover","&.bp3-tag.bp3-interactive.selected","minWidth","flexDirection","alignSelf","marginLeft","fontWeight","lineHeight","borderRadius","flex","flexWrap","contactDetailRoot","saveGroup","CreateOrEditGroupPage","GroupActions","nextProps","GroupState","form","Component","styles","sidebar","root","content","overlay","_useMultipleStates$gl","GlobalSelectors","react_sidebar_esm","open","pullRight","touch","onSetOpen","contactDetailsLayout","editContactLayout","containers_About","GroupForm","containers_ContactList","Menu_DrawerMenu","ContactDetail","ContactForm","IconElementList","changeListMode","popover","Position","RIGHT_TOP","MyNavbar","Fragment","navbar","Group","align","Alignment","LEFT","Divider","Heading","RIGHT","components_IconElementList","Loader","toaster","TOP","toast","progressBar","Snackbar","SnackbarState","BOTTOM","timeout","onDismiss","leftMenuRoot","&.selected","StyledInnerMenu","smallScreen","target","textContent","selectMenuOption","LeftMenu","App","Root","rest","esm_extends","History","minHeight","Navbar","containers_Loader","Menu_LeftMenu","router_ComponentSelector","containers_Snackbar","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","__REDUX_DEVTOOLS_EXTENSION__","index_es","src_App","ReactDOM","src_Root","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.a58daf9d.chunk.js","sourcesContent":["import React from 'react';\nimport { Card, Elevation } from '@blueprintjs/core';\nimport PropTypes from 'prop-types';\nimport injectSheet from 'react-jss';\n\nconst styles = {\n  cardRoot: {\n    margin: '1em',\n  },\n  cardText1stLine: {\n    fontSize: '14px',\n  },\n  cardText2ndLine: {\n    paddingTop: '16px',\n    fontSize: '14px',\n    paddingBottom: '2em',\n  },\n};\n\nfunction About({\n  classes,\n}) {\n  return (\n    <Card interactive elevation={Elevation.TWO} className={classes.cardRoot}>\n      <h1>Contacts App</h1>\n      <div className={classes.cardText1stLine}>Learning Immer (Bey)</div>\n      <div className={classes.cardText2ndLine}>\n        This is a example app using immer and react context + hooks.\n      </div>\n    </Card>\n  );\n}\n\nAbout.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default injectSheet(styles)(About);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputGroup, FormGroup } from '@blueprintjs/core';\n\nfunction FormTextField({\n  input, label, placeholder, meta: { touched, error }, ...custom\n}) {\n  return (\n    <FormGroup\n      helperText={error}\n      label={label}\n      intent={touched && error ? 'danger' : undefined}\n    >\n      <InputGroup\n        placeholder={placeholder}\n        intent={touched && error ? 'danger' : undefined}\n        {...input}\n        {...custom}\n      />\n    </FormGroup>\n  );\n}\n\nFormTextField.propTypes = {\n  input: PropTypes.object.isRequired,\n  label: PropTypes.string.isRequired,\n  meta: PropTypes.object.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  custom: PropTypes.object,\n};\n\nFormTextField.defaultProps = {\n  custom: {},\n};\n\nexport default FormTextField;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, FormGroup } from '@blueprintjs/core';\nimport { MultiSelect } from '@blueprintjs/select';\nimport injectSheet from 'react-jss';\n\nconst styles = {\n  contactGroupMultiSelect: {\n    '&.bp3-popover-target': {\n      width: '100%',\n    },\n  },\n  contactGroupTagInputProps: {\n    '& .bp3-input-ghost': {\n      fontSize: '14px',\n    },\n  },\n};\n\nfunction FormMultiSelectField({\n  options,\n  input: {\n    value, onChange,\n  },\n  label,\n  meta: { touched, error },\n  classes,\n  ...custom\n}) {\n  const indexesOptions = {};\n  if (options && options.length > 0) {\n    options.forEach((o) => {\n      indexesOptions[o.value] = o;\n    });\n  }\n\n  return (\n    <FormGroup\n      helperText={error}\n      label={label}\n      intent={touched && error ? 'danger' : undefined}\n    >\n      <MultiSelect\n        shouldDismissPopover={false}\n        noResults={<MenuItem disabled text=\"No results.\" />}\n        popoverProps={{ minimal: true, targetClassName: classes.contactGroupMultiSelect }}\n        items={options}\n        selectedItems={value === '' ? [] : value}\n        onItemSelect={(opt) => {\n          if (value.indexOf(opt.value) === -1) {\n            onChange([...value, opt.value]);\n          } else {\n            value.splice(value.indexOf(opt.value), 1);\n            onChange(value);\n          }\n        }}\n        tagInputProps={{\n          placeholder: 'Select contact groups...',\n          fill: true,\n          className: classes.contactGroupTagInputProps,\n          onRemove: (opt, index) => {\n            if (value && value.length > 0) {\n              value.splice(index, 1);\n              onChange(value);\n            }\n          },\n        }}\n        itemRenderer={(opt, { handleClick }) => (\n          <MenuItem\n            active={value.indexOf(opt.value) !== -1}\n            key={`option-${opt.value}`}\n            text={opt.text}\n            onClick={handleClick}\n          />\n        )}\n        tagRenderer={(opt) => indexesOptions[opt].text}\n        {...custom}\n      />\n    </FormGroup>\n  );\n}\n\nFormMultiSelectField.propTypes = {\n  input: PropTypes.object.isRequired,\n  label: PropTypes.string.isRequired,\n  meta: PropTypes.object.isRequired,\n  options: PropTypes.array.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default injectSheet(styles)(FormMultiSelectField);\n","export const ROUTES = {\n  HOME: 'home',\n  ADD_CONTACT: 'addContact',\n  LIST_CONTACTS: 'listContacts',\n  CONTACT_DETAILS: 'contactDetails',\n  ADD_GROUP: 'addGroup',\n  EDIT_CONTACT: 'editContact',\n};\n\nexport const routes = [\n  { name: ROUTES.HOME, path: '/' },\n  { name: ROUTES.ADD_CONTACT, path: '/add' },\n  { name: ROUTES.LIST_CONTACTS, path: '/list' },\n  { name: ROUTES.EDIT_CONTACT, path: '/edit/:id' },\n  { name: ROUTES.CONTACT_DETAILS, path: '/detail/:id' },\n  { name: ROUTES.ADD_GROUP, path: '/group/add' },\n];\n","import createRouter from 'router5';\nimport loggerPlugin from 'router5-plugin-logger';\nimport browserPlugin from 'router5-plugin-browser';\nimport { routes } from './routes';\n\nfunction configureRouter() {\n  const router = createRouter(routes, {\n    defaultRoute: 'home',\n    autoCleanup: false,\n  });\n\n  // Plugins\n  router.usePlugin(\n    loggerPlugin,\n    browserPlugin({\n      useHash: true,\n      forceDeactivate: false,\n    }),\n  );\n\n  return router;\n}\n\nconst router = configureRouter();\nrouter.start();\n\nexport const { navigate } = router;\nexport default router;\n","import { state as stateCreate, update } from 'bey';\n\nconst snackbar = stateCreate(null);\n\nfunction setMessage(message) {\n  update(snackbar, () => message);\n}\n\nfunction displayError(error) {\n  let message = 'Unknown error';\n\n  if (error && error.message) {\n    // eslint-disable-next-line prefer-destructuring\n    message = error.message;\n  } else if (typeof error === 'string') {\n    message = error;\n  }\n  update(snackbar, () => message);\n}\n\nfunction close() {\n  update(snackbar, () => null);\n}\n\nconst exported = {\n  name: 'snackbar',\n  state: snackbar,\n  actions: { setMessage, displayError, close },\n};\nexport const { state, actions } = exported;\nexport default exported;\n","import { update } from 'bey';\nimport { actions as GlobalActions } from '../global';\n\nfunction isAsync(fn) {\n  return fn.isSync !== true;\n  // return fn.constructor.name === 'AsyncFunction';\n}\n\nexport default function loading(stateModule, options = { localLoading: false }) {\n  if (stateModule.actions && Object.values(stateModule.actions).length > 0) {\n    Object.keys(stateModule.actions).forEach((actionName) => {\n      if (\n        stateModule.actions[actionName]\n        && typeof stateModule.actions[actionName] === 'function'\n        && isAsync(stateModule.actions[actionName])\n      ) {\n        const originalAction = stateModule.actions[actionName];\n        /* eslint-disable no-param-reassign */\n        stateModule.actions[actionName] = async function plusLoading(...args) {\n          /* eslint-disable no-console */\n          console.groupCollapsed(`[${stateModule.name}] executing action: ${actionName}()`);\n          console.log(`Using arguments: ${args}`);\n          console.groupEnd();\n          GlobalActions.setLoading(true, stateModule.name);\n          if (options.localLoading) {\n            const loadingBefore = stateModule.state.get().loading;\n            if (loadingBefore !== true) {\n              update(stateModule.state, (state) => {\n                state.loading = true;\n              });\n            }\n          }\n          const result = await originalAction(...args);\n          if (options.localLoading) {\n            const loadingAfter = stateModule.state.get().loading;\n            if (loadingAfter !== false) {\n              update(stateModule.state, (state) => {\n                state.loading = false;\n              });\n            }\n          }\n          GlobalActions.setLoading(false, stateModule.name);\n          return result;\n        };\n      }\n    });\n  }\n\n  return stateModule;\n}\n","import { original } from 'immer';\nimport { diffString } from 'json-diff';\nimport { state as stateCreate, update } from 'bey';\n\nconst changelogs = stateCreate({});\n\nexport default function changelog(stateModule) {\n  if (stateModule.actions && typeof stateModule.actions === 'object') {\n    const key = stateModule.name || Symbol('state module name is not defined');\n\n    changelogs.set({\n      ...changelogs.get(),\n      [key]: { changes: [] },\n    });\n\n    stateModule.state.on(() => {\n      const newState = stateModule.state.get();\n      update(changelogs, (state) => {\n        const previousSnap = state[key].changes[state[key].changes.length - 1];\n        const previousValue = previousSnap ? original(previousSnap).snapshot : undefined;\n        state[key].changes.push({ snapshot: newState, updatedAt: Date.now() });\n        /* eslint-disable no-console */\n        console.groupCollapsed(`[${key}] state changed at: ${new Date().getMilliseconds()}`); // at ${new Date().getMilliseconds()}\n        console.log('FROM:', previousValue);\n        console.log('TO:', newState);\n        console.log('DIFF:');\n        console.log(diffString(previousValue, newState));\n        console.groupEnd();\n      });\n    });\n  }\n\n  return stateModule;\n}\n","\nimport React, { useEffect, useCallback } from 'react';\nimport { useState, StateInspector } from 'reinspect';\nimport shallowEqual from 'fbjs/lib/shallowEqual';\nimport { diffString } from 'json-diff';\n\nReact.createElement(StateInspector);\n\nexport function useMultiple(...stateModules) {\n  const finalState = [];\n\n  if (stateModules && stateModules.length > 0) {\n    stateModules.forEach((module) => {\n      const [state, setState] = useState(module.state.get());\n\n      finalState.push(state);\n\n      const handler = useCallback(() => {\n        const newState = module.state.get();\n        if (newState !== state) {\n          setState(newState);\n        }\n      });\n\n      useEffect(() => {\n        module.state.on(handler);\n        return function cleanup() {\n          module.state.off(handler);\n        };\n      });\n    });\n\n    return finalState;\n  }\n  throw new Error('useMultiple requires at least one argument.');\n}\n\n\nfunction updateStateDeferred(setStateFunction, oldState, newPartialState, moduleName, futureState, componentName, listeners) {\n  /* eslint-disable no-param-reassign */\n  futureState.changes.push({ oldState, newPartialState, moduleName });\n  let timeouts = [];\n  timeouts.push(setTimeout(() => {\n    if (futureState.changes.length > 0) {\n      let newState = { ...futureState.oldState };\n      let moduleNameStr = '';\n      futureState.changes.forEach((change, i) => {\n        moduleNameStr += change.moduleName + ((i !== futureState.changes.length - 1) ? ' + ' : '');\n        newState = { ...newState, [change.moduleName]: change.newPartialState };\n      });\n      executeUpdateState(setStateFunction, oldState, newState, moduleNameStr, futureState.changes.length, componentName, listeners);\n      futureState.oldState = newState;\n      futureState.changes = [];\n      timeouts.forEach((t) => clearTimeout(t));\n      timeouts = [];\n    }\n  }, 0));\n}\n\nfunction executeUpdateState(setStateFunction, oldState, newState, moduleName, totalChanges, componentName, listeners) {\n  /* eslint-disable no-console */\n  console.groupCollapsed(`[${moduleName}] rendering [${totalChanges}] changes from ${componentName} at: ${new Date().getMilliseconds()}`);\n  console.log('NEW STATE: ', newState);\n  console.log(diffString(oldState, newState));\n  console.groupEnd();\n  if (listeners > 0) {\n    return setStateFunction(newState);\n  }\n  return false;\n}\n\nexport function useMultipleStates(componentName, stateModulesObject, selectorsObject = {}) {\n  let mergedState = {};\n\n  if (stateModulesObject && typeof stateModulesObject === 'object' && Object.keys(stateModulesObject).length > 0) {\n    const moduleKeys = Object.keys(stateModulesObject);\n    moduleKeys.forEach((key) => {\n      const module = stateModulesObject[key];\n      const state = module.state.get();\n      const selector = selectorsObject[key];\n      mergedState = { ...mergedState, [module.name]: (selector) ? selector(state) : state };\n    });\n\n    const [state, setState] = useState(mergedState, componentName);\n\n    const futureState = { oldState: state, newState: {}, changes: [] };\n    let listeners = 0;\n    moduleKeys.forEach((key) => {\n      const module = stateModulesObject[key];\n      const selector = selectorsObject[key];\n\n      const handler = () => {\n        const currentState = module.state.get();\n        const newState = (selector) ? selector(currentState) : currentState;\n        // console.log('updateStateDeferred', module.name ,new Date().getMilliseconds());\n        if (!shallowEqual(newState, state[module.name])) {\n          // console.log('updateStateDeferred changed',new Date().getMilliseconds());\n          updateStateDeferred(setState, state, newState, module.name, futureState, componentName, listeners);\n        }\n      };\n\n      useEffect(() => {\n        listeners += 1;\n        module.state.on(handler);\n        return function cleanup() {\n          listeners -= 1;\n          module.state.off(handler);\n        };\n      });\n    });\n\n    return state;\n  }\n  throw new Error('useMultipleStates requires at least 2 arguments: componentName (string), stateModules (object) indexed by key.');\n}\n\nexport default function useStateProvider(stateModule) {\n  if (stateModule && typeof stateModule === 'object' && stateModule.state && typeof stateModule.state === 'object') {\n    stateModule.state.useState = function useStateHook(...modules) {\n      if (modules) {\n        return useMultipleStates(...modules);\n      }\n      return useMultipleStates(stateModule);\n    };\n  }\n\n  return stateModule;\n}\n","import loadingModule from './loading';\nimport modifiedModule from './modified';\nimport changelogModule from './changelog';\nimport contextModule from './context';\nimport useStateProviderModule from './useStateProvider';\n\nexport const loading = loadingModule;\nexport const modified = modifiedModule;\nexport const changelog = changelogModule;\nexport const addContext = contextModule;\nexport const useStateProvider = useStateProviderModule;\n","import { update } from 'bey';\n\nexport default function modified(stateModule) {\n  /* eslint-disable no-param-reassign */\n  if (stateModule.actions && typeof stateModule.actions === 'object') {\n    const initState = stateModule.state.get();\n    stateModule.state.set({ ...initState, modified: false });\n    stateModule.actions.setModified = function setModified(modifiedFlag) {\n      const currentState = stateModule.state.get();\n      if (currentState.modified !== modifiedFlag) {\n        update(stateModule.state, (state) => {\n          state.modified = modifiedFlag;\n        });\n      }\n    };\n  }\n\n  return stateModule;\n}\n","import { state as stateCreate, update } from 'bey';\nimport { actions as SnackbarActions } from '../snackbar';\nimport { changelog } from '../helpers';\n\nconst LIST_MODE = 'list';\nconst CARD_MODE = 'card';\n\nconst mql = window.matchMedia('(min-width: 800px)');\n\nconst global = stateCreate({\n  loading: { state: false, total: 0, message: null },\n  mode: LIST_MODE,\n  menu: {\n    left: true,\n    right: true,\n  },\n  isSmallScreen: !mql.matches,\n});\n\nmql.addListener(() => {\n  update(global, (state) => {\n    state.isSmallScreen = !mql.matches;\n  });\n});\n\nfunction setLoading(loading, message) {\n  update(global, (state) => {\n    if (loading) {\n      state.loading.total += 1;\n    } else {\n      state.loading.total -= 1;\n    }\n\n    state.loading.state = state.loading.total > 0;\n    state.loading.message = message;\n  });\n}\n\nfunction changeMode(mode) {\n  if (mode === LIST_MODE || mode === CARD_MODE) {\n    update(global, (state) => {\n      state.mode = mode;\n    });\n    SnackbarActions.setMessage(`Mode changed to: ${mode}`);\n  }\n}\n\nfunction toggleLeftMenu() {\n  update(global, (state) => {\n    state.menu.left = !state.menu.left;\n  });\n}\n\nfunction setRightMenuVisibility(visible) {\n  update(global, (state) => {\n    state.menu.right = visible;\n  });\n}\n\nfunction loader(state) {\n  return { loading: { state :state.loading.state, message: state.loading.message }};\n}\n\nfunction drawerMenu(state) {\n  return { isOpen: state.menu.right, isSmallScreen: state.isSmallScreen };\n}\n\nfunction leftMenu(state) {\n  return { isOpen: state.menu.left, isSmallScreen: state.isSmallScreen };\n}\n\nconst exported = {\n  name: 'global',\n  state: global,\n  actions: {\n    setLoading, changeMode, toggleLeftMenu, setRightMenuVisibility,\n  },\n  selectors: {\n    loader, drawerMenu, leftMenu,\n  },\n};\nexport const { state, actions, selectors } = exported;\nexport default changelog(exported);\n","import * as firebase from 'firebase';\n\nconst config = {\n  apiKey: 'AIzaSyB1GATIyuA6FNnAUMBz0kXJ62EvlSWx99o',\n  authDomain: 'redux-contacts-app.firebaseapp.com',\n  databaseURL: 'https://redux-contacts-app.firebaseio.com/',\n};\n\nfirebase.initializeApp(config);\n\nexport default firebase;\n","import firebase from './index';\n\nconst BASE_URL = '/groups';\n\nexport function getGroupsService() {\n  const firebaseConnection = firebase.database().ref(`${BASE_URL}`);\n  return new Promise((resolve, reject) => {\n    firebaseConnection.once(\n      'value',\n      (groupsDB) => {\n        const groupsDBValue = groupsDB.val();\n        const groups = [];\n        Object.keys(groupsDBValue).map((id) => groups.push({\n          id,\n          ...groupsDBValue[id],\n        }));\n        return resolve(groups);\n      },\n      (err) => reject(err),\n    );\n  });\n}\n\nexport function getGroupService(id) {\n  const firebaseConnection = firebase.database().ref(`${BASE_URL}/${id}`);\n  return new Promise((resolve, reject) => {\n    firebaseConnection.once(\n      'value',\n      (groupDB) => {\n        const groupDBValue = groupDB.val();\n        groupDBValue.id = id;\n        return resolve(groupDBValue);\n      },\n      (err) => reject(err),\n    );\n  });\n}\n\nexport function postGroupService(group) {\n  const firebaseConnection = firebase.database().ref(`${BASE_URL}`);\n  return new Promise((resolve, reject) => {\n    const post = firebaseConnection.push();\n    post.set(group, (err) => {\n      if (err) {\n        return reject(err);\n      }\n      return resolve({\n        id: post.key,\n        ...group,\n      });\n    });\n  });\n}\n\nexport function updateGroupService({ id, ...others }) {\n  const firebaseConnection = firebase.database().ref(`${BASE_URL}/${id}`);\n  return new Promise((resolve, reject) => {\n    firebaseConnection.set({ ...others }, (err) => {\n      if (err) {\n        return reject(err);\n      }\n      return resolve({\n        id,\n        ...others,\n      });\n    });\n  });\n}\n\nexport function deleteGroupService(id) {\n  const firebaseConnection = firebase.database().ref(`${BASE_URL}/${id}`);\n  return new Promise((resolve, reject) => {\n    firebaseConnection.set(null, (err) => {\n      if (err) {\n        return reject(err);\n      }\n      return resolve({ id });\n    });\n  });\n}\n","import firebase from './index';\n\nconst BASE_URL = '/jony';\n\nexport function getContactsService() {\n  const firebaseConnection = firebase.database().ref(`${BASE_URL}`);\n  return new Promise((resolve, reject) => {\n    firebaseConnection.once(\n      'value',\n      (contactsDB) => {\n        const contactsDBValue = contactsDB.val();\n        const contacts = [];\n        Object.keys(contactsDBValue).map((id) => contacts.push({\n          id,\n          ...contactsDBValue[id],\n        }));\n        return resolve(contacts);\n      },\n      (err) => reject(err),\n    );\n  });\n}\n\nexport function getContactService(id) {\n  const firebaseConnection = firebase.database().ref(`${BASE_URL}/${id}`);\n  return new Promise((resolve, reject) => {\n    firebaseConnection.once(\n      'value',\n      (contactDB) => {\n        const contactDBValue = contactDB.val();\n        if (contactDBValue) {\n          contactDBValue.id = id;\n        }\n        return resolve(contactDBValue);\n      },\n      (err) => reject(err),\n    );\n  });\n}\n\nexport function postContactService(contact) {\n  const firebaseConnection = firebase.database().ref(`${BASE_URL}`);\n  return new Promise((resolve, reject) => {\n    const post = firebaseConnection.push();\n    post.set(contact, (err) => {\n      if (err) {\n        return reject(err);\n      }\n      return resolve({\n        id: post.key,\n        ...contact,\n      });\n    });\n  });\n}\n\nexport function updateContactService({ id, ...others }) {\n  const firebaseConnection = firebase.database().ref(`${BASE_URL}/${id}`);\n  return new Promise((resolve, reject) => {\n    firebaseConnection.set({ ...others }, (err) => {\n      if (err) {\n        return reject(err);\n      }\n      return resolve({\n        id,\n        ...others,\n      });\n    });\n  });\n}\n\nexport function deleteContactService(id) {\n  const firebaseConnection = firebase.database().ref(`${BASE_URL}/${id}`);\n  return new Promise((resolve, reject) => {\n    firebaseConnection.set(null, (err) => {\n      if (err) {\n        return reject(err);\n      }\n      return resolve({ id });\n    });\n  });\n}\n","import { state as stateCreate, update } from 'bey';\nimport { actions as SnackbarActions } from '../snackbar';\nimport { getGroupsService } from '../../services/groups';\nimport {\n  getContactsService,\n  getContactService,\n  updateContactService,\n  postContactService,\n  deleteContactService,\n} from '../../services/contacts';\nimport HistoryActions from '../history/actions';\nimport {\n  loading, modified, changelog, useStateProvider,\n} from '../helpers';\n\nconst contacts = stateCreate({\n  list: {},\n  groups: {},\n  current: {},\n});\n\nasync function loadContactsIfEmpty() {\n  const contactsArray = Object.values(contacts.get().list);\n  if (contactsArray.length === 0) {\n    loadData();\n  }\n}\n\nasync function loadData(id) {\n  // TODO: move this to a service layer\n\n  const groupsResponse = await getGroupsService();\n  const newGroups = {};\n\n  groupsResponse.forEach((group) => {\n    newGroups[group.id] = group;\n  });\n\n  let contactsResponse;\n  if (id) {\n    contactsResponse = [await getContactService(id)];\n  } else {\n    contactsResponse = await getContactsService();\n  }\n\n  const newContacts = {};\n\n  contactsResponse.forEach((contact) => {\n    if (contact) {\n      if (contact.groups && contact.groups.length > 0) {\n        /* eslint-disable-next-line no-param-reassign */\n        contact.groupNames = contact.groups\n          .map((groupId) => {\n            if (newGroups[groupId]) {\n              return newGroups[groupId].name;\n            }\n            return '';\n          })\n          .join(', ');\n      }\n\n      newContacts[contact.id] = contact;\n    }\n  });\n\n  // TODO: move until here to a service layer\n\n  update(contacts, (state) => {\n    if (id) {\n      state.current = newContacts[id] || {};\n      // state.modified = false;\n    } else {\n      state.list = newContacts;\n    }\n\n    state.groups = newGroups;\n  });\n}\n\nasync function saveContact(contact) {\n  try {\n    let response;\n\n    if (contact.id) {\n      response = await updateContactService(contact);\n    } else {\n      response = await postContactService(contact);\n    }\n\n    // eslint-disable-next-line no-console\n    console.log('current contact updated:', response);\n\n    update(contacts, (state) => {\n      state.current = contact;\n      state.modified = false;\n    });\n\n    SnackbarActions.setMessage(`Contact ${contact.id ? 'updated' : 'created'} successfully`);\n  } catch (error) {\n    SnackbarActions.displayError(error);\n  }\n  HistoryActions.goBack();\n}\n\nasync function deleteContact(id) {\n  try {\n    if (id) {\n      await deleteContactService(id);\n      update(contacts, (state) => {\n        state.current = {};\n      });\n\n      SnackbarActions.setMessage('Contact deleted successfully');\n      loadData();\n    }\n  } catch (error) {\n    SnackbarActions.displayError(error);\n  }\n}\n\nfunction contactForm(state) {\n  return { current: state.current, groups: state.groups };\n}\n\nfunction contactDetail(state) {\n  return { current: state.current, loading: state.loading };\n}\n\nfunction contactList(state) {\n  return { current: state.current, list: state.list, groups: state.groups };\n}\n\nfunction contactListGlobal(state) {\n  return { mode: state.mode };\n}\n\nconst exported = {\n  name: 'contacts',\n  state: contacts,\n  actions: {\n    loadData, loadContactsIfEmpty, saveContact, deleteContact,\n  },\n  selectors: {\n    contactForm, contactList, contactListGlobal, contactDetail,\n  },\n};\n\nexport const { actions, state, selectors } = exported;\nexport default useStateProvider(changelog(modified(loading(exported, { localLoading: true }))));\n","import { actions as GlobalActions } from '../global';\nimport { actions as ContactsActions } from '../contacts';\nimport router, { navigate } from '../../router/router-config';\nimport { ROUTES } from '../../router/routes';\n\nconst textToRouter = {\n  List: ROUTES.LIST_CONTACTS,\n  About: ROUTES.HOME,\n  'Add Contact': ROUTES.ADD_CONTACT,\n  'Add Group': ROUTES.ADD_GROUP,\n};\n\nconst actions = {\n  transitionToContactList: async () => {\n    await ContactsActions.loadData();\n    navigate(ROUTES.LIST_CONTACTS);\n  },\n  transitionToEditContact: async ({ id }) => {\n    await [ContactsActions.loadData(id), ContactsActions.loadContactsIfEmpty()];\n    GlobalActions.setRightMenuVisibility(true);\n    navigate(ROUTES.EDIT_CONTACT, { id });\n  },\n  transitionToContactDetail: async ({ id }) => {\n    await [ContactsActions.loadData(id), ContactsActions.loadContactsIfEmpty()];\n    // async rendering example\n    // ContactsActions.loadData(id);\n    // setTimeout(() => ContactsActions.loadContactsIfEmpty(), 2000);\n    GlobalActions.setRightMenuVisibility(true);\n    navigate(ROUTES.CONTACT_DETAILS, { id });\n  },\n  transitionToMenuOption: (text) => {\n    if (actions[textToRouter[text]]) {\n      actions[textToRouter[text]]();\n    } else {\n      navigate(textToRouter[text]);\n    }\n  },\n  goBack: () => window.history.back(),\n  router: {\n    canDeactivate: router.canDeactivate,\n  },\n};\n\nactions[ROUTES.EDIT_CONTACT] = actions.transitionToEditContact;\nactions[ROUTES.CONTACT_DETAILS] = actions.transitionToContactDetail;\nactions[ROUTES.LIST_CONTACTS] = actions.transitionToContactList;\n\nexport default actions;\n","import { state as stateCreate, update } from 'bey';\nimport router from '../../router/router-config';\nimport actionsObject from './actions';\n\nconst initialRoute = router.getState();\nconst { name, params } = initialRoute;\n\nif (actionsObject[name]) {\n  actionsObject[name](params);\n}\n\nconst history = stateCreate({\n  route: initialRoute,\n  previousRoute: {},\n});\n\nconst exported = {\n  name: 'history',\n  state: history,\n  actions: actionsObject,\n};\n\nrouter.subscribe((change) => {\n  update(history, (state) => {\n    // console.log('History route changed:', change);\n    state.route = change.route;\n    state.previousRoute = change.previousRoute;\n  });\n});\n\nexport const { state, actions } = exported;\nexport default exported;\n","import React, { useState, useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Alert } from '@blueprintjs/core';\nimport { actions as HistoryActions } from '../state/history';\n\nfunction ModifiedCheckAlert({\n  isModified, routesToBlock, children,\n}) {\n  const [state, setState] = useState({ alertIsOpen: false });\n\n  const handleCancel = useCallback(() => {\n    state.continue();\n    setState({ alertIsOpen: false });\n  });\n\n  const handleContinue = useCallback(() => {\n    state.cancel();\n    setState({ alertIsOpen: false });\n  });\n\n  useEffect(() => {\n    if (HistoryActions.router) {\n      // eslint-disable-next-line no-unused-vars\n      const canDeactivate = (routerProvided) => (toState, fromState) => {\n        const isModifiedVal = isModified();\n        if (isModifiedVal) {\n          return new Promise((resolve, reject) => {\n            setState({ alertIsOpen: true, continue: reject, cancel: resolve });\n          });\n        }\n        return true;\n      };\n\n      routesToBlock.forEach((route) => {\n        HistoryActions.router.canDeactivate(route, canDeactivate);\n      });\n    }\n  });\n\n  const { alertIsOpen } = state;\n  return (\n    <div>\n      <Alert\n        cancelButtonText=\"Cancel\"\n        confirmButtonText=\"Continue\"\n        icon=\"trash\"\n        intent=\"danger\"\n        isOpen={alertIsOpen}\n        onCancel={handleCancel}\n        onConfirm={handleContinue}\n      >\n        <p>Are you sure you want leave? Your changes will be lost.</p>\n      </Alert>\n      {children}\n    </div>\n  );\n}\n\nModifiedCheckAlert.propTypes = {\n  isModified: PropTypes.func.isRequired,\n  routesToBlock: PropTypes.array.isRequired,\n  children: PropTypes.object.isRequired,\n};\n\nexport default ModifiedCheckAlert;\n","export const requiredValidation = (value) => value !== undefined && value !== null && value !== '';\n\nexport const isEmail = (value) => {\n  if (value) {\n    const regExp = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i; // eslint-disable-line\n    return regExp.test(value);\n  }\n  return true;\n};\n\nexport const isUrl = (value) => {\n  if (value) {\n    const regExp = new RegExp('^(?:(?:https?|ftp)://)(?:S+(?::S*)?@)?(?:(?!10(?:.d{1,3}){3})(?!127(?:.d{1,3}){3})(?!169.254(?:.d{1,3}){2})(?!192.168(?:.d{1,3}){2})(?!172.(?:1[6-9]|2d|3[0-1])(?:.d{1,3}){2})(?:[1-9]d?|1dd|2[01]d|22[0-3])(?:.(?:1?d{1,2}|2[0-4]d|25[0-5])){2}(?:.(?:[1-9]d?|1dd|2[0-4]d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)(?:.(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)*(?:.(?:[a-z\\u00a1-\\uffff]{2,})))(?::d{2,5})?(?:/[^s]*)?');\n    return regExp.test(value);\n  }\n  return true;\n};\n\nexport const maxLength = (value, length) => value && value.length > length;\n","import { requiredValidation, isEmail, isUrl } from '../../globals/validators';\n\nexport default function validate(values) {\n  const errors = {};\n  if (!requiredValidation(values.email)) {\n    errors.email = 'Email is required';\n  } else if (!isEmail(values.email)) {\n    errors.email = 'Email format is incorrect';\n  }\n  if (!requiredValidation(values.name)) {\n    errors.name = 'Name is Required';\n  }\n  if (!isUrl(values.imgUrl)) {\n    errors.imgUrl = 'Invalid url';\n  }\n  return errors;\n}\n","import React, { useCallback } from 'react';\nimport { Subscribe } from 'bey';\nimport injectSheet from 'react-jss';\nimport PropTypes from 'prop-types';\nimport { Form, Field, FormSpy } from 'react-final-form';\nimport {\n  Button, Card, Elevation,\n} from '@blueprintjs/core';\nimport FormTextField from '../../components/FormTextField';\nimport FormMultiSelectField from '../../components/FormMultiSelectField';\nimport ModifiedCheckAlert from '../../components/ModifiedCheckAlert';\nimport validate from './form-validations';\nimport { actions as ContactsActions, selectors, state as ContactsState } from '../../state/contacts';\nimport { ROUTES } from '../../router/routes';\n\n\nconst styles = {\n  formCard: {\n    width: '300px',\n    margin: '0.5em 1em',\n    padding: '1em',\n  },\n  formContainer: {\n    paddingTop: '16px',\n  },\n  buttonsContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n};\n\nfunction CreateOrEditContactPage({\n  classes, route,\n}) {\n  const isContactModified = useCallback(() => ContactsState.get().modified);\n\n  return (\n    <ModifiedCheckAlert\n      isModified={isContactModified}\n      routesToBlock={[ROUTES.ADD_CONTACT, ROUTES.EDIT_CONTACT]}\n    >\n      <Subscribe to={ContactsState} on={selectors.contactForm}>\n        {(contacts) => (\n          <Form\n            onSubmit={ContactsActions.saveContact}\n            validate={validate}\n            initialValues={route.params.id ? contacts.current : {}}\n            render={({\n              handleSubmit, pristine, invalid, submitting, reset,\n            }) => (\n              <Card\n                interactive\n                elevation={Elevation.TWO}\n                className={classes.formCard}\n              >\n                <form className={classes.formContainer} onSubmit={handleSubmit}>\n                  <FormSpy\n                    onChange={({ dirty }) => {\n                      ContactsActions.setModified(dirty && !submitting);\n                    }}\n                  />\n                  <Field\n                    name=\"name\"\n                    label=\"Name\"\n                    placeholder=\"Name\"\n                    component={FormTextField}\n                  />\n                  <Field\n                    name=\"email\"\n                    label=\"Email\"\n                    placeholder=\"Email\"\n                    component={FormTextField}\n                  />\n                  <Field\n                    name=\"phoneNumber\"\n                    label=\"Phone number\"\n                    placeholder=\"Phone number\"\n                    component={FormTextField}\n                  />\n                  <Field\n                    name=\"imgUrl\"\n                    label=\"Profile image url\"\n                    placeholder=\"Profile image url\"\n                    component={FormTextField}\n                  />\n                  <Field\n                    name=\"groups\"\n                    component={FormMultiSelectField}\n                    label=\"Groups\"\n                    options={Object.values(contacts.groups).map((group) => ({\n                      value: group.id,\n                      text: group.name,\n                    }))}\n                  />\n                  <div className={classes.buttonsContainer}>\n                    <Button\n                      text=\"Save contact\"\n                      icon=\"floppy-disk\"\n                      intent=\"success\"\n                      type=\"submit\"\n                      disabled={pristine || submitting || invalid}\n                    />\n                    <Button\n                      text=\"Reset values\"\n                      disabled={pristine || submitting}\n                      icon=\"refresh\"\n                      intent=\"danger\"\n                      onClick={reset}\n                    />\n                  </div>\n                </form>\n              </Card>\n            )}\n          />\n        )}\n      </Subscribe>\n    </ModifiedCheckAlert>\n  );\n}\n\nCreateOrEditContactPage.propTypes = {\n  route: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default injectSheet(styles)(CreateOrEditContactPage);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport injectSheet from 'react-jss';\nimport {\n  Button, Card, Elevation, Classes,\n} from '@blueprintjs/core';\n\nconst styles = {\n  // eslint-disable-next-line arrow-body-style\n  cardRoot: (props) => {\n    return ({\n      width: props.big ? 'auto' : '300px',\n      padding: props.big ? 'inherit' : '0px',\n      '& .bp3-card.bp3-interactive': {\n        margin: '1em',\n        padding: 0,\n      },\n    });\n  },\n  cardContentContainer: {\n    position: 'relative',\n    textAlign: 'center',\n    height: 300,\n    width: 300,\n  },\n  cardHeader: {\n    position: 'absolute',\n    bottom: '0px',\n    right: '0px',\n    left: '0px',\n    padding: '8px',\n    margin: '0',\n    color: 'white',\n    background: 'rgba(0, 0, 0, 0.54)',\n  },\n  cardImage: {\n    maxHeight: 300,\n    maxWidth: 300,\n  },\n  cardTextContainer: {\n    fontSize: '12pt',\n    padding: '8px',\n  },\n  cardTextGroup: {\n    fontSize: '10pt',\n    color: 'grey',\n  },\n  buttonContainer: {\n    padding: '8px',\n    position: 'relative',\n  },\n  button: {\n    marginRight: '8px',\n  },\n};\n\nconst ContactCard = ({\n  // eslint-disable-next-line no-unused-vars\n  contact, onEditClick, onDeleteClick, big, loading, classes,\n}) => {\n  const {\n    name, imgUrl, email, groupNames,\n  } = contact;\n  const loadingClass = loading ? Classes.SKELETON : '';\n  return (\n    <Card\n      interactive\n      elevation={Elevation.TWO}\n      className={classes.cardRoot}\n    >\n      <div className={classes.cardContentContainer}>\n        <h1 className={classes.cardHeader}>\n          <span className={loadingClass}>{name || '...'}</span>\n        </h1>\n        <img\n          alt=\"contact\"\n          src={ (name) ? imgUrl || 'http://i.imgur.com/mbZIBzc.png' : 'http://cdn.osxdaily.com/wp-content/uploads/2013/09/deleted-contacts.jpg' }\n          className={classes.cardImage}\n        />\n      </div>\n      <div className={classes.cardTextContainer}>\n        <span className={loadingClass}>{email || '...'}</span>\n        <br />\n        <span className={`${classes.cardTextGroup} ${loadingClass}`}>\n          {groupNames || 'Without group'}\n        </span>\n      </div>\n      <div className={classes.buttonContainer}>\n        <Button onClick={onEditClick} text=\"Edit\" className={classes.button} />\n        <Button onClick={onDeleteClick} text=\"Delete\" className={classes.button} />\n      </div>\n    </Card>\n  );\n};\n\nContactCard.propTypes = {\n  contact: PropTypes.object.isRequired,\n  onEditClick: PropTypes.func.isRequired,\n  onDeleteClick: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  big: PropTypes.bool,\n  loading: PropTypes.bool,\n};\n\nContactCard.defaultProps = {\n  big: false,\n  loading: false,\n};\n\nexport default injectSheet(styles)(ContactCard);\n","import React from 'react';\nimport posed, { PoseGroup } from 'react-pose';\nimport PropTypes from 'prop-types';\nimport injectSheet from 'react-jss';\nimport { Button } from '@blueprintjs/core';\nimport ContactCard from '../../components/ContactCard';\nimport { useMultipleStates } from '../../state/helpers/useStateProvider';\nimport Contacts, { actions as ContactsActions, selectors as ContactsSelectors } from '../../state/contacts';\nimport Global from '../../state/global';\nimport { actions as HistoryActions } from '../../state/history';\n\nconst styles = {\n  contactListItem: {\n    '&.bp3-tag.bp3-interactive': {\n      display: 'flex',\n      justifyContent: 'space-between',\n      height: '60px',\n      paddingLeft: '8px',\n      margin: '3px',\n      backgroundColor: '#394b59',\n      color: 'white',\n      boxShadow: '0 0 0 1px rgba(16, 22, 26, 0.2), 0 0 0 rgba(16, 22, 26, 0), 0 1px 1px rgba(16, 22, 26, 0.4)',\n    },\n    '&.bp3-tag.bp3-interactive:hover': {\n      background: '#202B33',\n    },\n    '&.bp3-tag.bp3-interactive.selected': {\n      background: '#5C7080',\n    },\n  },\n  contactListItemImage: {\n    maxWidth: 50,\n    minWidth: 50,\n    maxHeight: 50,\n  },\n  contactListItemTextContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignSelf: 'center',\n    marginLeft: '2rem',\n  },\n  contactListItemText1stLine: {\n    fontWeight: 'bolder',\n  },\n  contactListItemText2ndLine: {\n    fontSize: '12px',\n  },\n  contactListItemAvatar: {\n    width: '50px',\n    height: '50px',\n    fontSize: '35px',\n    backgroundColor: '#182026',\n    color: 'white',\n    textAlign: 'center',\n    lineHeight: '50px',\n    borderRadius: '50px',\n  },\n  contactListRoot: {\n    margin: '0.2em 0 0 0',\n    display: 'flex',\n    flex: '1 0 auto',\n    flexDirection: 'row',\n  },\n  contactListItemsContainer: {\n    display: 'flex',\n    flex: '1 0 auto',\n    flexDirection: 'column',\n  },\n  contactListCardsContainer: {\n    flexWrap: 'wrap',\n  },\n};\n\nconst Pop = posed.div({\n  hoverable: true,\n  init: { scale: 1 },\n  hover: { scale: 1.2 },\n});\n\nconst Item = posed.div({\n  enter: {\n    opacity: 1,\n    transition: ({ i }) => ({ delay: i * 50 }),\n  },\n  exit: { opacity: 0 },\n  props: { i: 0 },\n});\n\nfunction ContactListCards(props) {\n  return props.list.map((contact) => (\n    <ContactCard\n      key={`contact-${contact.id}`}\n      contact={contact}\n      onEditClick={() => HistoryActions.transitionToEditContact({ id: contact.id })}\n      onDeleteClick={() => ContactsActions.deleteContact(contact.id)}\n    />\n  ));\n}\n\nfunction ContactListItems({\n  classes, list, route,\n}) {\n  return (\n    <PoseGroup>\n      {list.map((contact, i) => (\n        <Item key={`contact-${contact.id}`} id={contact.id} i={i}>\n          <div\n            role=\"presentation\"\n            onKeyPress={(e) => (e.key === 'Enter') ? HistoryActions.transitionToContactDetail({ id: contact.id }) : false}\n            onClick={() => HistoryActions.transitionToContactDetail({ id: contact.id })}\n            className={`bp3-tag bp3-interactive ${classes.contactListItem} ${\n              route.params.id === contact.id ? 'selected' : ''\n            }`}\n          >\n            <div style={{ display: 'flex' }}>\n              {contact.imgUrl ? (\n                <Pop>\n                  <img\n                    src={contact.imgUrl}\n                    alt={contact.name}\n                    className={classes.contactListItemImage}\n                  />\n                </Pop>\n              ) : (\n                <Pop className={classes.contactListItemAvatar}>\n                  { contact.name.substring(0, 1).toUpperCase() }\n                </Pop>\n              )}\n              <div className={classes.contactListItemTextContainer}>\n                <div className={classes.contactListItemText1stLine}>{contact.name}</div>\n                <div className={classes.contactListItemText2ndLine}>{contact.groupNames || 'Without group'}</div>\n              </div>\n            </div>\n            <Pop>\n              <Button\n                icon=\"delete\"\n                onClick={(e) => {\n                  ContactsActions.deleteContact(contact.id);\n                  e.stopPropagation();\n                }}\n              />\n            </Pop>\n          </div>\n        </Item>\n      ))}\n    </PoseGroup>\n  );\n}\n\nconst ContactList = React.memo((props) => {\n  const { contacts, global } = useMultipleStates('ContactList', {\n    contacts: Contacts,\n    global: Global,\n  }, {\n    contacts: ContactsSelectors.contactList,\n    global: ContactsSelectors.contactListGlobal,\n  });\n\n  return (\n    <div className={props.classes.contactListRoot}>\n      {global.mode === 'list' ? (\n        <div className={props.classes.contactListItemsContainer}>\n          <ContactListItems {...props} list={Object.values(contacts.list)} />\n        </div>\n      ) : (\n        <div className={props.classes.contactListCardsContainer}>\n          <ContactListCards {...props} list={Object.values(contacts.list)} />\n        </div>\n      )}\n    </div>\n  );\n});\n\nContactListCards.propTypes = {\n  list: PropTypes.array.isRequired,\n  route: PropTypes.object.isRequired,\n};\n\nContactListItems.propTypes = {\n  list: PropTypes.array.isRequired,\n  classes: PropTypes.object.isRequired,\n  route: PropTypes.object.isRequired,\n};\n\nContactList.propTypes = {\n  classes: PropTypes.object.isRequired,\n  route: PropTypes.object.isRequired,\n};\n\nexport default injectSheet(styles)(ContactList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport injectSheet from 'react-jss';\nimport ContactCard from '../../components/ContactCard';\nimport Contacts, { actions as ContactsActions, selectors as ContactsSelectors } from '../../state/contacts';\nimport { actions as HistoryActions } from '../../state/history';\nimport { useMultipleStates } from '../../state/helpers/useStateProvider';\n\nconst styles = {\n  contactDetailRoot: {\n    margin: '0.5em 1em',\n    width: '300px',\n  },\n};\n\nfunction ContactPage(props) {\n  const { contacts } = useMultipleStates('ContactDetail', { contacts: Contacts }, { contacts: ContactsSelectors.contactDetail });\n\n  return (\n    <div className={props.classes.contactDetailRoot}>\n      <ContactCard\n        big\n        contact={contacts.current}\n        loading={contacts.loading}\n        onEditClick={() => HistoryActions.transitionToEditContact(props.route.params)}\n        onDeleteClick={() => ContactsActions.deleteContact(props.route.params.id)}\n      />\n    </div>\n  );\n}\n\nContactPage.propTypes = {\n  route: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default injectSheet(styles)(ContactPage);\n","import { requiredValidation, maxLength } from '../../globals/validators';\n\nexport default function validate(values) {\n  const errors = {};\n  if (!requiredValidation(values.name)) {\n    errors.name = 'Name is required';\n  } else if (!maxLength(values.name, 4)) {\n    errors.name = 'Name has to 4 o more characters';\n  }\n  return errors;\n}\n","import { state as stateCreate, update } from 'bey';\nimport { actions as SnackbarActions } from '../snackbar';\nimport {\n  getGroupsService,\n  getGroupService,\n  postGroupService,\n  updateGroupService,\n} from '../../services/groups';\nimport { actions as HistoryActions } from '../history';\nimport loading from '../helpers/loading';\n\nconst groups = stateCreate({\n  list: {},\n  current: {},\n});\n\nasync function loadData(id) {\n  let groupsResponse;\n  if (id) {\n    groupsResponse = await getGroupService(id);\n    update(groups, (state) => {\n      state.current = groupsResponse;\n    });\n  } else {\n    groupsResponse = await getGroupsService();\n    update(groups, (state) => {\n      state.list = groupsResponse;\n    });\n  }\n}\n\nasync function saveGroup(group) {\n  try {\n    if (group.id) {\n      await updateGroupService(group);\n      SnackbarActions.setMessage('Group updated successfully');\n    } else {\n      await postGroupService(group);\n      SnackbarActions.setMessage('Group created successfully');\n    }\n\n    update(groups, (state) => {\n      state.current = group;\n    });\n  } catch (error) {\n    SnackbarActions.displayError(error);\n  }\n\n  HistoryActions.goBack();\n}\n\nconst exported = {\n  name: 'groups',\n  state: groups,\n  actions: { loadData, saveGroup },\n};\nexport const { state, actions } = exported;\nexport default loading(exported);\n","import React, { Component } from 'react';\nimport { Subscribe } from 'bey';\nimport PropTypes from 'prop-types';\nimport injectSheet from 'react-jss';\nimport { Form, Field } from 'react-final-form';\nimport { Button, Card, Elevation } from '@blueprintjs/core';\nimport FormTextField from '../../components/FormTextField';\nimport validate from './form-validations';\nimport { actions as GroupActions, state as GroupState } from '../../state/groups';\n\nconst styles = {\n  formCard: {\n    width: '300px',\n    margin: '0.5em 1em',\n    padding: '1em',\n  },\n  formContainer: {\n    paddingTop: '16px',\n  },\n  buttonsContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n};\n\nclass CreateOrEditGroupPage extends Component {\n  componentDidMount() {\n    const { id } = this.props.route.params;\n    if (id) {\n      GroupActions.loadData(id);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.route.params.id !== nextProps.route.params.id) {\n      GroupActions.loadData(nextProps.route.params.id);\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <Subscribe to={GroupState}>\n        {(contacts) => (\n          <Form\n            onSubmit={GroupActions.saveGroup}\n            validate={validate}\n            initialValues={contacts.current}\n            render={({\n              handleSubmit, pristine, invalid, submitting, form: { reset },\n            }) => (\n              <Card\n                interactive\n                elevation={Elevation.TWO}\n                className={classes.formCard}\n              >\n                <form className={classes.formContainer} onSubmit={handleSubmit}>\n                  <Field name=\"name\" label=\"Name\" placeholder=\"Name\" component={FormTextField} />\n                  <div className={classes.buttonsContainer}>\n                    <Button\n                      icon=\"floppy-disk\"\n                      intent=\"success\"\n                      type=\"submit\"\n                      disabled={pristine || submitting || invalid}\n                      text=\"Save group\"\n                    />\n                    <Button\n                      icon=\"refresh\"\n                      intent=\"danger\"\n                      onClick={reset}\n                      disabled={pristine || submitting}\n                      text=\"Reset values\"\n                    />\n                  </div>\n                </form>\n              </Card>\n            )}\n          />\n        )}\n      </Subscribe>\n    );\n  }\n}\n\nCreateOrEditGroupPage.propTypes = {\n  route: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default injectSheet(styles)(CreateOrEditGroupPage);\n","import React from 'react';\nimport Sidebar from 'react-sidebar';\nimport PropTypes from 'prop-types';\nimport injectSheet from 'react-jss';\nimport { Button } from '@blueprintjs/core';\nimport Global, { actions as GlobalActions, selectors as GlobalSelectors } from '../../state/global';\nimport { useMultipleStates } from '../../state/helpers/useStateProvider';\n\nconst styles = {\n  sidebar: {\n    root: { position: 'initial' },\n    content: { display: 'none' },\n    overlay: { display: 'none' },\n    sidebar: { background: '#30404d', paddingTop: '3.5rem' },\n  },\n};\n\nfunction DrawerMenu(props) {\n  const { global: { isOpen, isSmallScreen } } = useMultipleStates('DrawerMenu', {\n    global: Global,\n  }, {\n    global: GlobalSelectors.drawerMenu,\n  });\n\n  if (!isSmallScreen) {\n    return props.children;\n  }\n  return (\n    <Sidebar\n      open={isOpen}\n      pullRight\n      touch\n      styles={styles.sidebar}\n      onSetOpen={(open) => {\n        GlobalActions.setRightMenuVisibility(open);\n      }}\n      sidebar={(\n        <div>\n          <Button\n            className=\"bp3-minimal\"\n            icon=\"cross\"\n            onClick={() => GlobalActions.setRightMenuVisibility(false)}\n          />\n          {props.children}\n        </div>\n      )}\n    >\n      {\n        <Button\n          className=\"bp3-minimal\"\n          icon=\"menu\"\n          onClick={() => GlobalActions.setRightMenuVisibility(!isOpen)}\n        />\n      }\n    </Sidebar>\n  );\n}\n\nDrawerMenu.propTypes = {\n  children: PropTypes.object.isRequired,\n  // classes: PropTypes.object.isRequired,\n};\n\nexport default injectSheet(styles)(DrawerMenu);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport injectSheet from 'react-jss';\nimport About from '../containers/About';\nimport ContactForm from '../containers/ContactForm';\nimport ContactList from '../containers/ContactList';\nimport ContactDetail from '../containers/ContactDetail';\nimport GroupForm from '../containers/GroupForm';\nimport DrawerMenu from '../containers/Menu/DrawerMenu';\nimport { ROUTES } from './routes';\n\nconst styles = {\n  contactDetailsLayout: {\n    display: 'flex',\n    flex: '1 0 auto',\n  },\n  editContactLayout: {\n    display: 'flex',\n    flex: '1 0 auto',\n  },\n};\n\nfunction ComponentSelector({ route, classes }) {\n  if (!route) {\n    return <About route={route} />;\n  }\n\n  switch (route.name) {\n    case ROUTES.ADD_GROUP:\n      return <GroupForm route={route} />;\n    case ROUTES.CONTACT_DETAILS:\n      return (\n        <div className={classes.contactDetailsLayout}>\n          <ContactList route={route} />\n          <DrawerMenu>\n            <ContactDetail route={route} />\n          </DrawerMenu>\n        </div>\n      );\n    case ROUTES.LIST_CONTACTS:\n      return <ContactList route={route} />;\n    case ROUTES.ADD_CONTACT:\n      return <ContactForm route={route} />;\n    case ROUTES.EDIT_CONTACT:\n      return (\n        <div className={classes.editContactLayout}>\n          <ContactList route={route} />\n          <DrawerMenu>\n            <ContactForm route={route} />\n          </DrawerMenu>\n        </div>\n      );\n    case ROUTES.HOME:\n    default:\n      return <About route={route} />;\n  }\n}\n\nComponentSelector.propTypes = {\n  route: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default injectSheet(styles)(ComponentSelector);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  MenuItem, Menu, Popover, Button, Position,\n} from '@blueprintjs/core';\n\nconst IconElementList = ({ changeListMode }) => (\n  <Popover\n    content={(\n      <Menu>\n        <MenuItem text=\"List\" onClick={() => changeListMode('list')} />\n        <MenuItem text=\"Card\" onClick={() => changeListMode('card')} />\n      </Menu>\n    )}\n    position={Position.RIGHT_TOP}\n  >\n    <Button icon=\"more\" />\n  </Popover>\n);\n\nIconElementList.propTypes = {\n  changeListMode: PropTypes.func.isRequired,\n};\n\nexport default IconElementList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Navbar, Button, Alignment } from '@blueprintjs/core';\nimport IconElementList from '../../components/IconElementList';\nimport { actions as GlobalActions } from '../../state/global';\nimport { ROUTES } from '../../router/routes';\n\nfunction MyNavbar({\n  route,\n}) {\n  return (\n    <React.Fragment>\n      <Navbar>\n        <Navbar.Group align={Alignment.LEFT}>\n          <Button\n            className=\"bp3-minimal\"\n            icon=\"menu\"\n            onClick={GlobalActions.toggleLeftMenu}\n          />\n          <Navbar.Divider />\n          <Navbar.Heading>Contacts app</Navbar.Heading>\n        </Navbar.Group>\n        <Navbar.Group align={Alignment.RIGHT}>\n          {route.name === ROUTES.LIST_CONTACTS ? (\n            <IconElementList changeListMode={GlobalActions.changeMode} />\n          ) : null}\n        </Navbar.Group>\n      </Navbar>\n    </React.Fragment>\n  );\n}\n\nMyNavbar.propTypes = {\n  route: PropTypes.object.isRequired,\n};\n\nexport default MyNavbar;\n","import React from 'react';\nimport {\n  Toaster, Toast, Position, ProgressBar,\n} from '@blueprintjs/core';\nimport Global, { selectors as GlobalSelectors } from '../../state/global';\nimport { useMultipleStates } from '../../state/helpers/useStateProvider';\n\nfunction Loader() {\n  const { global } = useMultipleStates('Loader', { global: Global }, { global: GlobalSelectors.loader });\n\n  return (\n    <Toaster position={Position.TOP}>\n      {global.loading.state ? (\n        <Toast\n          message={(\n            <div>\n              <span>{`Loading ${global.loading.message}...`}</span>\n              <ProgressBar />\n            </div>\n          )}\n        />\n      ) : null}\n    </Toaster>\n  );\n}\n\nexport default Loader;\n","import React from 'react';\nimport { Toaster, Toast, Position } from '@blueprintjs/core';\nimport { Subscribe } from 'bey';\nimport { state as SnackbarState, actions as SnackbarActions } from '../../state/snackbar';\n\nfunction Snackbar() {\n  return (\n    <Subscribe to={SnackbarState}>\n      {(message) => (\n        <Toaster position={Position.BOTTOM}>\n          {message ? (\n            <Toast\n              message={message || ''}\n              timeout={3000}\n              onDismiss={SnackbarActions.close}\n            />\n          ) : null}\n        </Toaster>\n      )}\n    </Subscribe>\n  );\n}\n\nexport default Snackbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport injectSheet from 'react-jss';\nimport Sidebar from 'react-sidebar';\nimport { Menu, MenuItem } from '@blueprintjs/core';\nimport { actions as HistoryActions } from '../../state/history';\nimport Global, { actions as GlobalActions, selectors as GlobalSelectors } from '../../state/global';\nimport { ROUTES } from '../../router/routes';\nimport { useMultipleStates } from '../../state/helpers/useStateProvider';\n\nconst styles = {\n  sidebar: {\n    sidebar: {\n      background: '#30404d',\n    },\n  },\n  leftMenuRoot: {\n    paddingTop: '4rem',\n    '&.selected': {\n      background: '#5C7080',\n    },\n  },\n};\n\nfunction selectMenuOption(e) {\n  HistoryActions.transitionToMenuOption(e.target.textContent);\n}\n\nfunction InnerMenu({\n  route, smallScreen, classes,\n}) {\n  function handleClick(e) {\n    selectMenuOption(e);\n    if (smallScreen) {\n      GlobalActions.toggleLeftMenu();\n    }\n  }\n\n  return (\n    <Menu className={classes.leftMenuRoot}>\n      <MenuItem\n        active={route.name === ROUTES.HOME}\n        onClick={handleClick}\n        text=\"About\"\n      />\n      <MenuItem\n        active={\n          [ROUTES.LIST_CONTACTS, ROUTES.CONTACT_DETAILS, ROUTES.EDIT_CONTACT].indexOf(route.name) !== -1\n        }\n        onClick={handleClick}\n        text=\"List\"\n      />\n      <MenuItem\n        active={route.name === ROUTES.ADD_CONTACT}\n        onClick={handleClick}\n        text=\"Add Contact\"\n      />\n      <MenuItem\n        active={route.name === ROUTES.ADD_GROUP}\n        onClick={handleClick}\n        text=\"Add Group\"\n      />\n    </Menu>\n  );\n}\n\nconst StyledInnerMenu = injectSheet(styles)(InnerMenu);\n\nfunction LeftMenu(props) {\n  const { global: { isOpen, isSmallScreen } } = useMultipleStates('LeftMenu', {\n    global: Global,\n  }, {\n    global: GlobalSelectors.leftMenu,\n  });\n\n  return (\n    () => {\n      if (isOpen) {\n        if (!isSmallScreen) {\n          return <StyledInnerMenu smallScreen={isSmallScreen} {...props} />;\n        }\n        return (\n          <Sidebar\n            open={isOpen}\n            styles={styles.sidebar}\n            onSetOpen={GlobalActions.toggleLeftMenu}\n            sidebar={<StyledInnerMenu smallScreen={isSmallScreen} {...props} />}\n          >\n            {false}\n          </Sidebar>\n        );\n      }\n      return false;\n    }\n  )();\n}\n\nInnerMenu.propTypes = {\n  route: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  smallScreen: PropTypes.bool.isRequired,\n};\n\nexport default LeftMenu;\n","import React from 'react';\nimport ComponentSelector from './router/ComponentSelector';\nimport Navbar from './containers/Navbar';\nimport Loader from './containers/Loader';\nimport Snackbar from './containers/Snackbar';\nimport LeftMenu from './containers/Menu/LeftMenu';\nimport History from './state/history';\nimport { useMultipleStates } from './state/helpers/useStateProvider';\n\nfunction App({\n  ...rest\n}) {\n  const { history: { route } } = useMultipleStates('App', { history: History });\n  return (\n    <div className=\"bp3-fill\" style={{ backgroundColor: '#30404d', minHeight: '100vh' }}>\n      <Navbar route={route} />\n      <Loader />\n      <div style={{ display: 'flex' }}>\n        <LeftMenu route={route} />\n        <ComponentSelector route={route} {...rest} />\n      </div>\n      <Snackbar />\n    </div>\n  );\n}\n\nApp.propTypes = {\n\n};\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { StateInspector } from 'reinspect';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nlet Root;\n\n// enabling redux-tools\n// eslint-disable-next-line no-underscore-dangle\nif (window.__REDUX_DEVTOOLS_EXTENSION__) {\n  Root = () => (\n    <StateInspector>\n      <App />\n    </StateInspector>\n  );\n} else {\n  Root = () => (\n    <App />\n  );\n}\n\nReactDOM.render(<Root />, document.getElementById('root'));\nregisterServiceWorker();\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          // eslint-disable-next-line no-console\n          console.log('This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://goo.gl/SC7cgQ');\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      // eslint-disable-next-line no-param-reassign\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              // eslint-disable-next-line no-console\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              // eslint-disable-next-line no-console\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      // eslint-disable-next-line no-console\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404\n        || response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      // eslint-disable-next-line no-console\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}