{"version":3,"sources":["containers/About/index.js","components/FormTextField.js","components/FormMultiSelectField.js","router/routes.js","router/router-config.js","state/snackbar/index.js","state/helpers/loading.js","state/helpers/changelog.js","state/helpers/useStateProvider.js","state/helpers/index.js","state/helpers/modified.js","state/global/index.js","services/index.js","services/groups.js","services/contacts.js","state/contacts/index.js","state/history/actions.js","state/history/index.js","components/ModifiedCheckAlert.js","globals/validators.js","containers/ContactForm/form-validations.js","containers/ContactForm/index.js","components/ContactCard.js","containers/ContactList/index.js","containers/ContactDetail/index.js","containers/GroupForm/form-validations.js","state/groups/index.js","containers/GroupForm/index.js","containers/Menu/DrawerMenu.js","router/ComponentSelector.js","components/IconElementList.js","containers/Navbar/index.js","containers/Loader/index.js","containers/Snackbar/index.js","containers/Menu/LeftMenu.js","App.js","registerServiceWorker.js","index.js"],"names":["injectSheet","cardRoot","margin","cardText1stLine","fontSize","cardText2ndLine","paddingTop","paddingBottom","_ref","classes","react_default","a","createElement","card","interactive","elevation","Elevation","TWO","className","FormTextField","input","label","placeholder","_ref$meta","meta","touched","error","custom","Object","objectWithoutProperties","formGroup","helperText","intent","undefined","inputGroup","assign","defaultProps","contactGroupMultiSelect","&.bp3-popover-target","width","contactGroupTagInputProps","& .bp3-input-ghost","options","_ref$input","value","onChange","indexesOptions","length","forEach","o","multiSelect","shouldDismissPopover","noResults","menuItem","disabled","text","popoverProps","minimal","targetClassName","items","selectedItems","onItemSelect","opt","indexOf","concat","toConsumableArray","splice","tagInputProps","fill","onRemove","index","itemRenderer","_ref2","handleClick","active","key","onClick","tagRenderer","ROUTES","HOME","ADD_CONTACT","LIST_CONTACTS","CONTACT_DETAILS","ADD_GROUP","EDIT_CONTACT","routes","name","path","router","createRouter","defaultRoute","autoCleanup","usePlugin","loggerPlugin","browserPlugin","useHash","forceDeactivate","configureRouter","start","navigate","snackbar","stateCreate","exported","state","actions","setMessage","message","update","displayError","close","loading","stateModule","arguments","localLoading","values","keys","actionName","isSync","originalAction","_plusLoading","asyncToGenerator","regenerator_default","mark","_callee","_len","args","_key","result","_args","wrap","_context","prev","next","console","groupCollapsed","Array","log","groupEnd","GlobalActions","setLoading","get","apply","sent","abrupt","stop","this","changelogs","useMultipleStates","finalState","stateModules","module","_useState","useState","_useState2","slicedToArray","setState","push","handler","useCallback","newState","useEffect","on","off","Error","updateStateDeferred","setStateFunction","oldState","newPartialState","moduleName","futureState","componentName","listeners","changes","timeouts","setTimeout","objectSpread","moduleNameStr","change","i","defineProperty","totalChanges","Date","getMilliseconds","diffString","executeUpdateState","t","clearTimeout","useMultiple","stateModulesObject","selectorsObject","mergedState","moduleKeys","selector","_useState3","_useState4","currentState","shallowEqual","React","StateInspector","loadingModule","modified","initState","set","setModified","modifiedFlag","changelog","Symbol","previousSnap","previousValue","original","snapshot","updatedAt","now","useStateProvider","_len2","modules","_key2","LIST_MODE","CARD_MODE","global","total","mode","menu","left","right","changeMode","SnackbarActions","toggleLeftMenu","setRightMenuVisibility","visible","selectors","loader","firebase","apiKey","authDomain","databaseURL","BASE_URL","getGroupsService","firebaseConnection","database","ref","Promise","resolve","reject","once","groupsDB","groupsDBValue","val","groups","map","id","err","getGroupService","groupDB","groupDBValue","postGroupService","group","post","updateGroupService","others","getContactsService","contactsDB","contactsDBValue","contacts","getContactService","contactDB","contactDBValue","postContactService","contact","updateContactService","deleteContactService","list","current","loadData","_callee2","groupsResponse","newGroups","contactsResponse","newContacts","_context2","t0","groupNames","groupId","join","_callee3","response","_context3","HistoryActions","goBack","_callee4","_context4","loadContactsIfEmpty","saveContact","deleteContact","contactForm","contactList","contactListGlobal","contactDetail","textToRouter","List","About","Add Contact","Add Group","transitionToContactList","_transitionToContactList","ContactsActions","transitionToEditContact","_transitionToEditContact","_x","transitionToContactDetail","_transitionToContactDetail","_x2","transitionToMenuOption","window","history","back","canDeactivate","initialRoute","getState","params","actionsObject","route","previousRoute","subscribe","ModifiedCheckAlert","isModified","routesToBlock","children","alertIsOpen","handleCancel","continue","handleContinue","cancel","routerProvided","toState","fromState","alert_alert","cancelButtonText","confirmButtonText","icon","isOpen","onCancel","onConfirm","requiredValidation","isEmail","test","isUrl","RegExp","maxLength","validate","errors","email","imgUrl","formCard","padding","formContainer","buttonsContainer","display","justifyContent","isContactModified","ContactsState","components_ModifiedCheckAlert","bey","to","react_final_form_es","onSubmit","initialValues","render","handleSubmit","pristine","invalid","submitting","reset","_ref3","dirty","component","FormMultiSelectField","buttons","type","ContactCard","onEditClick","onDeleteClick","big","loadingClass","Classes","SKELETON","cardContentContainer","cardHeader","alt","src","cardImage","cardTextContainer","cardTextGroup","buttonContainer","button","props","& .bp3-card.bp3-interactive","position","textAlign","height","bottom","color","background","maxHeight","maxWidth","marginRight","Pop","posed","div","hoverable","init","scale","hover","Item","enter","opacity","transition","delay","exit","ContactListCards","components_ContactCard","ContactListItems","react_pose_es","role","onKeyPress","e","contactListItem","style","contactListItemImage","contactListItemAvatar","substring","toUpperCase","contactListItemTextContainer","contactListItemText1stLine","contactListItemText2ndLine","stopPropagation","ContactList","memo","_useMultiple","Contacts","Global","ContactsSelectors","contactListRoot","contactListItemsContainer","contactListCardsContainer","&.bp3-tag.bp3-interactive","paddingLeft","backgroundColor","boxShadow","&.bp3-tag.bp3-interactive:hover","&.bp3-tag.bp3-interactive.selected","minWidth","flexDirection","alignSelf","marginLeft","fontWeight","lineHeight","borderRadius","flex","flexWrap","contactDetailRoot","saveGroup","CreateOrEditGroupPage","GroupActions","nextProps","GroupState","form","Component","styles","sidebar","root","content","overlay","mql","matchMedia","isSmallScreen","matches","mediaQueryChanged","isOpenChanged","GlobalState","addListener","removeListener","react_sidebar_esm","open","pullRight","touch","onSetOpen","contactDetailsLayout","editContactLayout","containers_About","GroupForm","containers_ContactList","Menu_DrawerMenu","ContactDetail","ContactForm","IconElementList","changeListMode","popover","Position","RIGHT_TOP","MyNavbar","Fragment","navbar","Group","align","Alignment","LEFT","Divider","Heading","RIGHT","components_IconElementList","Loader","GlobalSelectors","toaster","TOP","toast","progressBar","SB","SnackbarState","BOTTOM","timeout","onDismiss","leftMenuRoot","&.selected","StyledInnerMenu","smallScreen","target","textContent","selectMenuOption","LeftMenu","setSmallScreen","App","rest","esm_extends","History","minHeight","Navbar","containers_Loader","Menu_LeftMenu","router_ComponentSelector","Snackbar","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","index_es","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.8904b9d3.chunk.js","sourcesContent":["import React from 'react';\nimport { Card, Elevation } from '@blueprintjs/core';\nimport PropTypes from 'prop-types';\nimport injectSheet from 'react-jss';\n\nconst styles = {\n  cardRoot: {\n    margin: '1em',\n  },\n  cardText1stLine: {\n    fontSize: '14px',\n  },\n  cardText2ndLine: {\n    paddingTop: '16px',\n    fontSize: '14px',\n    paddingBottom: '2em',\n  },\n};\n\nfunction About({\n  classes,\n}) {\n  return (\n    <Card interactive elevation={Elevation.TWO} className={classes.cardRoot}>\n      <h1>Contacts App</h1>\n      <div className={classes.cardText1stLine}>Learning Immer (Bey)</div>\n      <div className={classes.cardText2ndLine}>\n        This is a example app using immer and react context + hooks.\n      </div>\n    </Card>\n  );\n}\n\nAbout.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default injectSheet(styles)(About);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputGroup, FormGroup } from '@blueprintjs/core';\n\nfunction FormTextField({\n  input, label, placeholder, meta: { touched, error }, ...custom\n}) {\n  return (\n    <FormGroup\n      helperText={error}\n      label={label}\n      intent={touched && error ? 'danger' : undefined}\n    >\n      <InputGroup\n        placeholder={placeholder}\n        intent={touched && error ? 'danger' : undefined}\n        {...input}\n        {...custom}\n      />\n    </FormGroup>\n  );\n}\n\nFormTextField.propTypes = {\n  input: PropTypes.object.isRequired,\n  label: PropTypes.string.isRequired,\n  meta: PropTypes.object.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  custom: PropTypes.object,\n};\n\nFormTextField.defaultProps = {\n  custom: {},\n};\n\nexport default FormTextField;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, FormGroup } from '@blueprintjs/core';\nimport { MultiSelect } from '@blueprintjs/select';\nimport injectSheet from 'react-jss';\n\nconst styles = {\n  contactGroupMultiSelect: {\n    '&.bp3-popover-target': {\n      width: '100%',\n    },\n  },\n  contactGroupTagInputProps: {\n    '& .bp3-input-ghost': {\n      fontSize: '14px',\n    },\n  },\n};\n\nfunction FormMultiSelectField({\n  options,\n  input: {\n    value, onChange,\n  },\n  label,\n  meta: { touched, error },\n  classes,\n  ...custom\n}) {\n  const indexesOptions = {};\n  if (options && options.length > 0) {\n    options.forEach((o) => {\n      indexesOptions[o.value] = o;\n    });\n  }\n\n  return (\n    <FormGroup\n      helperText={error}\n      label={label}\n      intent={touched && error ? 'danger' : undefined}\n    >\n      <MultiSelect\n        shouldDismissPopover={false}\n        noResults={<MenuItem disabled text=\"No results.\" />}\n        popoverProps={{ minimal: true, targetClassName: classes.contactGroupMultiSelect }}\n        items={options}\n        selectedItems={value === '' ? [] : value}\n        onItemSelect={(opt) => {\n          if (value.indexOf(opt.value) === -1) {\n            onChange([...value, opt.value]);\n          } else {\n            value.splice(value.indexOf(opt.value), 1);\n            onChange(value);\n          }\n        }}\n        tagInputProps={{\n          placeholder: 'Select contact groups...',\n          fill: true,\n          className: classes.contactGroupTagInputProps,\n          onRemove: (opt, index) => {\n            if (value && value.length > 0) {\n              value.splice(index, 1);\n              onChange(value);\n            }\n          },\n        }}\n        itemRenderer={(opt, { handleClick }) => (\n          <MenuItem\n            active={value.indexOf(opt.value) !== -1}\n            key={`option-${opt.value}`}\n            text={opt.text}\n            onClick={handleClick}\n          />\n        )}\n        tagRenderer={(opt) => indexesOptions[opt].text}\n        {...custom}\n      />\n    </FormGroup>\n  );\n}\n\nFormMultiSelectField.propTypes = {\n  input: PropTypes.object.isRequired,\n  label: PropTypes.string.isRequired,\n  meta: PropTypes.object.isRequired,\n  options: PropTypes.array.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default injectSheet(styles)(FormMultiSelectField);\n","export const ROUTES = {\n  HOME: 'home',\n  ADD_CONTACT: 'addContact',\n  LIST_CONTACTS: 'listContacts',\n  CONTACT_DETAILS: 'contactDetails',\n  ADD_GROUP: 'addGroup',\n  EDIT_CONTACT: 'editContact',\n};\n\nexport const routes = [\n  { name: ROUTES.HOME, path: '/' },\n  { name: ROUTES.ADD_CONTACT, path: '/add' },\n  { name: ROUTES.LIST_CONTACTS, path: '/list' },\n  { name: ROUTES.EDIT_CONTACT, path: '/edit/:id' },\n  { name: ROUTES.CONTACT_DETAILS, path: '/detail/:id' },\n  { name: ROUTES.ADD_GROUP, path: '/group/add' },\n];\n","import createRouter from 'router5';\nimport loggerPlugin from 'router5-plugin-logger';\nimport browserPlugin from 'router5-plugin-browser';\nimport { routes } from './routes';\n\nfunction configureRouter() {\n  const router = createRouter(routes, {\n    defaultRoute: 'home',\n    autoCleanup: false,\n  });\n\n  // Plugins\n  router.usePlugin(\n    loggerPlugin,\n    browserPlugin({\n      useHash: true,\n      forceDeactivate: false,\n    }),\n  );\n\n  return router;\n}\n\nconst router = configureRouter();\nrouter.start();\n\nexport const { navigate } = router;\nexport default router;\n","import { state as stateCreate, update } from 'bey';\n\nconst snackbar = stateCreate(null);\n\nfunction setMessage(message) {\n  update(snackbar, () => message);\n}\n\nfunction displayError(error) {\n  let message = 'Unknown error';\n\n  if (error && error.message) {\n    // eslint-disable-next-line prefer-destructuring\n    message = error.message;\n  } else if (typeof error === 'string') {\n    message = error;\n  }\n  update(snackbar, () => message);\n}\n\nfunction close() {\n  update(snackbar, () => null);\n}\n\nconst exported = {\n  name: 'snackbar',\n  state: snackbar,\n  actions: { setMessage, displayError, close },\n};\nexport const { state, actions } = exported;\nexport default exported;\n","import { update } from 'bey';\nimport { actions as GlobalActions } from '../global';\n\nfunction isAsync(fn) {\n  return fn.isSync !== true;\n  // return fn.constructor.name === 'AsyncFunction';\n}\n\nexport default function loading(stateModule, options = { localLoading: false }) {\n  if (stateModule.actions && Object.values(stateModule.actions).length > 0) {\n    Object.keys(stateModule.actions).forEach((actionName) => {\n      if (\n        stateModule.actions[actionName]\n        && typeof stateModule.actions[actionName] === 'function'\n        && isAsync(stateModule.actions[actionName])\n      ) {\n        const originalAction = stateModule.actions[actionName];\n        /* eslint-disable no-param-reassign */\n        stateModule.actions[actionName] = async function plusLoading(...args) {\n          /* eslint-disable no-console */\n          console.groupCollapsed(`[${stateModule.name}] executing action: ${actionName}()`);\n          console.log(`Using arguments: ${args}`);\n          console.groupEnd();\n          GlobalActions.setLoading(true, stateModule.name);\n          if (options.localLoading) {\n            const loadingBefore = stateModule.state.get().loading;\n            if (loadingBefore !== true) {\n              update(stateModule.state, (state) => {\n                state.loading = true;\n              });\n            }\n          }\n          const result = await originalAction(...args);\n          if (options.localLoading) {\n            const loadingAfter = stateModule.state.get().loading;\n            if (loadingAfter !== false) {\n              update(stateModule.state, (state) => {\n                state.loading = false;\n              });\n            }\n          }\n          GlobalActions.setLoading(false, stateModule.name);\n          return result;\n        };\n      }\n    });\n  }\n\n  return stateModule;\n}\n","import { original } from 'immer';\nimport { diffString } from 'json-diff';\nimport { state as stateCreate, update } from 'bey';\n\nconst changelogs = stateCreate({});\n\nexport default function changelog(stateModule) {\n  if (stateModule.actions && typeof stateModule.actions === 'object') {\n    const key = stateModule.name || Symbol('state module name is not defined');\n\n    changelogs.set({\n      ...changelogs.get(),\n      [key]: { changes: [] },\n    });\n\n    stateModule.state.on(() => {\n      const newState = stateModule.state.get();\n      update(changelogs, (state) => {\n        const previousSnap = state[key].changes[state[key].changes.length - 1];\n        const previousValue = previousSnap ? original(previousSnap).snapshot : undefined;\n        state[key].changes.push({ snapshot: newState, updatedAt: Date.now() });\n        /* eslint-disable no-console */\n        console.groupCollapsed(`[${key}] state changed at: ${new Date().getMilliseconds()}`); // at ${new Date().getMilliseconds()}\n        console.log('FROM:', previousValue);\n        console.log('TO:', newState);\n        console.log('DIFF:');\n        console.log(diffString(previousValue, newState));\n        console.groupEnd();\n      });\n    });\n  }\n\n  return stateModule;\n}\n","\nimport React, { useEffect, useCallback } from 'react';\nimport { useState, StateInspector } from 'reinspect';\nimport shallowEqual from 'fbjs/lib/shallowEqual';\nimport { diffString } from 'json-diff';\n\nReact.createElement(StateInspector);\n\nexport function useMultipleStates(...stateModules) {\n  const finalState = [];\n\n  if (stateModules && stateModules.length > 0) {\n    stateModules.forEach((module) => {\n      const [state, setState] = useState(module.state.get());\n\n      finalState.push(state);\n\n      const handler = useCallback(() => {\n        const newState = module.state.get();\n        if (newState !== state) {\n          setState(newState);\n        }\n      });\n\n      useEffect(() => {\n        module.state.on(handler);\n        return function cleanup() {\n          module.state.off(handler);\n        };\n      });\n    });\n\n    return finalState;\n  }\n  throw new Error('useMultipleStates requires at least one argument.');\n}\n\n\nfunction updateStateDeferred(setStateFunction, oldState, newPartialState, moduleName, futureState, componentName, listeners) {\n  /* eslint-disable no-param-reassign */\n  futureState.changes.push({ oldState, newPartialState, moduleName });\n  let timeouts = [];\n  timeouts.push(setTimeout(() => {\n    if (futureState.changes.length > 0) {\n      let newState = { ...futureState.oldState };\n      let moduleNameStr = '';\n      futureState.changes.forEach((change, i) => {\n        moduleNameStr += change.moduleName + ((i !== futureState.changes.length - 1) ? ' + ' : '');\n        newState = { ...newState, [change.moduleName]: change.newPartialState };\n      });\n      executeUpdateState(setStateFunction, oldState, newState, moduleNameStr, futureState.changes.length, componentName, listeners);\n      futureState.oldState = newState;\n      futureState.changes = [];\n      timeouts.forEach((t) => clearTimeout(t));\n      timeouts = [];\n    }\n  }, 0));\n}\n\nfunction executeUpdateState(setStateFunction, oldState, newState, moduleName, totalChanges, componentName, listeners) {\n  /* eslint-disable no-console */\n  console.groupCollapsed(`[${moduleName}] rendering [${totalChanges}] changes from ${componentName} at: ${new Date().getMilliseconds()}`);\n  console.log('NEW STATE: ', newState);\n  console.log(diffString(oldState, newState));\n  console.groupEnd();\n  if (listeners > 0) {\n    return setStateFunction(newState);\n  }\n  return false;\n}\n\nexport function useMultiple(stateModulesObject, selectorsObject = {}, componentName) {\n  let mergedState = {};\n\n  if (stateModulesObject && typeof stateModulesObject === 'object' && Object.keys(stateModulesObject).length > 0) {\n    const moduleKeys = Object.keys(stateModulesObject);\n    moduleKeys.forEach((key) => {\n      const module = stateModulesObject[key];\n      const state = module.state.get();\n      const selector = selectorsObject[key];\n      mergedState = { ...mergedState, [module.name]: (selector) ? selector(state) : state };\n    });\n\n    const [state, setState] = useState(mergedState, componentName);\n\n    const futureState = { oldState: state, newState: {}, changes: [] };\n    let listeners = 0;\n    moduleKeys.forEach((key) => {\n      const module = stateModulesObject[key];\n      const selector = selectorsObject[key];\n\n      const handler = () => {\n        const currentState = module.state.get();\n        const newState = (selector) ? selector(currentState) : currentState;\n        // console.log('updateStateDeferred', module.name ,new Date().getMilliseconds());\n        if (!shallowEqual(newState, state[module.name])) {\n          // console.log('updateStateDeferred changed',new Date().getMilliseconds());\n          updateStateDeferred(setState, state, newState, module.name, futureState, componentName, listeners);\n        }\n      };\n\n      useEffect(() => {\n        listeners += 1;\n        module.state.on(handler);\n        return function cleanup() {\n          listeners -= 1;\n          module.state.off(handler);\n        };\n      });\n    });\n\n    return state;\n  }\n  throw new Error('useMultiple requires at least one object argument with one moduleState key.');\n}\n\nexport default function useStateProvider(stateModule) {\n  if (stateModule && typeof stateModule === 'object' && stateModule.state && typeof stateModule.state === 'object') {\n    stateModule.state.useState = function useStateHook(...modules) {\n      if (modules) {\n        return useMultipleStates(...modules);\n      }\n      return useMultipleStates(stateModule);\n    };\n  }\n\n  return stateModule;\n}\n","import loadingModule from './loading';\nimport modifiedModule from './modified';\nimport changelogModule from './changelog';\nimport contextModule from './context';\nimport useStateProviderModule from './useStateProvider';\n\nexport const loading = loadingModule;\nexport const modified = modifiedModule;\nexport const changelog = changelogModule;\nexport const addContext = contextModule;\nexport const useStateProvider = useStateProviderModule;\n","import { update } from 'bey';\n\nexport default function modified(stateModule) {\n  /* eslint-disable no-param-reassign */\n  if (stateModule.actions && typeof stateModule.actions === 'object') {\n    const initState = stateModule.state.get();\n    stateModule.state.set({ ...initState, modified: false });\n    stateModule.actions.setModified = function setModified(modifiedFlag) {\n      const currentState = stateModule.state.get();\n      if (currentState.modified !== modifiedFlag) {\n        update(stateModule.state, (state) => {\n          state.modified = modifiedFlag;\n        });\n      }\n    };\n  }\n\n  return stateModule;\n}\n","import { state as stateCreate, update } from 'bey';\nimport { actions as SnackbarActions } from '../snackbar';\nimport { changelog } from '../helpers';\n\nconst LIST_MODE = 'list';\nconst CARD_MODE = 'card';\n\nconst global = stateCreate({\n  loading: { state: false, total: 0, message: null },\n  mode: LIST_MODE,\n  menu: {\n    left: true,\n    right: true,\n  },\n});\n\nfunction setLoading(loading, message) {\n  update(global, (state) => {\n    if (loading) {\n      state.loading.total += 1;\n    } else {\n      state.loading.total -= 1;\n    }\n\n    state.loading.state = state.loading.total > 0;\n    state.loading.message = message;\n  });\n}\n\nfunction changeMode(mode) {\n  if (mode === LIST_MODE || mode === CARD_MODE) {\n    update(global, (state) => {\n      state.mode = mode;\n    });\n    SnackbarActions.setMessage(`Mode changed to: ${mode}`);\n  }\n}\n\nfunction toggleLeftMenu() {\n  update(global, (state) => {\n    state.menu.left = !state.menu.left;\n  });\n}\n\nfunction setRightMenuVisibility(visible) {\n  update(global, (state) => {\n    state.menu.right = visible;\n  });\n}\n\nfunction loader(state) {\n  return { loading: state.loading };\n}\n\nconst exported = {\n  name: 'global',\n  state: global,\n  actions: {\n    setLoading, changeMode, toggleLeftMenu, setRightMenuVisibility,\n  },\n  selectors: {\n    loader,\n  },\n};\nexport const { state, actions, selectors } = exported;\nexport default changelog(exported);\n","import * as firebase from 'firebase';\n\nconst config = {\n  apiKey: 'AIzaSyB1GATIyuA6FNnAUMBz0kXJ62EvlSWx99o',\n  authDomain: 'redux-contacts-app.firebaseapp.com',\n  databaseURL: 'https://redux-contacts-app.firebaseio.com/',\n};\n\nfirebase.initializeApp(config);\n\nexport default firebase;\n","import firebase from './index';\n\nconst BASE_URL = '/groups';\n\nexport function getGroupsService() {\n  const firebaseConnection = firebase.database().ref(`${BASE_URL}`);\n  return new Promise((resolve, reject) => {\n    firebaseConnection.once(\n      'value',\n      (groupsDB) => {\n        const groupsDBValue = groupsDB.val();\n        const groups = [];\n        Object.keys(groupsDBValue).map((id) => groups.push({\n          id,\n          ...groupsDBValue[id],\n        }));\n        return resolve(groups);\n      },\n      (err) => reject(err),\n    );\n  });\n}\n\nexport function getGroupService(id) {\n  const firebaseConnection = firebase.database().ref(`${BASE_URL}/${id}`);\n  return new Promise((resolve, reject) => {\n    firebaseConnection.once(\n      'value',\n      (groupDB) => {\n        const groupDBValue = groupDB.val();\n        groupDBValue.id = id;\n        return resolve(groupDBValue);\n      },\n      (err) => reject(err),\n    );\n  });\n}\n\nexport function postGroupService(group) {\n  const firebaseConnection = firebase.database().ref(`${BASE_URL}`);\n  return new Promise((resolve, reject) => {\n    const post = firebaseConnection.push();\n    post.set(group, (err) => {\n      if (err) {\n        return reject(err);\n      }\n      return resolve({\n        id: post.key,\n        ...group,\n      });\n    });\n  });\n}\n\nexport function updateGroupService({ id, ...others }) {\n  const firebaseConnection = firebase.database().ref(`${BASE_URL}/${id}`);\n  return new Promise((resolve, reject) => {\n    firebaseConnection.set({ ...others }, (err) => {\n      if (err) {\n        return reject(err);\n      }\n      return resolve({\n        id,\n        ...others,\n      });\n    });\n  });\n}\n\nexport function deleteGroupService(id) {\n  const firebaseConnection = firebase.database().ref(`${BASE_URL}/${id}`);\n  return new Promise((resolve, reject) => {\n    firebaseConnection.set(null, (err) => {\n      if (err) {\n        return reject(err);\n      }\n      return resolve({ id });\n    });\n  });\n}\n","import firebase from './index';\n\nconst BASE_URL = '/jony';\n\nexport function getContactsService() {\n  const firebaseConnection = firebase.database().ref(`${BASE_URL}`);\n  return new Promise((resolve, reject) => {\n    firebaseConnection.once(\n      'value',\n      (contactsDB) => {\n        const contactsDBValue = contactsDB.val();\n        const contacts = [];\n        Object.keys(contactsDBValue).map((id) => contacts.push({\n          id,\n          ...contactsDBValue[id],\n        }));\n        return resolve(contacts);\n      },\n      (err) => reject(err),\n    );\n  });\n}\n\nexport function getContactService(id) {\n  const firebaseConnection = firebase.database().ref(`${BASE_URL}/${id}`);\n  return new Promise((resolve, reject) => {\n    firebaseConnection.once(\n      'value',\n      (contactDB) => {\n        const contactDBValue = contactDB.val();\n        if (contactDBValue) {\n          contactDBValue.id = id;\n        }\n        return resolve(contactDBValue);\n      },\n      (err) => reject(err),\n    );\n  });\n}\n\nexport function postContactService(contact) {\n  const firebaseConnection = firebase.database().ref(`${BASE_URL}`);\n  return new Promise((resolve, reject) => {\n    const post = firebaseConnection.push();\n    post.set(contact, (err) => {\n      if (err) {\n        return reject(err);\n      }\n      return resolve({\n        id: post.key,\n        ...contact,\n      });\n    });\n  });\n}\n\nexport function updateContactService({ id, ...others }) {\n  const firebaseConnection = firebase.database().ref(`${BASE_URL}/${id}`);\n  return new Promise((resolve, reject) => {\n    firebaseConnection.set({ ...others }, (err) => {\n      if (err) {\n        return reject(err);\n      }\n      return resolve({\n        id,\n        ...others,\n      });\n    });\n  });\n}\n\nexport function deleteContactService(id) {\n  const firebaseConnection = firebase.database().ref(`${BASE_URL}/${id}`);\n  return new Promise((resolve, reject) => {\n    firebaseConnection.set(null, (err) => {\n      if (err) {\n        return reject(err);\n      }\n      return resolve({ id });\n    });\n  });\n}\n","import { state as stateCreate, update } from 'bey';\nimport { actions as SnackbarActions } from '../snackbar';\nimport { getGroupsService } from '../../services/groups';\nimport {\n  getContactsService,\n  getContactService,\n  updateContactService,\n  postContactService,\n  deleteContactService,\n} from '../../services/contacts';\nimport HistoryActions from '../history/actions';\nimport {\n  loading, modified, changelog, useStateProvider,\n} from '../helpers';\n\nconst contacts = stateCreate({\n  list: {},\n  groups: {},\n  current: {},\n});\n\nasync function loadContactsIfEmpty() {\n  const contactsArray = Object.values(contacts.get().list);\n  if (contactsArray.length === 0) {\n    loadData();\n  }\n}\n\nasync function loadData(id) {\n  const groupsResponse = await getGroupsService();\n  const newGroups = {};\n\n  groupsResponse.forEach((group) => {\n    newGroups[group.id] = group;\n  });\n\n  let contactsResponse;\n  if (id) {\n    contactsResponse = [await getContactService(id)];\n  } else {\n    contactsResponse = await getContactsService();\n  }\n\n  const newContacts = {};\n\n  contactsResponse.forEach((contact) => {\n    if (contact) {\n      if (contact.groups && contact.groups.length > 0) {\n        /* eslint-disable-next-line no-param-reassign */\n        contact.groupNames = contact.groups\n          .map((groupId) => {\n            if (newGroups[groupId]) {\n              return newGroups[groupId].name;\n            }\n            return '';\n          })\n          .join(', ');\n      }\n\n      newContacts[contact.id] = contact;\n    }\n  });\n\n  update(contacts, (state) => {\n    if (id) {\n      state.current = newContacts[id] || {};\n      // state.modified = false;\n    } else {\n      state.list = newContacts;\n    }\n\n    state.groups = newGroups;\n  });\n}\n\nasync function saveContact(contact) {\n  try {\n    let response;\n\n    if (contact.id) {\n      response = await updateContactService(contact);\n    } else {\n      response = await postContactService(contact);\n    }\n\n    // eslint-disable-next-line no-console\n    console.log('current contact updated:', response);\n\n    update(contacts, (state) => {\n      state.current = contact;\n      state.modified = false;\n    });\n\n    SnackbarActions.setMessage(`Contact ${contact.id ? 'updated' : 'created'} successfully`);\n  } catch (error) {\n    SnackbarActions.displayError(error);\n  }\n  HistoryActions.goBack();\n}\n\nasync function deleteContact(id) {\n  try {\n    if (id) {\n      await deleteContactService(id);\n      update(contacts, (state) => {\n        state.current = {};\n      });\n\n      SnackbarActions.setMessage('Contact deleted successfully');\n      loadData();\n    }\n  } catch (error) {\n    SnackbarActions.displayError(error);\n  }\n  HistoryActions.goBack();\n}\n\nfunction contactForm(state) {\n  return { current: state.current, groups: state.groups };\n}\n\nfunction contactDetail(state) {\n  return { current: state.current, loading: state.loading };\n}\n\nfunction contactList(state) {\n  return { current: state.current, list: state.list, groups: state.groups };\n}\n\nfunction contactListGlobal(state) {\n  return { mode: state.mode };\n}\n\nconst exported = {\n  name: 'contacts',\n  state: contacts,\n  actions: {\n    loadData, loadContactsIfEmpty, saveContact, deleteContact,\n  },\n  selectors: {\n    contactForm, contactList, contactListGlobal, contactDetail,\n  },\n};\n\nexport const { actions, state, selectors } = exported;\nexport default useStateProvider(changelog(modified(loading(exported, { localLoading: true }))));\n","import { actions as GlobalActions } from '../global';\nimport { actions as ContactsActions } from '../contacts';\nimport router, { navigate } from '../../router/router-config';\nimport { ROUTES } from '../../router/routes';\n\nconst textToRouter = {\n  List: ROUTES.LIST_CONTACTS,\n  About: ROUTES.HOME,\n  'Add Contact': ROUTES.ADD_CONTACT,\n  'Add Group': ROUTES.ADD_GROUP,\n};\n\nconst actions = {\n  transitionToContactList: async () => {\n    await ContactsActions.loadData();\n    navigate(ROUTES.LIST_CONTACTS);\n  },\n  transitionToEditContact: async ({ id }) => {\n    await [ContactsActions.loadData(id), ContactsActions.loadContactsIfEmpty()];\n    GlobalActions.setRightMenuVisibility(true);\n    navigate(ROUTES.EDIT_CONTACT, { id });\n  },\n  transitionToContactDetail: async ({ id }) => {\n    await [ContactsActions.loadData(id), ContactsActions.loadContactsIfEmpty()];\n    GlobalActions.setRightMenuVisibility(true);\n    navigate(ROUTES.CONTACT_DETAILS, { id });\n  },\n  transitionToMenuOption: (text) => {\n    if (actions[textToRouter[text]]) {\n      actions[textToRouter[text]]();\n    } else {\n      navigate(textToRouter[text]);\n    }\n  },\n  goBack: () => window.history.back(),\n  router: {\n    canDeactivate: router.canDeactivate,\n  },\n};\n\nactions[ROUTES.EDIT_CONTACT] = actions.transitionToEditContact;\nactions[ROUTES.CONTACT_DETAILS] = actions.transitionToContactDetail;\nactions[ROUTES.LIST_CONTACTS] = actions.transitionToContactList;\n\nexport default actions;\n","import { state as stateCreate, update } from 'bey';\nimport router from '../../router/router-config';\nimport actionsObject from './actions';\n\nconst initialRoute = router.getState();\nconst { name, params } = initialRoute;\n\nif (actionsObject[name]) {\n  actionsObject[name](params);\n}\n\nconst history = stateCreate({\n  route: initialRoute,\n  previousRoute: {},\n});\n\nconst exported = {\n  name: 'history',\n  state: history,\n  actions: actionsObject,\n};\n\nrouter.subscribe((change) => {\n  update(history, (state) => {\n    // console.log('History route changed:', change);\n    state.route = change.route;\n    state.previousRoute = change.previousRoute;\n  });\n});\n\nexport const { state, actions } = exported;\nexport default exported;\n","import React, { useState, useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Alert } from '@blueprintjs/core';\nimport { actions as HistoryActions } from '../state/history';\n\nfunction ModifiedCheckAlert({\n  isModified, routesToBlock, children,\n}) {\n  const [state, setState] = useState({ alertIsOpen: false });\n\n  const handleCancel = useCallback(() => {\n    state.continue();\n    setState({ alertIsOpen: false });\n  });\n\n  const handleContinue = useCallback(() => {\n    state.cancel();\n    setState({ alertIsOpen: false });\n  });\n\n  useEffect(() => {\n    if (HistoryActions.router) {\n      // eslint-disable-next-line no-unused-vars\n      const canDeactivate = (routerProvided) => (toState, fromState) => {\n        const isModifiedVal = isModified();\n        if (isModifiedVal) {\n          return new Promise((resolve, reject) => {\n            setState({ alertIsOpen: true, continue: reject, cancel: resolve });\n          });\n        }\n        return true;\n      };\n\n      routesToBlock.forEach((route) => {\n        HistoryActions.router.canDeactivate(route, canDeactivate);\n      });\n    }\n  });\n\n  const { alertIsOpen } = state;\n  return (\n    <div>\n      <Alert\n        cancelButtonText=\"Cancel\"\n        confirmButtonText=\"Continue\"\n        icon=\"trash\"\n        intent=\"danger\"\n        isOpen={alertIsOpen}\n        onCancel={handleCancel}\n        onConfirm={handleContinue}\n      >\n        <p>Are you sure you want leave? Your changes will be lost.</p>\n      </Alert>\n      {children}\n    </div>\n  );\n}\n\nModifiedCheckAlert.propTypes = {\n  isModified: PropTypes.func.isRequired,\n  routesToBlock: PropTypes.array.isRequired,\n  children: PropTypes.object.isRequired,\n};\n\nexport default ModifiedCheckAlert;\n","export const requiredValidation = (value) => value !== undefined && value !== null && value !== '';\n\nexport const isEmail = (value) => {\n  if (value) {\n    const regExp = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i; // eslint-disable-line\n    return regExp.test(value);\n  }\n  return true;\n};\n\nexport const isUrl = (value) => {\n  if (value) {\n    const regExp = new RegExp('^(?:(?:https?|ftp)://)(?:S+(?::S*)?@)?(?:(?!10(?:.d{1,3}){3})(?!127(?:.d{1,3}){3})(?!169.254(?:.d{1,3}){2})(?!192.168(?:.d{1,3}){2})(?!172.(?:1[6-9]|2d|3[0-1])(?:.d{1,3}){2})(?:[1-9]d?|1dd|2[01]d|22[0-3])(?:.(?:1?d{1,2}|2[0-4]d|25[0-5])){2}(?:.(?:[1-9]d?|1dd|2[0-4]d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)(?:.(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)*(?:.(?:[a-z\\u00a1-\\uffff]{2,})))(?::d{2,5})?(?:/[^s]*)?');\n    return regExp.test(value);\n  }\n  return true;\n};\n\nexport const maxLength = (value, length) => value && value.length > length;\n","import { requiredValidation, isEmail, isUrl } from '../../globals/validators';\n\nexport default function validate(values) {\n  const errors = {};\n  if (!requiredValidation(values.email)) {\n    errors.email = 'Email is required';\n  } else if (!isEmail(values.email)) {\n    errors.email = 'Email format is incorrect';\n  }\n  if (!requiredValidation(values.name)) {\n    errors.name = 'Name is Required';\n  }\n  if (!isUrl(values.imgUrl)) {\n    errors.imgUrl = 'Invalid url';\n  }\n  return errors;\n}\n","import React, { useCallback } from 'react';\nimport { Subscribe } from 'bey';\nimport injectSheet from 'react-jss';\nimport PropTypes from 'prop-types';\nimport { Form, Field, FormSpy } from 'react-final-form';\nimport {\n  Button, Card, Elevation,\n} from '@blueprintjs/core';\nimport FormTextField from '../../components/FormTextField';\nimport FormMultiSelectField from '../../components/FormMultiSelectField';\nimport ModifiedCheckAlert from '../../components/ModifiedCheckAlert';\nimport validate from './form-validations';\nimport { actions as ContactsActions, selectors, state as ContactsState } from '../../state/contacts';\nimport { ROUTES } from '../../router/routes';\n\n\nconst styles = {\n  formCard: {\n    width: '300px',\n    margin: '0.5em 1em',\n    padding: '1em',\n  },\n  formContainer: {\n    paddingTop: '16px',\n  },\n  buttonsContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n};\n\nfunction CreateOrEditContactPage({\n  classes, route,\n}) {\n  const isContactModified = useCallback(() => ContactsState.get().modified);\n\n  return (\n    <ModifiedCheckAlert\n      isModified={isContactModified}\n      routesToBlock={[ROUTES.ADD_CONTACT, ROUTES.EDIT_CONTACT]}\n    >\n      <Subscribe to={ContactsState} on={selectors.contactForm}>\n        {(contacts) => (\n          <Form\n            onSubmit={ContactsActions.saveContact}\n            validate={validate}\n            initialValues={route.params.id ? contacts.current : {}}\n            render={({\n              handleSubmit, pristine, invalid, submitting, reset,\n            }) => (\n              <Card\n                interactive\n                elevation={Elevation.TWO}\n                className={classes.formCard}\n              >\n                <form className={classes.formContainer} onSubmit={handleSubmit}>\n                  <FormSpy\n                    onChange={({ dirty }) => {\n                      ContactsActions.setModified(dirty && !submitting);\n                    }}\n                  />\n                  <Field\n                    name=\"name\"\n                    label=\"Name\"\n                    placeholder=\"Name\"\n                    component={FormTextField}\n                  />\n                  <Field\n                    name=\"email\"\n                    label=\"Email\"\n                    placeholder=\"Email\"\n                    component={FormTextField}\n                  />\n                  <Field\n                    name=\"phoneNumber\"\n                    label=\"Phone number\"\n                    placeholder=\"Phone number\"\n                    component={FormTextField}\n                  />\n                  <Field\n                    name=\"imgUrl\"\n                    label=\"Profile image url\"\n                    placeholder=\"Profile image url\"\n                    component={FormTextField}\n                  />\n                  <Field\n                    name=\"groups\"\n                    component={FormMultiSelectField}\n                    label=\"Groups\"\n                    options={Object.values(contacts.groups).map((group) => ({\n                      value: group.id,\n                      text: group.name,\n                    }))}\n                  />\n                  <div className={classes.buttonsContainer}>\n                    <Button\n                      text=\"Save contact\"\n                      icon=\"floppy-disk\"\n                      intent=\"success\"\n                      type=\"submit\"\n                      disabled={pristine || submitting || invalid}\n                    />\n                    <Button\n                      text=\"Reset values\"\n                      disabled={pristine || submitting}\n                      icon=\"refresh\"\n                      intent=\"danger\"\n                      onClick={reset}\n                    />\n                  </div>\n                </form>\n              </Card>\n            )}\n          />\n        )}\n      </Subscribe>\n    </ModifiedCheckAlert>\n  );\n}\n\nCreateOrEditContactPage.propTypes = {\n  route: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default injectSheet(styles)(CreateOrEditContactPage);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport injectSheet from 'react-jss';\nimport {\n  Button, Card, Elevation, Classes,\n} from '@blueprintjs/core';\n\nconst styles = {\n  // eslint-disable-next-line arrow-body-style\n  cardRoot: (props) => {\n    return ({\n      width: props.big ? 'auto' : '300px',\n      padding: props.big ? 'inherit' : '0px',\n      '& .bp3-card.bp3-interactive': {\n        margin: '1em',\n        padding: 0,\n      },\n    });\n  },\n  cardContentContainer: {\n    position: 'relative',\n    textAlign: 'center',\n    height: 300,\n    width: 300,\n  },\n  cardHeader: {\n    position: 'absolute',\n    bottom: '0px',\n    right: '0px',\n    left: '0px',\n    padding: '8px',\n    margin: '0',\n    color: 'white',\n    background: 'rgba(0, 0, 0, 0.54)',\n  },\n  cardImage: {\n    maxHeight: 300,\n    maxWidth: 300,\n  },\n  cardTextContainer: {\n    fontSize: '12pt',\n    padding: '8px',\n  },\n  cardTextGroup: {\n    fontSize: '10pt',\n    color: 'grey',\n  },\n  buttonContainer: {\n    padding: '8px',\n    position: 'relative',\n  },\n  button: {\n    marginRight: '8px',\n  },\n};\n\nconst ContactCard = ({\n  // eslint-disable-next-line no-unused-vars\n  contact, onEditClick, onDeleteClick, big, loading, classes,\n}) => {\n  const {\n    name, imgUrl, email, groupNames,\n  } = contact;\n  const loadingClass = loading ? Classes.SKELETON : '';\n  return (\n    <Card\n      interactive\n      elevation={Elevation.TWO}\n      className={classes.cardRoot}\n    >\n      <div className={classes.cardContentContainer}>\n        <h1 className={classes.cardHeader}>\n          <span className={loadingClass}>{name || '...'}</span>\n        </h1>\n        <img\n          alt=\"contact\"\n          src={imgUrl || 'http://i.imgur.com/mbZIBzc.png'}\n          className={classes.cardImage}\n        />\n      </div>\n      <div className={classes.cardTextContainer}>\n        <span className={loadingClass}>{email || '...'}</span>\n        <br />\n        <span className={`${classes.cardTextGroup} ${loadingClass}`}>\n          {groupNames || 'Without group'}\n        </span>\n      </div>\n      <div className={classes.buttonContainer}>\n        <Button onClick={onEditClick} text=\"Edit\" className={classes.button} />\n        <Button onClick={onDeleteClick} text=\"Delete\" className={classes.button} />\n      </div>\n    </Card>\n  );\n};\n\nContactCard.propTypes = {\n  contact: PropTypes.object.isRequired,\n  onEditClick: PropTypes.func.isRequired,\n  onDeleteClick: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  big: PropTypes.bool,\n  loading: PropTypes.bool,\n};\n\nContactCard.defaultProps = {\n  big: false,\n  loading: false,\n};\n\nexport default injectSheet(styles)(ContactCard);\n","import React from 'react';\nimport posed, { PoseGroup } from 'react-pose';\nimport PropTypes from 'prop-types';\nimport injectSheet from 'react-jss';\nimport { Button } from '@blueprintjs/core';\nimport ContactCard from '../../components/ContactCard';\nimport { useMultiple } from '../../state/helpers/useStateProvider';\nimport Contacts, { actions as ContactsActions, selectors as ContactsSelectors } from '../../state/contacts';\nimport Global from '../../state/global';\nimport { actions as HistoryActions } from '../../state/history';\n\nconst styles = {\n  contactListItem: {\n    '&.bp3-tag.bp3-interactive': {\n      display: 'flex',\n      justifyContent: 'space-between',\n      height: '60px',\n      paddingLeft: '8px',\n      margin: '3px',\n      backgroundColor: '#394b59',\n      color: 'white',\n      boxShadow: '0 0 0 1px rgba(16, 22, 26, 0.2), 0 0 0 rgba(16, 22, 26, 0), 0 1px 1px rgba(16, 22, 26, 0.4)',\n    },\n    '&.bp3-tag.bp3-interactive:hover': {\n      background: '#202B33',\n    },\n    '&.bp3-tag.bp3-interactive.selected': {\n      background: '#5C7080',\n    },\n  },\n  contactListItemImage: {\n    maxWidth: 50,\n    minWidth: 50,\n    maxHeight: 50,\n  },\n  contactListItemTextContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignSelf: 'center',\n    marginLeft: '2rem',\n  },\n  contactListItemText1stLine: {\n    fontWeight: 'bolder',\n  },\n  contactListItemText2ndLine: {\n    fontSize: '12px',\n  },\n  contactListItemAvatar: {\n    width: '50px',\n    height: '50px',\n    fontSize: '35px',\n    backgroundColor: '#182026',\n    color: 'white',\n    textAlign: 'center',\n    lineHeight: '50px',\n    borderRadius: '50px',\n  },\n  contactListRoot: {\n    margin: '0.2em 0 0 0',\n    display: 'flex',\n    flex: '1 0 auto',\n    flexDirection: 'row',\n  },\n  contactListItemsContainer: {\n    display: 'flex',\n    flex: '1 0 auto',\n    flexDirection: 'column',\n  },\n  contactListCardsContainer: {\n    flexWrap: 'wrap',\n  },\n};\n\nconst Pop = posed.div({\n  hoverable: true,\n  init: { scale: 1 },\n  hover: { scale: 1.2 },\n});\n\nconst Item = posed.div({\n  enter: {\n    opacity: 1,\n    transition: ({ i }) => ({ delay: i * 50 }),\n  },\n  exit: { opacity: 0 },\n  props: { i: 0 },\n});\n\nfunction ContactListCards(props) {\n  return props.list.map((contact) => (\n    <ContactCard\n      key={`contact-${contact.id}`}\n      contact={contact}\n      onEditClick={() => HistoryActions.transitionToEditContact({ id: contact.id })}\n      onDeleteClick={() => ContactsActions.deleteContact(contact.id)}\n    />\n  ));\n}\n\nfunction ContactListItems({\n  classes, list, current,\n}) {\n  return (\n    <PoseGroup>\n      {list.map((contact, i) => (\n        <Item key={`contact-${contact.id}`} id={contact.id} i={i}>\n          <div\n            role=\"presentation\"\n            onKeyPress={(e) => (e.key === 'Enter') ? HistoryActions.transitionToContactDetail({ id: contact.id }) : false}\n            onClick={() => HistoryActions.transitionToContactDetail({ id: contact.id })}\n            className={`bp3-tag bp3-interactive ${classes.contactListItem} ${\n              current.id === contact.id ? 'selected' : ''\n            }`}\n          >\n            <div style={{ display: 'flex' }}>\n              {contact.imgUrl ? (\n                <Pop>\n                  <img\n                    src={contact.imgUrl}\n                    alt={contact.name}\n                    className={classes.contactListItemImage}\n                  />\n                </Pop>\n              ) : (\n                <Pop className={classes.contactListItemAvatar}>\n                  { contact.name.substring(0, 1).toUpperCase() }\n                </Pop>\n              )}\n              <div className={classes.contactListItemTextContainer}>\n                <div className={classes.contactListItemText1stLine}>{contact.name}</div>\n                <div className={classes.contactListItemText2ndLine}>{contact.groupNames || 'Without group'}</div>\n              </div>\n            </div>\n            <Pop>\n              <Button\n                icon=\"delete\"\n                onClick={(e) => {\n                  ContactsActions.deleteContact(contact.id);\n                  e.stopPropagation();\n                }}\n              />\n            </Pop>\n          </div>\n        </Item>\n      ))}\n    </PoseGroup>\n  );\n}\n\nconst ContactList = React.memo((props) => {\n  const { contacts, global } = useMultiple({\n    contacts: Contacts,\n    global: Global,\n  }, {\n    contacts: ContactsSelectors.contactList,\n    global: ContactsSelectors.contactListGlobal,\n  }, 'ContactList');\n\n  return (\n    <div className={props.classes.contactListRoot}>\n      {global.mode === 'list' ? (\n        <div className={props.classes.contactListItemsContainer}>\n          <ContactListItems {...props} current={contacts.current} list={Object.values(contacts.list)} />\n        </div>\n      ) : (\n        <div className={props.classes.contactListCardsContainer}>\n          <ContactListCards {...props} current={contacts.current} list={Object.values(contacts.list)} />\n        </div>\n      )}\n    </div>\n  );\n});\n\nContactListCards.propTypes = {\n  list: PropTypes.array.isRequired,\n  route: PropTypes.object.isRequired,\n};\n\nContactListItems.propTypes = {\n  list: PropTypes.array.isRequired,\n  current: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nContactList.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default injectSheet(styles)(ContactList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport injectSheet from 'react-jss';\nimport ContactCard from '../../components/ContactCard';\nimport Contacts, { actions as ContactsActions, selectors as ContactsSelectors } from '../../state/contacts';\nimport { actions as HistoryActions } from '../../state/history';\nimport { useMultiple } from '../../state/helpers/useStateProvider';\n\nconst styles = {\n  contactDetailRoot: {\n    margin: '0.5em 1em',\n    width: '300px',\n  },\n};\n\nfunction ContactPage(props) {\n  const { contacts } = useMultiple({ contacts: Contacts }, { contacts: ContactsSelectors.contactDetail }, 'ContactDetail');\n\n  return (\n    <div className={props.classes.contactDetailRoot}>\n      <ContactCard\n        big\n        contact={contacts.current}\n        loading={contacts.loading}\n        onEditClick={() => HistoryActions.transitionToEditContact(props.route.params)}\n        onDeleteClick={() => ContactsActions.deleteContact(props.route.params.id)}\n      />\n    </div>\n  );\n}\n\nContactPage.propTypes = {\n  route: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default injectSheet(styles)(ContactPage);\n","import { requiredValidation, maxLength } from '../../globals/validators';\n\nexport default function validate(values) {\n  const errors = {};\n  if (!requiredValidation(values.name)) {\n    errors.name = 'Name is required';\n  } else if (!maxLength(values.name, 4)) {\n    errors.name = 'Name has to 4 o more characters';\n  }\n  return errors;\n}\n","import { state as stateCreate, update } from 'bey';\nimport { actions as SnackbarActions } from '../snackbar';\nimport {\n  getGroupsService,\n  getGroupService,\n  postGroupService,\n  updateGroupService,\n} from '../../services/groups';\nimport { actions as HistoryActions } from '../history';\nimport loading from '../helpers/loading';\n\nconst groups = stateCreate({\n  list: {},\n  current: {},\n});\n\nasync function loadData(id) {\n  let groupsResponse;\n  if (id) {\n    groupsResponse = await getGroupService(id);\n    update(groups, (state) => {\n      state.current = groupsResponse;\n    });\n  } else {\n    groupsResponse = await getGroupsService();\n    update(groups, (state) => {\n      state.list = groupsResponse;\n    });\n  }\n}\n\nasync function saveGroup(group) {\n  try {\n    if (group.id) {\n      await updateGroupService(group);\n      SnackbarActions.setMessage('Group updated successfully');\n    } else {\n      await postGroupService(group);\n      SnackbarActions.setMessage('Group created successfully');\n    }\n\n    update(groups, (state) => {\n      state.current = group;\n    });\n  } catch (error) {\n    SnackbarActions.displayError(error);\n  }\n\n  HistoryActions.goBack();\n}\n\nconst exported = {\n  name: 'groups',\n  state: groups,\n  actions: { loadData, saveGroup },\n};\nexport const { state, actions } = exported;\nexport default loading(exported);\n","import React, { Component } from 'react';\nimport { Subscribe } from 'bey';\nimport PropTypes from 'prop-types';\nimport injectSheet from 'react-jss';\nimport { Form, Field } from 'react-final-form';\nimport { Button, Card, Elevation } from '@blueprintjs/core';\nimport FormTextField from '../../components/FormTextField';\nimport validate from './form-validations';\nimport { actions as GroupActions, state as GroupState } from '../../state/groups';\n\nconst styles = {\n  formCard: {\n    width: '300px',\n    margin: '0.5em 1em',\n    padding: '1em',\n  },\n  formContainer: {\n    paddingTop: '16px',\n  },\n  buttonsContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n};\n\nclass CreateOrEditGroupPage extends Component {\n  componentDidMount() {\n    const { id } = this.props.route.params;\n    if (id) {\n      GroupActions.loadData(id);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.route.params.id !== nextProps.route.params.id) {\n      GroupActions.loadData(nextProps.route.params.id);\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <Subscribe to={GroupState}>\n        {(contacts) => (\n          <Form\n            onSubmit={GroupActions.saveGroup}\n            validate={validate}\n            initialValues={contacts.current}\n            render={({\n              handleSubmit, pristine, invalid, submitting, form: { reset },\n            }) => (\n              <Card\n                interactive\n                elevation={Elevation.TWO}\n                className={classes.formCard}\n              >\n                <form className={classes.formContainer} onSubmit={handleSubmit}>\n                  <Field name=\"name\" label=\"Name\" placeholder=\"Name\" component={FormTextField} />\n                  <div className={classes.buttonsContainer}>\n                    <Button\n                      icon=\"floppy-disk\"\n                      intent=\"success\"\n                      type=\"submit\"\n                      disabled={pristine || submitting || invalid}\n                      text=\"Save group\"\n                    />\n                    <Button\n                      icon=\"refresh\"\n                      intent=\"danger\"\n                      onClick={reset}\n                      disabled={pristine || submitting}\n                      text=\"Reset values\"\n                    />\n                  </div>\n                </form>\n              </Card>\n            )}\n          />\n        )}\n      </Subscribe>\n    );\n  }\n}\n\nCreateOrEditGroupPage.propTypes = {\n  route: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default injectSheet(styles)(CreateOrEditGroupPage);\n","import React, { useEffect, useState } from 'react';\nimport Sidebar from 'react-sidebar';\nimport PropTypes from 'prop-types';\nimport injectSheet from 'react-jss';\nimport { Button } from '@blueprintjs/core';\nimport { state as GlobalState, actions as GlobalActions } from '../../state/global';\n\nconst styles = {\n  sidebar: {\n    root: { position: 'initial' },\n    content: { display: 'none' },\n    overlay: { display: 'none' },\n    sidebar: { background: '#30404d', paddingTop: '3.5rem' },\n  },\n};\n\nconst mql = window.matchMedia('(min-width: 800px)');\n\nfunction DrawerMenu(props) {\n  const [state, setState] = useState({ isSmallScreen: !mql.matches, isOpen: true });\n\n  function mediaQueryChanged() {\n    setState({ ...state, isSmallScreen: !mql.matches });\n  }\n\n  function isOpenChanged() {\n    const isOpen = GlobalState.get().menu.right;\n    if (isOpen !== state.isOpen) {\n      setState({ ...state, isOpen });\n    }\n  }\n\n  useEffect(() => {\n    mql.addListener(mediaQueryChanged);\n    GlobalState.on(isOpenChanged);\n    return function cleanup() {\n      mql.removeListener(mediaQueryChanged);\n      GlobalState.off(isOpenChanged);\n    };\n  });\n\n  const { isOpen } = state;\n\n  if (!state.isSmallScreen) {\n    return props.children;\n  }\n  return (\n    <Sidebar\n      open={isOpen}\n      pullRight\n      touch\n      styles={styles.sidebar}\n      onSetOpen={(open) => {\n        GlobalActions.setRightMenuVisibility(open);\n      }}\n      sidebar={(\n        <div>\n          <Button\n            className=\"bp3-minimal\"\n            icon=\"cross\"\n            onClick={() => GlobalActions.setRightMenuVisibility(false)}\n          />\n          {props.children}\n        </div>\n      )}\n    >\n      {\n        <Button\n          className=\"bp3-minimal\"\n          icon=\"menu\"\n          onClick={() => GlobalActions.setRightMenuVisibility(!isOpen)}\n        />\n      }\n    </Sidebar>\n  );\n}\n\nDrawerMenu.propTypes = {\n  children: PropTypes.object.isRequired,\n  // classes: PropTypes.object.isRequired,\n};\n\nexport default injectSheet(styles)(DrawerMenu);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport injectSheet from 'react-jss';\nimport About from '../containers/About';\nimport ContactForm from '../containers/ContactForm';\nimport ContactList from '../containers/ContactList';\nimport ContactDetail from '../containers/ContactDetail';\nimport GroupForm from '../containers/GroupForm';\nimport DrawerMenu from '../containers/Menu/DrawerMenu';\nimport { ROUTES } from './routes';\n\nconst styles = {\n  contactDetailsLayout: {\n    display: 'flex',\n    flex: '1 0 auto',\n  },\n  editContactLayout: {\n    display: 'flex',\n    flex: '1 0 auto',\n  },\n};\n\nfunction ComponentSelector({ route, classes }) {\n  if (!route) {\n    return <About route={route} />;\n  }\n\n  switch (route.name) {\n    case ROUTES.ADD_GROUP:\n      return <GroupForm route={route} />;\n    case ROUTES.CONTACT_DETAILS:\n      return (\n        <div className={classes.contactDetailsLayout}>\n          <ContactList />\n          <DrawerMenu>\n            <ContactDetail route={route} />\n          </DrawerMenu>\n        </div>\n      );\n    case ROUTES.LIST_CONTACTS:\n      return <ContactList route={route} />;\n    case ROUTES.ADD_CONTACT:\n      return <ContactForm route={route} />;\n    case ROUTES.EDIT_CONTACT:\n      return (\n        <div className={classes.editContactLayout}>\n          <ContactList />\n          <DrawerMenu>\n            <ContactForm route={route} />\n          </DrawerMenu>\n        </div>\n      );\n    case ROUTES.HOME:\n    default:\n      return <About route={route} />;\n  }\n}\n\nComponentSelector.propTypes = {\n  route: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default injectSheet(styles)(ComponentSelector);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  MenuItem, Menu, Popover, Button, Position,\n} from '@blueprintjs/core';\n\nconst IconElementList = ({ changeListMode }) => (\n  <Popover\n    content={(\n      <Menu>\n        <MenuItem text=\"List\" onClick={() => changeListMode('list')} />\n        <MenuItem text=\"Card\" onClick={() => changeListMode('card')} />\n      </Menu>\n    )}\n    position={Position.RIGHT_TOP}\n  >\n    <Button icon=\"more\" />\n  </Popover>\n);\n\nIconElementList.propTypes = {\n  changeListMode: PropTypes.func.isRequired,\n};\n\nexport default IconElementList;\n","import React from 'react';\nimport { Subscribe } from 'bey';\nimport PropTypes from 'prop-types';\nimport { Navbar, Button, Alignment } from '@blueprintjs/core';\nimport IconElementList from '../../components/IconElementList';\nimport { state as GlobalState, actions as GlobalActions } from '../../state/global';\nimport { ROUTES } from '../../router/routes';\n\nfunction MyNavbar({\n  route,\n}) {\n  return (\n    <Subscribe to={GlobalState}>\n      {() => (\n        <React.Fragment>\n          <Navbar>\n            <Navbar.Group align={Alignment.LEFT}>\n              <Button\n                className=\"bp3-minimal\"\n                icon=\"menu\"\n                onClick={GlobalActions.toggleLeftMenu}\n              />\n              <Navbar.Divider />\n              <Navbar.Heading>Contacts app</Navbar.Heading>\n            </Navbar.Group>\n            <Navbar.Group align={Alignment.RIGHT}>\n              {route.name === ROUTES.LIST_CONTACTS ? (\n                <IconElementList changeListMode={GlobalActions.changeMode} />\n              ) : null}\n            </Navbar.Group>\n          </Navbar>\n        </React.Fragment>\n      )}\n    </Subscribe>\n  );\n}\n\nMyNavbar.propTypes = {\n  route: PropTypes.object.isRequired,\n};\n\nexport default MyNavbar;\n","import React from 'react';\nimport {\n  Toaster, Toast, Position, ProgressBar,\n} from '@blueprintjs/core';\nimport Global, { selectors as GlobalSelectors } from '../../state/global';\nimport { useMultiple } from '../../state/helpers/useStateProvider';\n\nfunction Loader() {\n  const { global } = useMultiple({ global: Global }, { global: GlobalSelectors.loader }, 'Loader');\n\n  return (\n    <Toaster position={Position.TOP}>\n      {global.loading.state ? (\n        <Toast\n          message={(\n            <div>\n              <span>{`Loading ${global.loading.message}...`}</span>\n              <ProgressBar />\n            </div>\n          )}\n        />\n      ) : null}\n    </Toaster>\n  );\n}\n\nexport default Loader;\n","import React from 'react';\nimport { Toaster, Toast, Position } from '@blueprintjs/core';\nimport { Subscribe } from 'bey';\nimport { state as SnackbarState, actions as SnackbarActions } from '../../state/snackbar';\n\nfunction SB() {\n  return (\n    <Subscribe to={SnackbarState}>\n      {(message) => (\n        <Toaster position={Position.BOTTOM}>\n          {message ? (\n            <Toast\n              message={message || ''}\n              timeout={3000}\n              onDismiss={SnackbarActions.close}\n            />\n          ) : null}\n        </Toaster>\n      )}\n    </Subscribe>\n  );\n}\n\nexport default SB;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport injectSheet from 'react-jss';\nimport Sidebar from 'react-sidebar';\nimport { Menu, MenuItem } from '@blueprintjs/core';\nimport { actions } from '../../state/history';\nimport Global, { actions as GlobalActions } from '../../state/global';\nimport { ROUTES } from '../../router/routes';\nimport { useMultiple } from '../../state/helpers/useStateProvider';\n\nconst styles = {\n  sidebar: {\n    sidebar: {\n      background: '#30404d',\n    },\n  },\n  leftMenuRoot: {\n    paddingTop: '4rem',\n    '&.selected': {\n      background: '#5C7080',\n    },\n  },\n};\n\nfunction selectMenuOption(e) {\n  actions.transitionToMenuOption(e.target.textContent);\n}\n\nfunction InnerMenu({\n  route, smallScreen, classes,\n}) {\n  function handleClick(e) {\n    selectMenuOption(e);\n    if (smallScreen) {\n      GlobalActions.toggleLeftMenu();\n    }\n  }\n\n  return (\n    <Menu className={classes.leftMenuRoot}>\n      <MenuItem\n        active={route.name === ROUTES.HOME}\n        onClick={handleClick}\n        text=\"About\"\n      />\n      <MenuItem\n        active={\n          [ROUTES.LIST_CONTACTS, ROUTES.CONTACT_DETAILS, ROUTES.EDIT_CONTACT].indexOf(route.name) !== -1\n        }\n        onClick={handleClick}\n        text=\"List\"\n      />\n      <MenuItem\n        active={route.name === ROUTES.ADD_CONTACT}\n        onClick={handleClick}\n        text=\"Add Contact\"\n      />\n      <MenuItem\n        active={route.name === ROUTES.ADD_GROUP}\n        onClick={handleClick}\n        text=\"Add Group\"\n      />\n    </Menu>\n  );\n}\n\nconst mql = window.matchMedia('(min-width: 800px)');\n\nconst StyledInnerMenu = injectSheet(styles)(InnerMenu);\n\nfunction LeftMenu(props) {\n  const [smallScreen, setSmallScreen] = useState(!mql.matches);\n\n  function mediaQueryChanged() {\n    setSmallScreen(!mql.matches);\n  }\n\n  useEffect(() => {\n    mql.addListener(mediaQueryChanged);\n    return function cleanup() {\n      mql.removeListener(mediaQueryChanged);\n    };\n  });\n\n  const { global: visible } = useMultiple({ global: Global }, { global: (state) => state.menu.left }, 'LeftMenu');\n\n  return (\n    () => {\n      if (visible) {\n        if (!smallScreen) {\n          return <StyledInnerMenu smallScreen={smallScreen} {...props} />;\n        }\n        return (\n          <Sidebar\n            open={visible}\n            styles={styles.sidebar}\n            onSetOpen={GlobalActions.toggleLeftMenu}\n            sidebar={<StyledInnerMenu smallScreen={smallScreen} {...props} />}\n          >\n            {false}\n          </Sidebar>\n        );\n      }\n      return false;\n    }\n  )();\n}\n\nInnerMenu.propTypes = {\n  route: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  smallScreen: PropTypes.bool.isRequired,\n};\n\nexport default LeftMenu;\n","import React from 'react';\nimport ComponentSelector from './router/ComponentSelector';\nimport Navbar from './containers/Navbar';\nimport Loader from './containers/Loader';\nimport Snackbar from './containers/Snackbar';\nimport LeftMenu from './containers/Menu/LeftMenu';\nimport History from './state/history';\nimport { useMultiple } from './state/helpers/useStateProvider';\n\nfunction App({\n  ...rest\n}) {\n  const { history: { route } } = useMultiple({ history: History }, undefined, 'App');\n  return (\n    <div className=\"bp3-fill\" style={{ backgroundColor: '#30404d', minHeight: '100vh' }}>\n      <Navbar route={route} />\n      <Loader />\n      <div style={{ display: 'flex' }}>\n        <LeftMenu route={route} />\n        <ComponentSelector route={route} {...rest} />\n      </div>\n      <Snackbar />\n    </div>\n  );\n}\n\nApp.propTypes = {\n\n};\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          // eslint-disable-next-line no-console\n          console.log('This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://goo.gl/SC7cgQ');\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      // eslint-disable-next-line no-param-reassign\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              // eslint-disable-next-line no-console\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              // eslint-disable-next-line no-console\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      // eslint-disable-next-line no-console\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404\n        || response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      // eslint-disable-next-line no-console\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { StateInspector } from 'reinspect';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nconst Root = () => (\n  <StateInspector>\n    <App />\n  </StateInspector>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}