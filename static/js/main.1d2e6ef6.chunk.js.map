{"version":3,"sources":["containers/About/index.js","components/FormTextField.js","components/FormMultiSelectField.js","globals/validators.js","containers/ContactForm/form-validations.js","state/snackbar/index.js","services/index.js","services/groups.js","services/contacts.js","router/routes.js","router/router-config.js","state/helpers/loading.js","state/helpers/changelog.js","state/helpers/useStateProvider.js","state/helpers/index.js","state/helpers/modified.js","state/global/index.js","state/history/index.js","state/contacts/index.js","containers/ContactForm/index.js","components/ContactCard.js","containers/ContactList/index.js","containers/ContactDetail/index.js","containers/GroupForm/form-validations.js","state/groups/index.js","containers/GroupForm/index.js","containers/Menu/DrawerMenu.js","router/ComponentSelector.js","components/IconElementList.js","containers/Navbar/index.js","containers/Loader/index.js","containers/Snackbar/index.js","containers/Menu/LeftMenu.js","App.js","registerServiceWorker.js","index.js"],"names":["injectSheet","cardRoot","margin","cardText1stLine","fontSize","cardText2ndLine","paddingTop","paddingBottom","_ref","classes","react_default","a","createElement","card","interactive","elevation","Elevation","TWO","className","FormTextField","input","label","placeholder","_ref$meta","meta","touched","error","custom","Object","objectWithoutProperties","formGroup","helperText","intent","undefined","inputGroup","assign","defaultProps","contactGroupMultiSelect","&.bp3-popover-target","width","contactGroupTagInputProps","& .bp3-input-ghost","options","_ref$input","value","onChange","indexesOptions","length","forEach","o","multiSelect","shouldDismissPopover","noResults","menuItem","disabled","text","popoverProps","minimal","targetClassName","items","selectedItems","onItemSelect","opt","indexOf","concat","toConsumableArray","splice","tagInputProps","fill","onRemove","index","itemRenderer","_ref2","handleClick","active","key","onClick","tagRenderer","requiredValidation","isEmail","test","isUrl","RegExp","maxLength","validate","values","errors","email","name","imgUrl","snackbar","stateCreate","exported","state","actions","setMessage","message","update","displayError","close","firebase","apiKey","authDomain","databaseURL","BASE_URL","getGroupsService","firebaseConnection","database","ref","Promise","resolve","reject","once","groupsDB","groupsDBValue","val","groups","keys","map","id","push","objectSpread","err","getGroupService","groupDB","groupDBValue","postGroupService","group","post","set","updateGroupService","others","getContactsService","contactsDB","contactsDBValue","contacts","getContactService","contactDB","contactDBValue","postContactService","contact","updateContactService","deleteContactService","ROUTES","HOME","ADD_CONTACT","LIST_CONTACTS","CONTACT_DETAILS","ADD_GROUP","EDIT_CONTACT","routes","path","router","createRouter","defaultRoute","autoCleanup","usePlugin","loggerPlugin","browserPlugin","useHash","forceDeactivate","configureRouter","start","navigate","loading","stateModule","arguments","localLoading","actionName","isSync","originalAction","_plusLoading","asyncToGenerator","regenerator_default","mark","_callee","_len","args","_key","result","_args","wrap","_context","prev","next","console","groupCollapsed","Array","log","groupEnd","GlobalActions","setLoading","get","apply","sent","abrupt","stop","this","changelogs","useMultipleStates","finalState","stateModules","module","_useState","useState","_useState2","slicedToArray","setState","handler","useCallback","newState","useEffect","on","off","Error","updateStateDeferred","setStateFunction","oldState","newPartialState","moduleName","futureState","componentName","listeners","changes","timeouts","setTimeout","moduleNameStr","change","i","defineProperty","totalChanges","Date","getMilliseconds","diffString","executeUpdateState","t","clearTimeout","useMultiple","stateModulesObject","selectorsObject","mergedState","moduleKeys","selector","_useState3","_useState4","currentState","shallowEqual","React","StateInspector","loadingModule","modified","initState","setModified","modifiedFlag","changelog","Symbol","previousSnap","previousValue","original","snapshot","updatedAt","now","useStateProvider","_len2","modules","_key2","LIST_MODE","CARD_MODE","global","total","mode","menu","left","right","changeMode","SnackbarActions","toggleLeftMenu","setRightMenuVisibility","visible","selectors","loader","textToRouter","List","About","Add Contact","Add Group","actionsObject","transitionToEditContact","transitionToContactDetail","transitionToMenuOption","goBack","window","history","back","canDeactivate","route","previousRoute","subscribe","list","current","loadData","groupsResponse","newGroups","contactsResponse","newContacts","t0","groupNames","groupId","join","_callee2","response","_context2","HistoryActions","_callee3","_context3","saveContact","deleteContact","contactForm","contactList","contactListGlobal","contactDetail","CreateOrEditContactPage","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","alertIsOpen","handleCancel","bind","assertThisInitialized","handleContinue","_this2","params","routerProvided","toState","fromState","continue","cancel","nextProps","_this3","alert_alert","cancelButtonText","confirmButtonText","icon","isOpen","onCancel","onConfirm","bey","to","react_final_form_es","onSubmit","initialValues","render","handleSubmit","pristine","invalid","submitting","reset","formCard","formContainer","dirty","component","FormMultiSelectField","buttonsContainer","buttons","type","Component","padding","display","justifyContent","ContactCard","onEditClick","onDeleteClick","big","loadingClass","Classes","SKELETON","cardContentContainer","cardHeader","alt","src","cardImage","cardTextContainer","cardTextGroup","buttonContainer","button","& .bp3-card.bp3-interactive","position","textAlign","height","bottom","color","background","maxHeight","maxWidth","marginRight","Pop","posed","div","hoverable","init","scale","hover","Item","enter","opacity","transition","delay","exit","ContactListCards","components_ContactCard","ContactsActions","ContactListItems","react_pose_es","role","onKeyPress","e","contactListItem","style","contactListItemImage","contactListItemAvatar","substring","toUpperCase","contactListItemTextContainer","contactListItemText1stLine","contactListItemText2ndLine","stopPropagation","ContactList","memo","_useMultiple","Contacts","Global","ContactsSelectors","contactListRoot","contactListItemsContainer","contactListCardsContainer","&.bp3-tag.bp3-interactive","paddingLeft","backgroundColor","boxShadow","&.bp3-tag.bp3-interactive:hover","&.bp3-tag.bp3-interactive.selected","minWidth","flexDirection","alignSelf","marginLeft","fontWeight","lineHeight","borderRadius","flex","flexWrap","contactDetailRoot","saveGroup","CreateOrEditGroupPage","GroupActions","GroupState","form","styles","sidebar","root","content","overlay","mql","matchMedia","isSmallScreen","matches","mediaQueryChanged","isOpenChanged","GlobalState","addListener","removeListener","react_sidebar_esm","open","pullRight","touch","onSetOpen","children","contactDetailsLayout","editContactLayout","containers_About","GroupForm","containers_ContactList","Menu_DrawerMenu","ContactDetail","ContactForm","IconElementList","changeListMode","popover","Position","RIGHT_TOP","MyNavbar","Fragment","navbar","Group","align","Alignment","LEFT","Divider","Heading","RIGHT","components_IconElementList","Loader","GlobalSelectors","toaster","TOP","toast","progressBar","SB","SnackbarState","BOTTOM","timeout","onDismiss","leftMenuRoot","&.selected","StyledInnerMenu","smallScreen","target","textContent","selectMenuOption","LeftMenu","setSmallScreen","App","rest","esm_extends","History","minHeight","Navbar","containers_Loader","Menu_LeftMenu","router_ComponentSelector","Snackbar","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","index_es","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.1d2e6ef6.chunk.js","sourcesContent":["import React from 'react';\nimport { Card, Elevation } from '@blueprintjs/core';\nimport PropTypes from 'prop-types';\nimport injectSheet from 'react-jss';\n\nconst styles = {\n  cardRoot: {\n    margin: '1em',\n  },\n  cardText1stLine: {\n    fontSize: '14px',\n  },\n  cardText2ndLine: {\n    paddingTop: '16px',\n    fontSize: '14px',\n    paddingBottom: '2em',\n  },\n};\n\nfunction About({\n  classes,\n}) {\n  return (\n    <Card interactive elevation={Elevation.TWO} className={classes.cardRoot}>\n      <h1>Contacts App</h1>\n      <div className={classes.cardText1stLine}>Learning Immer (Bey)</div>\n      <div className={classes.cardText2ndLine}>\n        This is a example app using immer and react context + hooks.\n      </div>\n    </Card>\n  );\n}\n\nAbout.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default injectSheet(styles)(About);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputGroup, FormGroup } from '@blueprintjs/core';\n\nfunction FormTextField({\n  input, label, placeholder, meta: { touched, error }, ...custom\n}) {\n  return (\n    <FormGroup\n      helperText={error}\n      label={label}\n      intent={touched && error ? 'danger' : undefined}\n    >\n      <InputGroup\n        placeholder={placeholder}\n        intent={touched && error ? 'danger' : undefined}\n        {...input}\n        {...custom}\n      />\n    </FormGroup>\n  );\n}\n\nFormTextField.propTypes = {\n  input: PropTypes.object.isRequired,\n  label: PropTypes.string.isRequired,\n  meta: PropTypes.object.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  custom: PropTypes.object,\n};\n\nFormTextField.defaultProps = {\n  custom: {},\n};\n\nexport default FormTextField;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MenuItem, FormGroup } from '@blueprintjs/core';\nimport { MultiSelect } from '@blueprintjs/select';\nimport injectSheet from 'react-jss';\n\nconst styles = {\n  contactGroupMultiSelect: {\n    '&.bp3-popover-target': {\n      width: '100%',\n    },\n  },\n  contactGroupTagInputProps: {\n    '& .bp3-input-ghost': {\n      fontSize: '14px',\n    },\n  },\n};\n\nfunction FormMultiSelectField({\n  options,\n  input: {\n    value, onChange,\n  },\n  label,\n  meta: { touched, error },\n  classes,\n  ...custom\n}) {\n  const indexesOptions = {};\n  if (options && options.length > 0) {\n    options.forEach((o) => {\n      indexesOptions[o.value] = o;\n    });\n  }\n\n  return (\n    <FormGroup\n      helperText={error}\n      label={label}\n      intent={touched && error ? 'danger' : undefined}\n    >\n      <MultiSelect\n        shouldDismissPopover={false}\n        noResults={<MenuItem disabled text=\"No results.\" />}\n        popoverProps={{ minimal: true, targetClassName: classes.contactGroupMultiSelect }}\n        items={options}\n        selectedItems={value === '' ? [] : value}\n        onItemSelect={(opt) => {\n          if (value.indexOf(opt.value) === -1) {\n            onChange([...value, opt.value]);\n          } else {\n            value.splice(value.indexOf(opt.value), 1);\n            onChange(value);\n          }\n        }}\n        tagInputProps={{\n          placeholder: 'Select contact groups...',\n          fill: true,\n          className: classes.contactGroupTagInputProps,\n          onRemove: (opt, index) => {\n            if (value && value.length > 0) {\n              value.splice(index, 1);\n              onChange(value);\n            }\n          },\n        }}\n        itemRenderer={(opt, { handleClick }) => (\n          <MenuItem\n            active={value.indexOf(opt.value) !== -1}\n            key={`option-${opt.value}`}\n            text={opt.text}\n            onClick={handleClick}\n          />\n        )}\n        tagRenderer={(opt) => indexesOptions[opt].text}\n        {...custom}\n      />\n    </FormGroup>\n  );\n}\n\nFormMultiSelectField.propTypes = {\n  input: PropTypes.object.isRequired,\n  label: PropTypes.string.isRequired,\n  meta: PropTypes.object.isRequired,\n  options: PropTypes.array.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default injectSheet(styles)(FormMultiSelectField);\n","export const requiredValidation = (value) => value !== undefined && value !== null && value !== '';\n\nexport const isEmail = (value) => {\n  if (value) {\n    const regExp = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i; // eslint-disable-line\n    return regExp.test(value);\n  }\n  return true;\n};\n\nexport const isUrl = (value) => {\n  if (value) {\n    const regExp = new RegExp('^(?:(?:https?|ftp)://)(?:S+(?::S*)?@)?(?:(?!10(?:.d{1,3}){3})(?!127(?:.d{1,3}){3})(?!169.254(?:.d{1,3}){2})(?!192.168(?:.d{1,3}){2})(?!172.(?:1[6-9]|2d|3[0-1])(?:.d{1,3}){2})(?:[1-9]d?|1dd|2[01]d|22[0-3])(?:.(?:1?d{1,2}|2[0-4]d|25[0-5])){2}(?:.(?:[1-9]d?|1dd|2[0-4]d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)(?:.(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)*(?:.(?:[a-z\\u00a1-\\uffff]{2,})))(?::d{2,5})?(?:/[^s]*)?');\n    return regExp.test(value);\n  }\n  return true;\n};\n\nexport const maxLength = (value, length) => value && value.length > length;\n","import { requiredValidation, isEmail, isUrl } from '../../globals/validators';\n\nexport default function validate(values) {\n  const errors = {};\n  if (!requiredValidation(values.email)) {\n    errors.email = 'Email is required';\n  } else if (!isEmail(values.email)) {\n    errors.email = 'Email format is incorrect';\n  }\n  if (!requiredValidation(values.name)) {\n    errors.name = 'Name is Required';\n  }\n  if (!isUrl(values.imgUrl)) {\n    errors.imgUrl = 'Invalid url';\n  }\n  return errors;\n}\n","import { state as stateCreate, update } from 'bey';\n\nconst snackbar = stateCreate(null);\n\nfunction setMessage(message) {\n  update(snackbar, () => message);\n}\n\nfunction displayError(error) {\n  let message = 'Unknown error';\n\n  if (error && error.message) {\n    // eslint-disable-next-line prefer-destructuring\n    message = error.message;\n  } else if (typeof error === 'string') {\n    message = error;\n  }\n  update(snackbar, () => message);\n}\n\nfunction close() {\n  update(snackbar, () => null);\n}\n\nconst exported = {\n  name: 'snackbar',\n  state: snackbar,\n  actions: { setMessage, displayError, close },\n};\nexport const { state, actions } = exported;\nexport default exported;\n","import * as firebase from 'firebase';\n\nconst config = {\n  apiKey: 'AIzaSyB1GATIyuA6FNnAUMBz0kXJ62EvlSWx99o',\n  authDomain: 'redux-contacts-app.firebaseapp.com',\n  databaseURL: 'https://redux-contacts-app.firebaseio.com/',\n};\n\nfirebase.initializeApp(config);\n\nexport default firebase;\n","import firebase from './index';\n\nconst BASE_URL = '/groups';\n\nexport function getGroupsService() {\n  const firebaseConnection = firebase.database().ref(`${BASE_URL}`);\n  return new Promise((resolve, reject) => {\n    firebaseConnection.once(\n      'value',\n      (groupsDB) => {\n        const groupsDBValue = groupsDB.val();\n        const groups = [];\n        Object.keys(groupsDBValue).map((id) => groups.push({\n          id,\n          ...groupsDBValue[id],\n        }));\n        return resolve(groups);\n      },\n      (err) => reject(err),\n    );\n  });\n}\n\nexport function getGroupService(id) {\n  const firebaseConnection = firebase.database().ref(`${BASE_URL}/${id}`);\n  return new Promise((resolve, reject) => {\n    firebaseConnection.once(\n      'value',\n      (groupDB) => {\n        const groupDBValue = groupDB.val();\n        groupDBValue.id = id;\n        return resolve(groupDBValue);\n      },\n      (err) => reject(err),\n    );\n  });\n}\n\nexport function postGroupService(group) {\n  const firebaseConnection = firebase.database().ref(`${BASE_URL}`);\n  return new Promise((resolve, reject) => {\n    const post = firebaseConnection.push();\n    post.set(group, (err) => {\n      if (err) {\n        return reject(err);\n      }\n      return resolve({\n        id: post.key,\n        ...group,\n      });\n    });\n  });\n}\n\nexport function updateGroupService({ id, ...others }) {\n  const firebaseConnection = firebase.database().ref(`${BASE_URL}/${id}`);\n  return new Promise((resolve, reject) => {\n    firebaseConnection.set({ ...others }, (err) => {\n      if (err) {\n        return reject(err);\n      }\n      return resolve({\n        id,\n        ...others,\n      });\n    });\n  });\n}\n\nexport function deleteGroupService(id) {\n  const firebaseConnection = firebase.database().ref(`${BASE_URL}/${id}`);\n  return new Promise((resolve, reject) => {\n    firebaseConnection.set(null, (err) => {\n      if (err) {\n        return reject(err);\n      }\n      return resolve({ id });\n    });\n  });\n}\n","import firebase from './index';\n\nconst BASE_URL = '/jony';\n\nexport function getContactsService() {\n  const firebaseConnection = firebase.database().ref(`${BASE_URL}`);\n  return new Promise((resolve, reject) => {\n    firebaseConnection.once(\n      'value',\n      (contactsDB) => {\n        const contactsDBValue = contactsDB.val();\n        const contacts = [];\n        Object.keys(contactsDBValue).map((id) => contacts.push({\n          id,\n          ...contactsDBValue[id],\n        }));\n        return resolve(contacts);\n      },\n      (err) => reject(err),\n    );\n  });\n}\n\nexport function getContactService(id) {\n  const firebaseConnection = firebase.database().ref(`${BASE_URL}/${id}`);\n  return new Promise((resolve, reject) => {\n    firebaseConnection.once(\n      'value',\n      (contactDB) => {\n        const contactDBValue = contactDB.val();\n        if (contactDBValue) {\n          contactDBValue.id = id;\n        }\n        return resolve(contactDBValue);\n      },\n      (err) => reject(err),\n    );\n  });\n}\n\nexport function postContactService(contact) {\n  const firebaseConnection = firebase.database().ref(`${BASE_URL}`);\n  return new Promise((resolve, reject) => {\n    const post = firebaseConnection.push();\n    post.set(contact, (err) => {\n      if (err) {\n        return reject(err);\n      }\n      return resolve({\n        id: post.key,\n        ...contact,\n      });\n    });\n  });\n}\n\nexport function updateContactService({ id, ...others }) {\n  const firebaseConnection = firebase.database().ref(`${BASE_URL}/${id}`);\n  return new Promise((resolve, reject) => {\n    firebaseConnection.set({ ...others }, (err) => {\n      if (err) {\n        return reject(err);\n      }\n      return resolve({\n        id,\n        ...others,\n      });\n    });\n  });\n}\n\nexport function deleteContactService(id) {\n  const firebaseConnection = firebase.database().ref(`${BASE_URL}/${id}`);\n  return new Promise((resolve, reject) => {\n    firebaseConnection.set(null, (err) => {\n      if (err) {\n        return reject(err);\n      }\n      return resolve({ id });\n    });\n  });\n}\n","export const ROUTES = {\n  HOME: 'home',\n  ADD_CONTACT: 'addContact',\n  LIST_CONTACTS: 'listContacts',\n  CONTACT_DETAILS: 'contactDetails',\n  ADD_GROUP: 'addGroup',\n  EDIT_CONTACT: 'editContact',\n};\n\nexport const routes = [\n  { name: ROUTES.HOME, path: '/' },\n  { name: ROUTES.ADD_CONTACT, path: '/add' },\n  { name: ROUTES.LIST_CONTACTS, path: '/list' },\n  { name: ROUTES.EDIT_CONTACT, path: '/edit/:id' },\n  { name: ROUTES.CONTACT_DETAILS, path: '/detail/:id' },\n  { name: ROUTES.ADD_GROUP, path: '/group/add' },\n];\n","import createRouter from 'router5';\nimport loggerPlugin from 'router5-plugin-logger';\nimport browserPlugin from 'router5-plugin-browser';\nimport { routes } from './routes';\n\nfunction configureRouter() {\n  const router = createRouter(routes, {\n    defaultRoute: 'home',\n    autoCleanup: false,\n  });\n\n  // Plugins\n  router.usePlugin(\n    loggerPlugin,\n    browserPlugin({\n      useHash: true,\n      forceDeactivate: false,\n    }),\n  );\n\n  return router;\n}\n\nconst router = configureRouter();\nrouter.start();\n\nexport const { navigate } = router;\nexport default router;\n","import { update } from 'bey';\nimport { actions as GlobalActions } from '../global';\n\nfunction isAsync(fn) {\n  return fn.isSync !== true;\n  // return fn.constructor.name === 'AsyncFunction';\n}\n\nexport default function loading(stateModule, options = { localLoading: false }) {\n  if (stateModule.actions && Object.values(stateModule.actions).length > 0) {\n    Object.keys(stateModule.actions).forEach((actionName) => {\n      if (\n        stateModule.actions[actionName]\n        && typeof stateModule.actions[actionName] === 'function'\n        && isAsync(stateModule.actions[actionName])\n      ) {\n        const originalAction = stateModule.actions[actionName];\n        /* eslint-disable no-param-reassign */\n        stateModule.actions[actionName] = async function plusLoading(...args) {\n          /* eslint-disable no-console */\n          console.groupCollapsed(`[${stateModule.name}] executing action: ${actionName}()`);\n          console.log(`Using arguments: ${args}`);\n          console.groupEnd();\n          GlobalActions.setLoading(true, stateModule.name);\n          if (options.localLoading) {\n            const loadingBefore = stateModule.state.get().loading;\n            if (loadingBefore !== true) {\n              update(stateModule.state, (state) => {\n                state.loading = true;\n              });\n            }\n          }\n          const result = await originalAction(...args);\n          if (options.localLoading) {\n            const loadingAfter = stateModule.state.get().loading;\n            if (loadingAfter !== false) {\n              update(stateModule.state, (state) => {\n                state.loading = false;\n              });\n            }\n          }\n          GlobalActions.setLoading(false, stateModule.name);\n          return result;\n        };\n      }\n    });\n  }\n\n  return stateModule;\n}\n","import { original } from 'immer';\nimport { diffString } from 'json-diff';\nimport { state as stateCreate, update } from 'bey';\n\nconst changelogs = stateCreate({});\n\nexport default function changelog(stateModule) {\n  if (stateModule.actions && typeof stateModule.actions === 'object') {\n    const key = stateModule.name || Symbol('state module name is not defined');\n\n    changelogs.set({\n      ...changelogs.get(),\n      [key]: { changes: [] },\n    });\n\n    stateModule.state.on(() => {\n      const newState = stateModule.state.get();\n      update(changelogs, (state) => {\n        const previousSnap = state[key].changes[state[key].changes.length - 1];\n        const previousValue = previousSnap ? original(previousSnap).snapshot : undefined;\n        state[key].changes.push({ snapshot: newState, updatedAt: Date.now() });\n        /* eslint-disable no-console */\n        console.groupCollapsed(`[${key}] state changed at: ${new Date().getMilliseconds()}`); // at ${new Date().getMilliseconds()}\n        console.log('FROM:', previousValue);\n        console.log('TO:', newState);\n        console.log('DIFF:');\n        console.log(diffString(previousValue, newState));\n        console.groupEnd();\n      });\n    });\n  }\n\n  return stateModule;\n}\n","\nimport React, { useEffect, useCallback } from 'react';\nimport { useState, StateInspector } from 'reinspect';\nimport shallowEqual from 'fbjs/lib/shallowEqual';\nimport { diffString } from 'json-diff';\n\nReact.createElement(StateInspector);\n\nexport function useMultipleStates(...stateModules) {\n  const finalState = [];\n\n  if (stateModules && stateModules.length > 0) {\n    stateModules.forEach((module) => {\n      const [state, setState] = useState(module.state.get());\n\n      finalState.push(state);\n\n      const handler = useCallback(() => {\n        const newState = module.state.get();\n        if (newState !== state) {\n          setState(newState);\n        }\n      });\n\n      useEffect(() => {\n        module.state.on(handler);\n        return function cleanup() {\n          module.state.off(handler);\n        };\n      });\n    });\n\n    return finalState;\n  }\n  throw new Error('useMultipleStates requires at least one argument.');\n}\n\n\nfunction updateStateDeferred(setStateFunction, oldState, newPartialState, moduleName, futureState, componentName, listeners) {\n  /* eslint-disable no-param-reassign */\n  futureState.changes.push({ oldState, newPartialState, moduleName });\n  let timeouts = [];\n  timeouts.push(setTimeout(() => {\n    if (futureState.changes.length > 0) {\n      let newState = { ...futureState.oldState };\n      let moduleNameStr = '';\n      futureState.changes.forEach((change, i) => {\n        moduleNameStr += change.moduleName + ((i !== futureState.changes.length - 1) ? ' + ' : '');\n        newState = { ...newState, [change.moduleName]: change.newPartialState };\n      });\n      executeUpdateState(setStateFunction, oldState, newState, moduleNameStr, futureState.changes.length, componentName, listeners);\n      futureState.oldState = newState;\n      futureState.changes = [];\n      timeouts.forEach((t) => clearTimeout(t));\n      timeouts = [];\n    }\n  }, 0));\n}\n\nfunction executeUpdateState(setStateFunction, oldState, newState, moduleName, totalChanges, componentName, listeners) {\n  /* eslint-disable no-console */\n  console.groupCollapsed(`[${moduleName}] rendering [${totalChanges}] changes from ${componentName} at: ${new Date().getMilliseconds()}`);\n  console.log('NEW STATE: ', newState);\n  console.log(diffString(oldState, newState));\n  console.groupEnd();\n  if (listeners > 0) {\n    return setStateFunction(newState);\n  }\n  return false;\n}\n\nexport function useMultiple(stateModulesObject, selectorsObject = {}, componentName) {\n  let mergedState = {};\n\n  if (stateModulesObject && typeof stateModulesObject === 'object' && Object.keys(stateModulesObject).length > 0) {\n    const moduleKeys = Object.keys(stateModulesObject);\n    moduleKeys.forEach((key) => {\n      const module = stateModulesObject[key];\n      const state = module.state.get();\n      const selector = selectorsObject[key];\n      mergedState = { ...mergedState, [module.name]: (selector) ? selector(state) : state };\n    });\n\n    const [state, setState] = useState(mergedState, componentName);\n\n    const futureState = { oldState: state, newState: {}, changes: [] };\n    let listeners = 0;\n    moduleKeys.forEach((key) => {\n      const module = stateModulesObject[key];\n      const selector = selectorsObject[key];\n\n      const handler = () => {\n        const currentState = module.state.get();\n        const newState = (selector) ? selector(currentState) : currentState;\n        // console.log('updateStateDeferred', module.name ,new Date().getMilliseconds());\n        if (!shallowEqual(newState, state[module.name])) {\n          // console.log('updateStateDeferred changed',new Date().getMilliseconds());\n          updateStateDeferred(setState, state, newState, module.name, futureState, componentName, listeners);\n        }\n      };\n\n      useEffect(() => {\n        listeners += 1;\n        module.state.on(handler);\n        return function cleanup() {\n          listeners -= 1;\n          module.state.off(handler);\n        };\n      });\n    });\n\n    return state;\n  }\n  throw new Error('useMultiple requires at least one object argument with one moduleState key.');\n}\n\nexport default function useStateProvider(stateModule) {\n  if (stateModule && typeof stateModule === 'object' && stateModule.state && typeof stateModule.state === 'object') {\n    stateModule.state.useState = function useStateHook(...modules) {\n      if (modules) {\n        return useMultipleStates(...modules);\n      }\n      return useMultipleStates(stateModule);\n    };\n  }\n\n  return stateModule;\n}\n","import loadingModule from './loading';\nimport modifiedModule from './modified';\nimport changelogModule from './changelog';\nimport contextModule from './context';\nimport useStateProviderModule from './useStateProvider';\n\nexport const loading = loadingModule;\nexport const modified = modifiedModule;\nexport const changelog = changelogModule;\nexport const addContext = contextModule;\nexport const useStateProvider = useStateProviderModule;\n","import { update } from 'bey';\n\nexport default function modified(stateModule) {\n  /* eslint-disable no-param-reassign */\n  if (stateModule.actions && typeof stateModule.actions === 'object') {\n    const initState = stateModule.state.get();\n    stateModule.state.set({ ...initState, modified: false });\n    stateModule.actions.setModified = function setModified(modifiedFlag) {\n      const currentState = stateModule.state.get();\n      if (currentState.modified !== modifiedFlag) {\n        update(stateModule.state, (state) => {\n          state.modified = modifiedFlag;\n        });\n      }\n    };\n  }\n\n  return stateModule;\n}\n","import { state as stateCreate, update } from 'bey';\nimport { actions as SnackbarActions } from '../snackbar';\nimport { changelog } from '../helpers';\n\nconst LIST_MODE = 'list';\nconst CARD_MODE = 'card';\n\nconst global = stateCreate({\n  loading: { state: false, total: 0, message: null },\n  mode: LIST_MODE,\n  menu: {\n    left: true,\n    right: true,\n  },\n});\n\nfunction setLoading(loading, message) {\n  update(global, (state) => {\n    if (loading) {\n      state.loading.total += 1;\n    } else {\n      state.loading.total -= 1;\n    }\n\n    state.loading.state = state.loading.total > 0;\n    state.loading.message = message;\n  });\n}\n\nfunction changeMode(mode) {\n  if (mode === LIST_MODE || mode === CARD_MODE) {\n    update(global, (state) => {\n      state.mode = mode;\n    });\n    SnackbarActions.setMessage(`Mode changed to: ${mode}`);\n  }\n}\n\nfunction toggleLeftMenu() {\n  update(global, (state) => {\n    state.menu.left = !state.menu.left;\n  });\n}\n\nfunction setRightMenuVisibility(visible) {\n  update(global, (state) => {\n    state.menu.right = visible;\n  });\n}\n\nfunction loader(state) {\n  return { loading: state.loading };\n}\n\nconst exported = {\n  name: 'global',\n  state: global,\n  actions: {\n    setLoading, changeMode, toggleLeftMenu, setRightMenuVisibility,\n  },\n  selectors: {\n    loader,\n  },\n};\nexport const { state, actions, selectors } = exported;\nexport default changelog(exported);\n","import { state as stateCreate, update } from 'bey';\nimport router, { navigate } from '../../router/router-config';\nimport { ROUTES } from '../../router/routes';\nimport { actions as GlobalActions } from '../global';\n\n\nconst textToRouter = {\n  List: ROUTES.LIST_CONTACTS,\n  About: ROUTES.HOME,\n  'Add Contact': ROUTES.ADD_CONTACT,\n  'Add Group': ROUTES.ADD_GROUP,\n};\n\nconst actionsObject = {\n  transitionToEditContact: (id) => {\n    GlobalActions.setRightMenuVisibility(true);\n    navigate(ROUTES.EDIT_CONTACT, { id });\n  },\n  transitionToContactDetail: (id) => {\n    GlobalActions.setRightMenuVisibility(true);\n    navigate(ROUTES.CONTACT_DETAILS, { id });\n  },\n  transitionToMenuOption: (text) => navigate(textToRouter[text]),\n  goBack: () => window.history.back(),\n  router: {\n    canDeactivate: router.canDeactivate,\n  },\n};\n\nconst history = stateCreate({\n  route: {},\n  previousRoute: {},\n});\n\nconst exported = {\n  name: 'history',\n  state: history,\n  actions: actionsObject,\n};\n\nrouter.subscribe((change) => {\n  update(history, (state) => {\n    // console.log('History route changed:', change);\n    state.route = change.route;\n    state.previousRoute = change.previousRoute;\n  });\n});\n\nexport const { state, actions } = exported;\nexport default exported;\n","import { state as stateCreate, update } from 'bey';\nimport { actions as SnackbarActions } from '../snackbar';\nimport { getGroupsService } from '../../services/groups';\nimport {\n  getContactsService,\n  getContactService,\n  updateContactService,\n  postContactService,\n  deleteContactService,\n} from '../../services/contacts';\nimport { actions as HistoryActions } from '../history';\nimport {\n  loading, modified, changelog, useStateProvider,\n} from '../helpers';\n\nconst contacts = stateCreate({\n  list: {},\n  groups: {},\n  current: {},\n});\n\nasync function loadData(id) {\n  const groupsResponse = await getGroupsService();\n  const newGroups = {};\n\n  groupsResponse.forEach((group) => {\n    newGroups[group.id] = group;\n  });\n\n  let contactsResponse;\n  if (id) {\n    contactsResponse = [await getContactService(id)];\n  } else {\n    contactsResponse = await getContactsService();\n  }\n\n  const newContacts = {};\n\n  contactsResponse.forEach((contact) => {\n    if (contact) {\n      if (contact.groups && contact.groups.length > 0) {\n        /* eslint-disable-next-line no-param-reassign */\n        contact.groupNames = contact.groups\n          .map((groupId) => {\n            if (newGroups[groupId]) {\n              return newGroups[groupId].name;\n            }\n            return '';\n          })\n          .join(', ');\n      }\n\n      newContacts[contact.id] = contact;\n    }\n  });\n\n  update(contacts, (state) => {\n    if (id) {\n      state.current = newContacts[id] || {};\n      // state.modified = false;\n    } else {\n      state.list = newContacts;\n    }\n\n    state.groups = newGroups;\n  });\n}\n\nasync function saveContact(contact) {\n  try {\n    let response;\n\n    if (contact.id) {\n      response = await updateContactService(contact);\n    } else {\n      response = await postContactService(contact);\n    }\n\n    // eslint-disable-next-line no-console\n    console.log('current contact updated:', response);\n\n    update(contacts, (state) => {\n      state.current = contact;\n      state.modified = false;\n    });\n\n    SnackbarActions.setMessage(`Contact ${contact.id ? 'updated' : 'created'} successfully`);\n  } catch (error) {\n    SnackbarActions.displayError(error);\n  }\n  HistoryActions.goBack();\n}\n\nasync function deleteContact(id) {\n  try {\n    if (id) {\n      await deleteContactService(id);\n      update(contacts, (state) => {\n        state.current = {};\n      });\n\n      SnackbarActions.setMessage('Contact deleted successfully');\n      loadData();\n    }\n  } catch (error) {\n    SnackbarActions.displayError(error);\n  }\n  HistoryActions.goBack();\n}\n\nfunction contactForm(state) {\n  return { current: state.current, groups: state.groups };\n}\n\nfunction contactDetail(state) {\n  return { current: state.current, loading: state.loading };\n}\n\nfunction contactList(state) {\n  return { current: state.current, list: state.list, groups: state.groups };\n}\n\nfunction contactListGlobal(state) {\n  return { mode: state.mode };\n}\n\nconst exported = {\n  name: 'contacts',\n  state: contacts,\n  actions: { loadData, saveContact, deleteContact },\n  selectors: {\n    contactForm, contactList, contactListGlobal, contactDetail,\n  },\n};\n\nexport const { actions, state, selectors } = exported;\nexport default useStateProvider(changelog(modified(loading(exported, { localLoading: true }))));\n","import React, { Component } from 'react';\nimport { Subscribe } from 'bey';\nimport injectSheet from 'react-jss';\nimport PropTypes from 'prop-types';\nimport { Form, Field, FormSpy } from 'react-final-form';\nimport {\n  Button, Alert, Card, Elevation,\n} from '@blueprintjs/core';\nimport FormTextField from '../../components/FormTextField';\nimport FormMultiSelectField from '../../components/FormMultiSelectField';\nimport validate from './form-validations';\nimport { actions, selectors, state } from '../../state/contacts';\nimport { ROUTES } from '../../router/routes';\nimport { actions as HistoryActions } from '../../state/history';\n\nconst styles = {\n  formCard: {\n    width: '300px',\n    margin: '0.5em 1em',\n    padding: '1em',\n  },\n  formContainer: {\n    paddingTop: '16px',\n  },\n  buttonsContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n};\n\nclass CreateOrEditContactPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { alertIsOpen: false };\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleContinue = this.handleContinue.bind(this);\n  }\n\n  componentDidMount() {\n    const { route: { params: { id } } } = this.props;\n    if (id) {\n      actions.loadData(id);\n    }\n    if (HistoryActions.router) {\n      // eslint-disable-next-line no-unused-vars\n      const canDeactivate = (routerProvided) => (toState, fromState) => {\n        const isContactModified = state.get().modified;\n        if (isContactModified) {\n          return new Promise((resolve, reject) => {\n            this.setState({ alertIsOpen: true, continue: reject, cancel: resolve });\n          });\n        }\n        return true;\n      };\n      HistoryActions.router.canDeactivate(ROUTES.ADD_CONTACT, canDeactivate);\n      HistoryActions.router.canDeactivate(ROUTES.EDIT_CONTACT, canDeactivate);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { route: { params: { id } } } = this.props;\n    if (id !== nextProps.route.params.id) {\n      actions.loadData(nextProps.route.params.id);\n    }\n  }\n\n  handleCancel() {\n    this.state.continue();\n    this.setState({ alertIsOpen: false });\n  }\n\n  handleContinue() {\n    this.state.cancel();\n    this.setState({ alertIsOpen: false });\n  }\n\n  render() {\n    const { alertIsOpen } = this.state;\n    const { classes } = this.props;\n    return (\n      <div>\n        <Alert\n          cancelButtonText=\"Cancel\"\n          confirmButtonText=\"Continue\"\n          icon=\"trash\"\n          intent=\"danger\"\n          isOpen={alertIsOpen}\n          onCancel={this.handleCancel}\n          onConfirm={this.handleContinue}\n        >\n          <p>Are you sure you want leave? Your changes will be lost.</p>\n        </Alert>\n        <Subscribe to={state} on={selectors.contactForm}>\n          {(contacts) => (\n            <Form\n              onSubmit={actions.saveContact}\n              validate={validate}\n              initialValues={this.props.route.params.id ? contacts.current : {}}\n              render={({\n                handleSubmit, pristine, invalid, submitting, reset,\n              }) => (\n                <Card\n                  interactive\n                  elevation={Elevation.TWO}\n                  className={classes.formCard}\n                >\n                  <form className={classes.formContainer} onSubmit={handleSubmit}>\n                    <FormSpy\n                      onChange={({ dirty }) => {\n                        actions.setModified(dirty && !submitting);\n                      }}\n                    />\n                    <Field\n                      name=\"name\"\n                      label=\"Name\"\n                      placeholder=\"Name\"\n                      component={FormTextField}\n                    />\n                    <Field\n                      name=\"email\"\n                      label=\"Email\"\n                      placeholder=\"Email\"\n                      component={FormTextField}\n                    />\n                    <Field\n                      name=\"phoneNumber\"\n                      label=\"Phone number\"\n                      placeholder=\"Phone number\"\n                      component={FormTextField}\n                    />\n                    <Field\n                      name=\"imgUrl\"\n                      label=\"Profile image url\"\n                      placeholder=\"Profile image url\"\n                      component={FormTextField}\n                    />\n                    <Field\n                      name=\"groups\"\n                      component={FormMultiSelectField}\n                      label=\"Groups\"\n                      options={Object.values(contacts.groups).map((group) => ({\n                        value: group.id,\n                        text: group.name,\n                      }))}\n                    />\n                    <div className={classes.buttonsContainer}>\n                      <Button\n                        text=\"Save contact\"\n                        icon=\"floppy-disk\"\n                        intent=\"success\"\n                        type=\"submit\"\n                        disabled={pristine || submitting || invalid}\n                      />\n                      <Button\n                        text=\"Reset values\"\n                        disabled={pristine || submitting}\n                        icon=\"refresh\"\n                        intent=\"danger\"\n                        onClick={reset}\n                      />\n                    </div>\n                  </form>\n                </Card>\n              )}\n            />\n          )}\n        </Subscribe>\n      </div>\n    );\n  }\n}\n\nCreateOrEditContactPage.propTypes = {\n  route: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default injectSheet(styles)(CreateOrEditContactPage);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport injectSheet from 'react-jss';\nimport {\n  Button, Card, Elevation, Classes,\n} from '@blueprintjs/core';\n\nconst styles = {\n  // eslint-disable-next-line arrow-body-style\n  cardRoot: (props) => {\n    return ({\n      width: props.big ? 'auto' : '300px',\n      padding: props.big ? 'inherit' : '0px',\n      '& .bp3-card.bp3-interactive': {\n        margin: '1em',\n        padding: 0,\n      },\n    });\n  },\n  cardContentContainer: {\n    position: 'relative',\n    textAlign: 'center',\n    height: 300,\n    width: 300,\n  },\n  cardHeader: {\n    position: 'absolute',\n    bottom: '0px',\n    right: '0px',\n    left: '0px',\n    padding: '8px',\n    margin: '0',\n    color: 'white',\n    background: 'rgba(0, 0, 0, 0.54)',\n  },\n  cardImage: {\n    maxHeight: 300,\n    maxWidth: 300,\n  },\n  cardTextContainer: {\n    fontSize: '12pt',\n    padding: '8px',\n  },\n  cardTextGroup: {\n    fontSize: '10pt',\n    color: 'grey',\n  },\n  buttonContainer: {\n    padding: '8px',\n    position: 'relative',\n  },\n  button: {\n    marginRight: '8px',\n  },\n};\n\nconst ContactCard = ({\n  // eslint-disable-next-line no-unused-vars\n  contact, onEditClick, onDeleteClick, big, loading, classes,\n}) => {\n  const {\n    name, imgUrl, email, groupNames,\n  } = contact;\n  const loadingClass = loading ? Classes.SKELETON : '';\n  return (\n    <Card\n      interactive\n      elevation={Elevation.TWO}\n      className={classes.cardRoot}\n    >\n      <div className={classes.cardContentContainer}>\n        <h1 className={classes.cardHeader}>\n          <span className={loadingClass}>{name || '...'}</span>\n        </h1>\n        <img\n          alt=\"contact\"\n          src={imgUrl || 'http://i.imgur.com/mbZIBzc.png'}\n          className={classes.cardImage}\n        />\n      </div>\n      <div className={classes.cardTextContainer}>\n        <span className={loadingClass}>{email || '...'}</span>\n        <br />\n        <span className={`${classes.cardTextGroup} ${loadingClass}`}>\n          {groupNames || 'Without group'}\n        </span>\n      </div>\n      <div className={classes.buttonContainer}>\n        <Button onClick={onEditClick} text=\"Edit\" className={classes.button} />\n        <Button onClick={onDeleteClick} text=\"Delete\" className={classes.button} />\n      </div>\n    </Card>\n  );\n};\n\nContactCard.propTypes = {\n  contact: PropTypes.object.isRequired,\n  onEditClick: PropTypes.func.isRequired,\n  onDeleteClick: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  big: PropTypes.bool,\n  loading: PropTypes.bool,\n};\n\nContactCard.defaultProps = {\n  big: false,\n  loading: false,\n};\n\nexport default injectSheet(styles)(ContactCard);\n","import React, { useEffect } from 'react';\nimport posed, { PoseGroup } from 'react-pose';\nimport PropTypes from 'prop-types';\nimport injectSheet from 'react-jss';\nimport { Button } from '@blueprintjs/core';\nimport ContactCard from '../../components/ContactCard';\nimport { useMultiple } from '../../state/helpers/useStateProvider';\nimport Contacts, { actions as ContactsActions, selectors as ContactsSelectors } from '../../state/contacts';\nimport Global from '../../state/global';\nimport { actions as HistoryActions } from '../../state/history';\n\nconst styles = {\n  contactListItem: {\n    '&.bp3-tag.bp3-interactive': {\n      display: 'flex',\n      justifyContent: 'space-between',\n      height: '60px',\n      paddingLeft: '8px',\n      margin: '3px',\n      backgroundColor: '#394b59',\n      color: 'white',\n      boxShadow: '0 0 0 1px rgba(16, 22, 26, 0.2), 0 0 0 rgba(16, 22, 26, 0), 0 1px 1px rgba(16, 22, 26, 0.4)',\n    },\n    '&.bp3-tag.bp3-interactive:hover': {\n      background: '#202B33',\n    },\n    '&.bp3-tag.bp3-interactive.selected': {\n      background: '#5C7080',\n    },\n  },\n  contactListItemImage: {\n    maxWidth: 50,\n    minWidth: 50,\n    maxHeight: 50,\n  },\n  contactListItemTextContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignSelf: 'center',\n    marginLeft: '2rem',\n  },\n  contactListItemText1stLine: {\n    fontWeight: 'bolder',\n  },\n  contactListItemText2ndLine: {\n    fontSize: '12px',\n  },\n  contactListItemAvatar: {\n    width: '50px',\n    height: '50px',\n    fontSize: '35px',\n    backgroundColor: '#182026',\n    color: 'white',\n    textAlign: 'center',\n    lineHeight: '50px',\n    borderRadius: '50px',\n  },\n  contactListRoot: {\n    margin: '0.2em 0 0 0',\n    display: 'flex',\n    flex: '1 0 auto',\n    flexDirection: 'row',\n  },\n  contactListItemsContainer: {\n    display: 'flex',\n    flex: '1 0 auto',\n    flexDirection: 'column',\n  },\n  contactListCardsContainer: {\n    flexWrap: 'wrap',\n  },\n};\n\nconst Pop = posed.div({\n  hoverable: true,\n  init: { scale: 1 },\n  hover: { scale: 1.2 },\n});\n\nconst Item = posed.div({\n  enter: {\n    opacity: 1,\n    transition: ({ i }) => ({ delay: i * 50 }),\n  },\n  exit: { opacity: 0 },\n  props: { i: 0 },\n});\n\nfunction ContactListCards(props) {\n  return props.list.map((contact) => (\n    <ContactCard\n      key={`contact-${contact.id}`}\n      contact={contact}\n      onEditClick={() => HistoryActions.transitionToEditContact(contact.id)}\n      onDeleteClick={() => ContactsActions.deleteContact(contact.id)}\n    />\n  ));\n}\n\nfunction ContactListItems({\n  classes, list, current,\n}) {\n  return (\n    <PoseGroup>\n      {list.map((contact, i) => (\n        <Item key={`contact-${contact.id}`} id={contact.id} i={i}>\n          <div\n            role=\"presentation\"\n            onKeyPress={(e) => (e.key === 'Enter') ? HistoryActions.transitionToContactDetail(contact.id) : false}\n            onClick={() => HistoryActions.transitionToContactDetail(contact.id)}\n            className={`bp3-tag bp3-interactive ${classes.contactListItem} ${\n              current.id === contact.id ? 'selected' : ''\n            }`}\n          >\n            <div style={{ display: 'flex' }}>\n              {contact.imgUrl ? (\n                <Pop>\n                  <img\n                    src={contact.imgUrl}\n                    alt={contact.name}\n                    className={classes.contactListItemImage}\n                  />\n                </Pop>\n              ) : (\n                <Pop className={classes.contactListItemAvatar}>\n                  { contact.name.substring(0, 1).toUpperCase() }\n                </Pop>\n              )}\n              <div className={classes.contactListItemTextContainer}>\n                <div className={classes.contactListItemText1stLine}>{contact.name}</div>\n                <div className={classes.contactListItemText2ndLine}>{contact.groupNames || 'Without group'}</div>\n              </div>\n            </div>\n            <Pop>\n              <Button\n                icon=\"delete\"\n                onClick={(e) => {\n                  ContactsActions.deleteContact(contact.id);\n                  e.stopPropagation();\n                }}\n              />\n            </Pop>\n          </div>\n        </Item>\n      ))}\n    </PoseGroup>\n  );\n}\n\nconst ContactList = React.memo((props) => {\n  // const [contacts, global] = ContactsState.useMultipleStates(Contacts, Global);\n  const { contacts, global } = useMultiple({\n    contacts: Contacts,\n    global: Global,\n  }, {\n    contacts: ContactsSelectors.contactList,\n    global: ContactsSelectors.contactListGlobal,\n  }, 'ContactList');\n\n  useEffect(() => {\n    // Load the contact list\n    ContactsActions.loadData();\n  }, []);\n\n  return (\n    <div className={props.classes.contactListRoot}>\n      {global.mode === 'list' ? (\n        <div className={props.classes.contactListItemsContainer}>\n          <ContactListItems {...props} current={contacts.current} list={Object.values(contacts.list)} />\n        </div>\n      ) : (\n        <div className={props.classes.contactListCardsContainer}>\n          <ContactListCards {...props} current={contacts.current} list={Object.values(contacts.list)} />\n        </div>\n      )}\n    </div>\n  );\n});\n\nContactListCards.propTypes = {\n  list: PropTypes.array.isRequired,\n  route: PropTypes.object.isRequired,\n};\n\nContactListItems.propTypes = {\n  list: PropTypes.array.isRequired,\n  current: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nContactList.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default injectSheet(styles)(ContactList);\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport injectSheet from 'react-jss';\nimport ContactCard from '../../components/ContactCard';\nimport Contacts, { actions as ContactsActions, selectors as ContactsSelectors } from '../../state/contacts';\nimport { actions as HistoryActions } from '../../state/history';\nimport { useMultiple } from '../../state/helpers/useStateProvider';\n\nconst styles = {\n  contactDetailRoot: {\n    margin: '0.5em 1em',\n    width: '300px',\n  },\n};\n\nfunction ContactPage(props) {\n  const { contacts } = useMultiple({ contacts: Contacts }, { contacts: ContactsSelectors.contactDetail }, 'ContactDetail');\n\n  useEffect(() => {\n    // Load the current contact\n    ContactsActions.loadData(props.route.params.id);\n  }, props.route.params.id);\n\n  return (\n    <div className={props.classes.contactDetailRoot}>\n      <ContactCard\n        big\n        contact={contacts.current}\n        loading={contacts.loading}\n        onEditClick={() => HistoryActions.transitionToEditContact(props.route.params.id)}\n        onDeleteClick={() => ContactsActions.deleteContact(props.route.params.id)}\n      />\n    </div>\n  );\n}\n\nContactPage.propTypes = {\n  route: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default injectSheet(styles)(ContactPage);\n","import { requiredValidation, maxLength } from '../../globals/validators';\n\nexport default function validate(values) {\n  const errors = {};\n  if (!requiredValidation(values.name)) {\n    errors.name = 'Name is required';\n  } else if (!maxLength(values.name, 4)) {\n    errors.name = 'Name has to 4 o more characters';\n  }\n  return errors;\n}\n","import { state as stateCreate, update } from 'bey';\nimport { actions as SnackbarActions } from '../snackbar';\nimport {\n  getGroupsService,\n  getGroupService,\n  postGroupService,\n  updateGroupService,\n} from '../../services/groups';\nimport { actions as HistoryActions } from '../history';\nimport loading from '../helpers/loading';\n\nconst groups = stateCreate({\n  list: {},\n  current: {},\n});\n\nasync function loadData(id) {\n  let groupsResponse;\n  if (id) {\n    groupsResponse = await getGroupService(id);\n    update(groups, (state) => {\n      state.current = groupsResponse;\n    });\n  } else {\n    groupsResponse = await getGroupsService();\n    update(groups, (state) => {\n      state.list = groupsResponse;\n    });\n  }\n}\n\nasync function saveGroup(group) {\n  try {\n    if (group.id) {\n      await updateGroupService(group);\n      SnackbarActions.setMessage('Group updated successfully');\n    } else {\n      await postGroupService(group);\n      SnackbarActions.setMessage('Group created successfully');\n    }\n\n    update(groups, (state) => {\n      state.current = group;\n    });\n  } catch (error) {\n    SnackbarActions.displayError(error);\n  }\n\n  HistoryActions.goBack();\n}\n\nconst exported = {\n  name: 'groups',\n  state: groups,\n  actions: { loadData, saveGroup },\n};\nexport const { state, actions } = exported;\nexport default loading(exported);\n","import React, { Component } from 'react';\nimport { Subscribe } from 'bey';\nimport PropTypes from 'prop-types';\nimport injectSheet from 'react-jss';\nimport { Form, Field } from 'react-final-form';\nimport { Button, Card, Elevation } from '@blueprintjs/core';\nimport FormTextField from '../../components/FormTextField';\nimport validate from './form-validations';\nimport { actions as GroupActions, state as GroupState } from '../../state/groups';\n\nconst styles = {\n  formCard: {\n    width: '300px',\n    margin: '0.5em 1em',\n    padding: '1em',\n  },\n  formContainer: {\n    paddingTop: '16px',\n  },\n  buttonsContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n};\n\nclass CreateOrEditGroupPage extends Component {\n  componentDidMount() {\n    const { id } = this.props.route.params;\n    if (id) {\n      GroupActions.loadData(id);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.route.params.id !== nextProps.route.params.id) {\n      GroupActions.loadData(nextProps.route.params.id);\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <Subscribe to={GroupState}>\n        {(contacts) => (\n          <Form\n            onSubmit={GroupActions.saveGroup}\n            validate={validate}\n            initialValues={contacts.current}\n            render={({\n              handleSubmit, pristine, invalid, submitting, form: { reset },\n            }) => (\n              <Card\n                interactive\n                elevation={Elevation.TWO}\n                className={classes.formCard}\n              >\n                <form className={classes.formContainer} onSubmit={handleSubmit}>\n                  <Field name=\"name\" label=\"Name\" placeholder=\"Name\" component={FormTextField} />\n                  <div className={classes.buttonsContainer}>\n                    <Button\n                      icon=\"floppy-disk\"\n                      intent=\"success\"\n                      type=\"submit\"\n                      disabled={pristine || submitting || invalid}\n                      text=\"Save group\"\n                    />\n                    <Button\n                      icon=\"refresh\"\n                      intent=\"danger\"\n                      onClick={reset}\n                      disabled={pristine || submitting}\n                      text=\"Reset values\"\n                    />\n                  </div>\n                </form>\n              </Card>\n            )}\n          />\n        )}\n      </Subscribe>\n    );\n  }\n}\n\nCreateOrEditGroupPage.propTypes = {\n  route: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default injectSheet(styles)(CreateOrEditGroupPage);\n","import React, { useEffect, useState } from 'react';\nimport Sidebar from 'react-sidebar';\nimport PropTypes from 'prop-types';\nimport injectSheet from 'react-jss';\nimport { Button } from '@blueprintjs/core';\nimport { state as GlobalState, actions as GlobalActions } from '../../state/global';\n\nconst styles = {\n  sidebar: {\n    root: { position: 'initial' },\n    content: { display: 'none' },\n    overlay: { display: 'none' },\n    sidebar: { background: '#30404d', paddingTop: '3.5rem' },\n  },\n};\n\nconst mql = window.matchMedia('(min-width: 800px)');\n\nfunction DrawerMenu(props) {\n  const [state, setState] = useState({ isSmallScreen: !mql.matches, isOpen: true });\n\n  function mediaQueryChanged() {\n    setState({ ...state, isSmallScreen: !mql.matches });\n  }\n\n  function isOpenChanged() {\n    const isOpen = GlobalState.get().menu.right;\n    if (isOpen !== state.isOpen) {\n      setState({ ...state, isOpen });\n    }\n  }\n\n  useEffect(() => {\n    mql.addListener(mediaQueryChanged);\n    GlobalState.on(isOpenChanged);\n    return function cleanup() {\n      mql.removeListener(mediaQueryChanged);\n      GlobalState.off(isOpenChanged);\n    };\n  });\n\n  const { isOpen } = state;\n\n  if (!state.isSmallScreen) {\n    return props.children;\n  }\n  return (\n    <Sidebar\n      open={isOpen}\n      pullRight\n      touch\n      styles={styles.sidebar}\n      onSetOpen={(open) => {\n        GlobalActions.setRightMenuVisibility(open);\n      }}\n      sidebar={(\n        <div>\n          <Button\n            className=\"bp3-minimal\"\n            icon=\"cross\"\n            onClick={() => GlobalActions.setRightMenuVisibility(false)}\n          />\n          {props.children}\n        </div>\n      )}\n    >\n      {\n        <Button\n          className=\"bp3-minimal\"\n          icon=\"menu\"\n          onClick={() => GlobalActions.setRightMenuVisibility(!isOpen)}\n        />\n      }\n    </Sidebar>\n  );\n}\n\nDrawerMenu.propTypes = {\n  children: PropTypes.object.isRequired,\n  // classes: PropTypes.object.isRequired,\n};\n\nexport default injectSheet(styles)(DrawerMenu);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport injectSheet from 'react-jss';\nimport About from '../containers/About';\nimport ContactForm from '../containers/ContactForm';\nimport ContactList from '../containers/ContactList';\nimport ContactDetail from '../containers/ContactDetail';\nimport GroupForm from '../containers/GroupForm';\nimport DrawerMenu from '../containers/Menu/DrawerMenu';\nimport { ROUTES } from './routes';\n\nconst styles = {\n  contactDetailsLayout: {\n    display: 'flex',\n    flex: '1 0 auto',\n  },\n  editContactLayout: {\n    display: 'flex',\n    flex: '1 0 auto',\n  },\n};\n\nfunction ComponentSelector({ route, classes }) {\n  if (!route) {\n    return <About route={route} />;\n  }\n\n  switch (route.name) {\n    case ROUTES.ADD_GROUP:\n      return <GroupForm route={route} />;\n    case ROUTES.CONTACT_DETAILS:\n      return (\n        <div className={classes.contactDetailsLayout}>\n          <ContactList />\n          <DrawerMenu>\n            <ContactDetail route={route} />\n          </DrawerMenu>\n        </div>\n      );\n    case ROUTES.LIST_CONTACTS:\n      return <ContactList route={route} />;\n    case ROUTES.ADD_CONTACT:\n      return <ContactForm route={route} />;\n    case ROUTES.EDIT_CONTACT:\n      return (\n        <div className={classes.editContactLayout}>\n          <ContactList />\n          <DrawerMenu>\n            <ContactForm route={route} />\n          </DrawerMenu>\n        </div>\n      );\n    case ROUTES.HOME:\n    default:\n      return <About route={route} />;\n  }\n}\n\nComponentSelector.propTypes = {\n  route: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default injectSheet(styles)(ComponentSelector);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  MenuItem, Menu, Popover, Button, Position,\n} from '@blueprintjs/core';\n\nconst IconElementList = ({ changeListMode }) => (\n  <Popover\n    content={(\n      <Menu>\n        <MenuItem text=\"List\" onClick={() => changeListMode('list')} />\n        <MenuItem text=\"Card\" onClick={() => changeListMode('card')} />\n      </Menu>\n    )}\n    position={Position.RIGHT_TOP}\n  >\n    <Button icon=\"more\" />\n  </Popover>\n);\n\nIconElementList.propTypes = {\n  changeListMode: PropTypes.func.isRequired,\n};\n\nexport default IconElementList;\n","import React from 'react';\nimport { Subscribe } from 'bey';\nimport PropTypes from 'prop-types';\nimport { Navbar, Button, Alignment } from '@blueprintjs/core';\nimport IconElementList from '../../components/IconElementList';\nimport { state as GlobalState, actions as GlobalActions } from '../../state/global';\nimport { ROUTES } from '../../router/routes';\n\nfunction MyNavbar({\n  route,\n}) {\n  return (\n    <Subscribe to={GlobalState}>\n      {() => (\n        <React.Fragment>\n          <Navbar>\n            <Navbar.Group align={Alignment.LEFT}>\n              <Button\n                className=\"bp3-minimal\"\n                icon=\"menu\"\n                onClick={GlobalActions.toggleLeftMenu}\n              />\n              <Navbar.Divider />\n              <Navbar.Heading>Contacts app</Navbar.Heading>\n            </Navbar.Group>\n            <Navbar.Group align={Alignment.RIGHT}>\n              {route.name === ROUTES.LIST_CONTACTS ? (\n                <IconElementList changeListMode={GlobalActions.changeMode} />\n              ) : null}\n            </Navbar.Group>\n          </Navbar>\n        </React.Fragment>\n      )}\n    </Subscribe>\n  );\n}\n\nMyNavbar.propTypes = {\n  route: PropTypes.object.isRequired,\n};\n\nexport default MyNavbar;\n","import React from 'react';\nimport {\n  Toaster, Toast, Position, ProgressBar,\n} from '@blueprintjs/core';\nimport Global, { selectors as GlobalSelectors } from '../../state/global';\nimport { useMultiple } from '../../state/helpers/useStateProvider';\n\nfunction Loader() {\n  const { global } = useMultiple({ global: Global }, { global: GlobalSelectors.loader }, 'Loader');\n\n  return (\n    <Toaster position={Position.TOP}>\n      {global.loading.state ? (\n        <Toast\n          message={(\n            <div>\n              <span>{`Loading ${global.loading.message}...`}</span>\n              <ProgressBar />\n            </div>\n          )}\n        />\n      ) : null}\n    </Toaster>\n  );\n}\n\nexport default Loader;\n","import React from 'react';\nimport { Toaster, Toast, Position } from '@blueprintjs/core';\nimport { Subscribe } from 'bey';\nimport { state as SnackbarState, actions as SnackbarActions } from '../../state/snackbar';\n\nfunction SB() {\n  return (\n    <Subscribe to={SnackbarState}>\n      {(message) => (\n        <Toaster position={Position.BOTTOM}>\n          {message ? (\n            <Toast\n              message={message || ''}\n              timeout={3000}\n              onDismiss={SnackbarActions.close}\n            />\n          ) : null}\n        </Toaster>\n      )}\n    </Subscribe>\n  );\n}\n\nexport default SB;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport injectSheet from 'react-jss';\nimport Sidebar from 'react-sidebar';\nimport { Menu, MenuItem } from '@blueprintjs/core';\nimport { actions } from '../../state/history';\nimport Global, { actions as GlobalActions } from '../../state/global';\nimport { ROUTES } from '../../router/routes';\nimport { useMultiple } from '../../state/helpers/useStateProvider';\n\nconst styles = {\n  sidebar: {\n    sidebar: {\n      background: '#30404d',\n    },\n  },\n  leftMenuRoot: {\n    paddingTop: '4rem',\n    '&.selected': {\n      background: '#5C7080',\n    },\n  },\n};\n\nfunction selectMenuOption(e) {\n  actions.transitionToMenuOption(e.target.textContent);\n}\n\nfunction InnerMenu({\n  route, smallScreen, classes,\n}) {\n  function handleClick(e) {\n    selectMenuOption(e);\n    if (smallScreen) {\n      GlobalActions.toggleLeftMenu();\n    }\n  }\n\n  return (\n    <Menu className={classes.leftMenuRoot}>\n      <MenuItem\n        active={route.name === ROUTES.HOME}\n        onClick={handleClick}\n        text=\"About\"\n      />\n      <MenuItem\n        active={\n          [ROUTES.LIST_CONTACTS, ROUTES.CONTACT_DETAILS, ROUTES.EDIT_CONTACT].indexOf(route.name) !== -1\n        }\n        onClick={handleClick}\n        text=\"List\"\n      />\n      <MenuItem\n        active={route.name === ROUTES.ADD_CONTACT}\n        onClick={handleClick}\n        text=\"Add Contact\"\n      />\n      <MenuItem\n        active={route.name === ROUTES.ADD_GROUP}\n        onClick={handleClick}\n        text=\"Add Group\"\n      />\n    </Menu>\n  );\n}\n\nconst mql = window.matchMedia('(min-width: 800px)');\n\nconst StyledInnerMenu = injectSheet(styles)(InnerMenu);\n\nfunction LeftMenu(props) {\n  const [smallScreen, setSmallScreen] = useState(!mql.matches);\n\n  function mediaQueryChanged() {\n    setSmallScreen(!mql.matches);\n  }\n\n  useEffect(() => {\n    mql.addListener(mediaQueryChanged);\n    return function cleanup() {\n      mql.removeListener(mediaQueryChanged);\n    };\n  });\n\n  const { global: visible } = useMultiple({ global: Global }, { global: (state) => state.menu.left }, 'LeftMenu');\n\n  return (\n    () => {\n      if (visible) {\n        if (!smallScreen) {\n          return <StyledInnerMenu smallScreen={smallScreen} {...props} />;\n        }\n        return (\n          <Sidebar\n            open={visible}\n            styles={styles.sidebar}\n            onSetOpen={GlobalActions.toggleLeftMenu}\n            sidebar={<StyledInnerMenu smallScreen={smallScreen} {...props} />}\n          >\n            {false}\n          </Sidebar>\n        );\n      }\n      return false;\n    }\n  )();\n}\n\nInnerMenu.propTypes = {\n  route: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  smallScreen: PropTypes.bool.isRequired,\n};\n\nexport default LeftMenu;\n","import React from 'react';\nimport ComponentSelector from './router/ComponentSelector';\nimport Navbar from './containers/Navbar';\nimport Loader from './containers/Loader';\nimport Snackbar from './containers/Snackbar';\nimport LeftMenu from './containers/Menu/LeftMenu';\nimport History from './state/history';\nimport { useMultiple } from './state/helpers/useStateProvider';\n\nfunction App({\n  ...rest\n}) {\n  const { history: { route } } = useMultiple({ history: History }, undefined, 'ComponentSelector');\n  return (\n    <div className=\"bp3-fill\" style={{ backgroundColor: '#30404d', minHeight: '100vh' }}>\n      <Navbar route={route} />\n      <Loader />\n      <div style={{ display: 'flex' }}>\n        <LeftMenu route={route} />\n        <ComponentSelector route={route} {...rest} />\n      </div>\n      <Snackbar />\n    </div>\n  );\n}\n\nApp.propTypes = {\n\n};\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          // eslint-disable-next-line no-console\n          console.log('This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://goo.gl/SC7cgQ');\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      // eslint-disable-next-line no-param-reassign\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              // eslint-disable-next-line no-console\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              // eslint-disable-next-line no-console\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      // eslint-disable-next-line no-console\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404\n        || response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      // eslint-disable-next-line no-console\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { StateInspector } from 'reinspect';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nconst Root = () => (\n  <StateInspector>\n    <App />\n  </StateInspector>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}